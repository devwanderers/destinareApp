{"version":3,"sources":["hooks/useValidate.js","components/PrivateSale/FormPrivateSale.js","components/PrivateSale/ModalCompromisePackage.js","components/PrivateSale/CardCompromisePlan.js","components/PrivateSale/CardReservePlan.js","views/PresaleView.js","hooks/scInteractions/preSaleHook.js","services/helpers.js","components/Buttons/ButtonSpinner.js","components/Cards/CardContainer.js","components/Inputs/Input.js","store/reducers/whitelist/hooks.js","hooks/scInteractions/privateSaleHooks.js","constants/stakingLevels.js","services/yupValidations.js"],"names":["useValidate","params","useState","valid","setValid","useEffect","length","_valid","reduce","acc","p","FormPrivateSale","account","error","setError","requestWhitelist","useRequestWhitelist","formik","useFormik","validateOnMount","initialValues","email","userName","validationSchema","Yup","validations","mail","onSubmit","values","a","setSubmitting","walletAddresses","res","payload","message","handleSubmit","className","variant","size","value","disabled","name","onChange","handleChange","onBlur","handleBlur","isSubmitting","type","isValid","loading","SALE_TYPES","SALE_PROPERIE","ModalCompromisePackage","title","packageId","visible","onClose","saleType","setLoading","updateWhitelist","useUpdateWhitelist","handleCompromise","setTimeout","maskClosable","footer","centered","onCancel","onClick","CardCompromisePlan","subtitle","properties","verified","cls","Fragment","style","top","map","titlePropertie","CardReservePlan","lock","paid","PrivateSaleView","history","useHistory","useWeb3React","useSCData","fetchedData","data","setVisible","selectedPlan","setPlan","setPaying","planCompromised","setPlanCompromised","alreadyRequest","useAlreadyRequestWhitelist","whitelist","useWhiteList","fetchWhiteList","useFetchWhiteList","useFetchingWhiteList","buyPreSale","whiteList","library","useCallback","plan","callback","contract","eth","Contract","DestinareContract","process","methods","buyPreSaleTokens","send","from","amount","then","tx","console","log","undefined","_err","err","useBuyPreSale","useDeepCompareEffect","package","_selectedPackage","stakingLvlsPre","find","s","packagePreSale","height","PageLoading","reset","privateSale","push","InvestPath","to","transactionHash","preSale","Date","getTime","handleSelectPackage","CardContainer","input","replace","split","filter","cond","join","trim","escapeRegExp","string","classes","base","pill","none","small","normal","large","primary","secondary","danger","primaryborder","warning","warningLink","spinnerSize","ButtonSpinner","forwardRef","ref","children","restProps","displayName","borderOpacity","rounded","medium","xl","Input","useClearWhiteListReducer","dispatch","useDispatch","clearWhitelistReducer","useSelector","alreadyRequestSelector","hasRequestWhitelist","accountWhitelistSelector","fetchWhitelist","createWhitelist","updateWhiteList","whiteListFetchSelector","whiteListFetchingSelector","useClaimPrivateSale","useActiveWeb3React","reloaData","useReloadData","stakeId","claimPrivateSaleTokens","tokens","useBuyPrivateSale","buyPrivateSaleTokens","stakingLvlsPrivate","SUPPORTED_FORMATS","regex","password","min","max","matches","required","passwordConfirmation","oneOf","test","validator","isAlphanumeric","lowercase","phone","isAlpha","birthDate","country","state","city","line","postalCode","file","includes","min20Usd","_v","parseFloat","no0Usd","generic","boolean","onlyNumber","isColor","Option","color","number","array","walletAddress","isEthereumAddress","staking","totalTokens","validateIsNotCurrentUser","currentUser","currentMembers","userMail","index"],"mappings":"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","file":"static/js/12.c4c6be7a.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useState, useEffect } from 'react'\n\nconst useValidate = (params = []) => {\n    const [valid, setValid] = useState(false)\n\n    useEffect(() => {\n        if (params.length > 0) {\n            const _valid = params.reduce((acc, p) => {\n                if (acc) return acc\n                return p\n            }, false)\n            setValid(_valid)\n        }\n    }, [params])\n\n    return valid\n}\n\nexport default useValidate\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport Input from '../Inputs/Input'\nimport ButtonSpinner from './../Buttons/ButtonSpinner'\nimport { validations } from '../../services/yupValidations'\nimport { useRequestWhitelist } from '../../store/reducers/whitelist/hooks'\n\nconst FormPrivateSale = ({ account }) => {\n    const [error, setError] = useState(null)\n    const requestWhitelist = useRequestWhitelist()\n\n    const formik = useFormik({\n        validateOnMount: true,\n        initialValues: {\n            email: '',\n            userName: '',\n        },\n        validationSchema: Yup.object({\n            email: validations.mail,\n            userName: validations.userName,\n        }),\n        onSubmit: async (values, { setSubmitting }) => {\n            setSubmitting(true)\n            const res = await requestWhitelist({\n                ...values,\n                walletAddresses: [account],\n            })\n\n            if (res?.error) {\n                setError(res.payload.message)\n            }\n            setSubmitting(false)\n        },\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"space-y-4 mt-4\">\n                <div className=\"w-full\">\n                    <div className=\"text-black-2 dark:text-gray-3\">\n                        <span className=\" text-red-0\">*</span> Address to\n                        whitelist\n                    </div>\n                    <Input\n                        variant=\"secondary\"\n                        size=\"normal\"\n                        className=\"w-full dark:text-white\"\n                        value={account}\n                        disabled\n                    />\n                </div>\n                <div className=\"w-full\">\n                    <div className=\"text-black-2 dark:text-gray-3\">\n                        <span className=\" text-red-0\">*</span> Email\n                    </div>\n                    <Input\n                        variant=\"secondary\"\n                        size=\"normal\"\n                        className=\"w-full\"\n                        name=\"email\"\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        disabled={formik.isSubmitting}\n                    />\n                </div>\n                <div className=\"w-full\">\n                    <div className=\"text-black-2 dark:text-gray-3\">\n                        <span className=\" text-red-0\">*</span> Username\n                    </div>\n                    <Input\n                        variant=\"secondary\"\n                        size=\"normal\"\n                        className=\"w-full\"\n                        name=\"userName\"\n                        value={formik.values.userName}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        disabled={formik.isSubmitting}\n                    />\n                </div>\n            </div>\n            {error && <div className=\"text-red-0 mt-3\">* {error}</div>}\n            <div className=\"w-full flex justify-center mt-8 mb-2\">\n                <ButtonSpinner\n                    type=\"submit\"\n                    size=\"normal\"\n                    className=\"mt-4 w-6/12\"\n                    disabled={!formik.isValid}\n                    loading={formik.isSubmitting}\n                >\n                    Apply\n                </ButtonSpinner>\n            </div>\n        </form>\n    )\n}\n\nFormPrivateSale.propTypes = {}\n\nexport default FormPrivateSale\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'antd'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport Input from '../Inputs/Input'\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\nimport useDarkMode from '../../hooks/DarkMode/useDarkMode'\nimport { validations } from '../../services/yupValidations'\nimport { cls } from '../../services/helpers'\nimport { useUpdateWhitelist } from '../../store/reducers/whitelist/hooks'\n\nconst SALE_TYPES = {\n    PRIVATE: 'private',\n    PRESALE: 'presale',\n}\n\nconst SALE_PROPERIE = {\n    [SALE_TYPES.PRIVATE]: 'packagePrivateSale',\n    [SALE_TYPES.PRESALE]: 'packagePreSale',\n}\n\nconst ModalCompromisePackage = ({\n    title,\n    packageId,\n    visible,\n    onClose,\n    saleType = SALE_TYPES.PRIVATE,\n}) => {\n    const [loading, setLoading] = useState(false)\n\n    const updateWhitelist = useUpdateWhitelist()\n\n    const handleCompromise = async () => {\n        if (loading) return\n        setLoading(true)\n        const res = await updateWhitelist({\n            [SALE_PROPERIE[saleType]]: packageId,\n        })\n\n        setTimeout(() => {\n            onClose(!!res?.error)\n        }, 450)\n    }\n\n    useEffect(() => {\n        if (visible && loading) setLoading(false)\n    }, [visible])\n\n    return (\n        <Modal\n            title={\n                <div className=\"mt-2\">\n                    <div className=\"text-black-2 text-xl\">Selected Plan</div>\n                    <div className=\"text-primary font-medium text-base mt-2\">\n                        {title}\n                    </div>\n                </div>\n            }\n            visible={visible}\n            maskClosable={!loading}\n            footer={null}\n            centered\n            onCancel={() => onClose()}\n        >\n            <div className=\"text-center\">\n                <p className=\" text-center\">\n                    You are about to select this plan, once selected it could\n                    not be changed. All plans have been designed with proof of\n                    use, it means that you should stake it in order to receive\n                    rewards.\n                </p>\n                <div className=\"text-lg mt-2 font-medium\">\n                    Do you want to compromise?\n                </div>\n            </div>\n            <div className=\"flex gap-2 mt-6 px-8\">\n                <ButtonSpinner\n                    onClick={() => onClose()}\n                    className=\"w-full\"\n                    variant=\"secondary\"\n                    disabled={loading}\n                >\n                    Cancel\n                </ButtonSpinner>\n                <ButtonSpinner\n                    loading={loading}\n                    onClick={handleCompromise}\n                    className=\"w-full\"\n                >\n                    {!loading && 'Yes'}\n                </ButtonSpinner>\n            </div>\n        </Modal>\n    )\n}\n\nexport default ModalCompromisePackage\n","import React from 'react'\nimport { Spin } from 'antd'\nimport { FaEthereum } from 'react-icons/fa'\nimport CardContainer from '../Cards/CardContainer'\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\nimport { cls } from '../../services/helpers'\n\nconst CardCompromisePlan = ({\n    title = '',\n    subtitle = '',\n    properties = [],\n    onClick,\n    verified,\n}) => {\n    return (\n        <CardContainer\n            className={cls(`\n                px-8 pt-5 xl:pt-12  pb-5 xl:pb-8\n                ${!verified && ''}\n            `)}\n        >\n            {!verified ? (\n                <div className=\"flex flex-col justify-center items-center h-64\">\n                    <div className=\"text-center\">\n                        <div>\n                            <Spin size=\"normal\" />\n                        </div>\n                        <span className=\"ml-2 text-xl text-gray-10 dark:text-gray-3\">\n                            Verifying\n                        </span>\n                    </div>\n                    <p className=\"text-center mt-8 text-gray-10 dark:text-gray-3\">\n                        Thanks for applying, stay tunned on discord once the\n                        verification proccess is finished it would be announced\n                        there.\n                    </p>\n                </div>\n            ) : (\n                <React.Fragment>\n                    <div className=\"flex flex-col w-full\">\n                        <div className=\"md:text-base lg:text-lg xl:text-xl font-bold text-black-2 dark:text-gray-3 leading-none flex gap-1\">\n                            <FaEthereum\n                                className=\"relative\"\n                                style={{ top: '-2px' }}\n                            />\n                            {subtitle}\n                        </div>\n                        <div className=\"mt-6 md:text-base lg:text-lg font-medium leading-none text-primary mb-2\">\n                            {title}\n                        </div>\n                        <div className=\"space-y-5 mt-6\">\n                            {properties.map(([titlePropertie, value]) => {\n                                return (\n                                    <div\n                                        key={`card-${title}-${titlePropertie}`}\n                                        className=\"flex flex-row items-center gap-8\"\n                                    >\n                                        <div className=\"md:text-xs lg:text-sm text-gray-5 dark:text-gray-2 leading-none font-medium w-12  text-right\">\n                                            {titlePropertie}\n                                        </div>\n                                        <div className=\"lg:text-xs xl:text-base font-bold text-black-2 dark:text-gray-6 leading-none\">\n                                            {value}\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <ButtonSpinner\n                        onClick={onClick}\n                        size=\"normal\"\n                        className=\"mt-12 w-full transform\"\n                    >\n                        Compromise\n                    </ButtonSpinner>\n                </React.Fragment>\n            )}\n        </CardContainer>\n    )\n}\n\nexport default CardCompromisePlan\n","import React from 'react'\nimport { BiLock } from 'react-icons/bi'\nimport { AiFillCheckCircle } from 'react-icons/ai'\nimport { FaEthereum } from 'react-icons/fa'\nimport CardContainer from '../Cards/CardContainer'\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\nimport { cls } from '../../services/helpers'\n\nconst CardReservePlan = ({\n    title = '',\n    subtitle = '',\n    properties = [],\n    onClick,\n    lock,\n    paid,\n    loading,\n}) => {\n    return (\n        <CardContainer\n            className={cls(`\n                px-8 pt-5 xl:pt-12  pb-5 xl:pb-8\n            `)}\n        >\n            {paid && (\n                <div className=\" absolute right-0 top-0 p-2 text-3xl text-green-500\">\n                    <AiFillCheckCircle />\n                </div>\n            )}\n            <div className=\"flex flex-col w-full\">\n                <div className=\"md:text-base lg:text-lg xl:text-xl font-bold text-black-2 dark:text-gray-3 leading-none flex gap-1\">\n                    <FaEthereum className=\"relative\" style={{ top: '-2px' }} />\n                    {subtitle}\n                </div>\n                <div className=\"mt-6 md:text-base lg:text-lg font-medium leading-none text-primary mb-2\">\n                    {title}\n                </div>\n                <div className=\"space-y-5 mt-6\">\n                    {properties.map(([titlePropertie, value]) => {\n                        return (\n                            <div\n                                key={`card-${title}-${titlePropertie}`}\n                                className=\"flex flex-row items-center gap-8\"\n                            >\n                                <div className=\"md:text-xs lg:text-sm text-gray-5 dark:text-gray-2 leading-none font-medium w-12  text-right\">\n                                    {titlePropertie}\n                                </div>\n                                <div className=\"lg:text-xs xl:text-base font-bold text-black-2 dark:text-gray-6 leading-none\">\n                                    {value}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            {!paid ? (\n                <ButtonSpinner\n                    onClick={onClick}\n                    size=\"normal\"\n                    className=\"mt-12 w-full transform\"\n                    disabled={lock}\n                    loading={loading}\n                >\n                    {lock ? (\n                        <div className=\"flex gap-2 items-center\">\n                            Buy <BiLock />\n                        </div>\n                    ) : !loading ? (\n                        'Buy'\n                    ) : (\n                        ''\n                    )}\n                </ButtonSpinner>\n            ) : (\n                <ButtonSpinner\n                    onClick={onClick}\n                    size=\"normal\"\n                    className=\"mt-12 w-full transform\"\n                >\n                    Go to investments\n                </ButtonSpinner>\n            )}\n        </CardContainer>\n    )\n}\n\nexport default CardReservePlan\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport CardContainer from '../components/Cards/CardContainer'\nimport FormPrivateSale from '../components/PrivateSale/FormPrivateSale'\nimport { useSCData } from '../store/reducers/scInteractionReducer/hooks'\nimport { useWeb3React } from '@web3-react/core'\nimport useTimeout from './../hooks/useTimeout'\nimport {\n    useAlreadyRequestWhitelist,\n    useWhiteList,\n    useFetchWhiteList,\n    useFetchingWhiteList,\n    useUpdateWhitelist,\n} from './../store/reducers/whitelist/hooks'\nimport useDebounce from './../hooks/useDebounce'\nimport ModalCompromisePackage from '../components/PrivateSale/ModalCompromisePackage'\nimport CardCompromisePlan from '../components/PrivateSale/CardCompromisePlan'\nimport CardReservePlan from './../components/PrivateSale/CardReservePlan'\nimport useDeepCompareEffect from './../hooks/useDeepCompareEffect'\nimport PageLoading from '../components/PageLoadings/PageLoading'\nimport { useBuyPrivateSale } from '../hooks/scInteractions/privateSaleHooks'\nimport useValidate from './../hooks/useValidate'\nimport { useHistory } from 'react-router'\nimport { InvestPath } from './../constants/routerConstants'\nimport { useBuyPreSale } from '../hooks/scInteractions/preSaleHook'\nimport { stakingLvlsPre } from '../constants/stakingLevels'\n\nconst PrivateSaleView = () => {\n    const history = useHistory()\n    const { account } = useWeb3React()\n    const { fetchedData, data } = useSCData()\n    const [verified, setVerified] = useState(false)\n    const [visible, setVisible] = useState(false)\n    const [selectedPlan, setPlan] = useState(null)\n    const [paying, setPaying] = useState(false)\n    const [planCompromised, setPlanCompromised] = useState(null)\n\n    const alreadyRequest = useAlreadyRequestWhitelist()\n    const whitelist = useWhiteList()\n    const fetchWhiteList = useFetchWhiteList()\n\n    const {\n        whiteList: fetchingWhiteList,\n        alreadyRequest: fetchingAlreadyRequest,\n    } = useFetchingWhiteList()\n\n    const buyPreSale = useBuyPreSale()\n    const updateWhitelist = useUpdateWhitelist()\n\n    useDeepCompareEffect(() => {\n        if (whitelist.package !== 0) {\n            const _selectedPackage = stakingLvlsPre.find(\n                (s) => s.packageId === whitelist.packagePreSale\n            )\n            if (_selectedPackage) setPlanCompromised(_selectedPackage)\n        }\n    }, [whitelist])\n\n    const handleSelectPackage = (data) => {\n        setVisible(true)\n        setPlan(data)\n    }\n\n    const handleOnCloseModal = (reset = true) => {\n        setVisible(false)\n        if (reset) setPlan(null)\n    }\n\n    const handlePayPlan = () => {\n        if (whitelist.privateSale.length > 0) {\n            history.push(InvestPath)\n        } else {\n            setPaying(true)\n            buyPreSale(planCompromised, async (err, message, data) => {\n                if (err) {\n                    setPaying(false)\n                    console.log({ err })\n                } else {\n                    const { from, to, transactionHash } = data\n\n                    await updateWhitelist({\n                        preSale: [\n                            new Date().getTime(),\n                            from,\n                            to,\n                            transactionHash,\n                            planCompromised.amount,\n                        ],\n                    })\n\n                    history.push(InvestPath)\n                }\n            })\n        }\n    }\n\n    const loadingPage = useValidate([\n        !account,\n        !fetchWhiteList.alreadyRequest,\n        fetchWhiteList.alreadyRequest &&\n            alreadyRequest &&\n            !fetchWhiteList.whiteList,\n    ])\n\n    if (loadingPage) {\n        return (\n            <div className=\"mx-5\" style={{ height: 'calc(100vh - 109.13px)' }}>\n                <PageLoading />\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"mx-5\" style={{ height: 'calc(100vh - 109.13px)' }}>\n            <ModalCompromisePackage\n                visible={visible}\n                onClose={handleOnCloseModal}\n                saleType=\"presale\"\n                {...selectedPlan}\n            />\n            <div className=\"max-w-960px mx-auto mt-12\">\n                {!alreadyRequest ? (\n                    <CardContainer className=\"px-12 pt-8 pb-6\">\n                        <FormPrivateSale account={account} />\n                    </CardContainer>\n                ) : (\n                    <React.Fragment>\n                        {!planCompromised ? (\n                            <div className=\"grid grid-cols-3 gap-4\">\n                                {stakingLvlsPre.map((s) => {\n                                    const {\n                                        title,\n                                        subtitle,\n                                        properties,\n                                        packageId,\n                                    } = s\n                                    return (\n                                        <CardCompromisePlan\n                                            key={`package-${title}`}\n                                            title={title}\n                                            subtitle={subtitle}\n                                            properties={properties}\n                                            onClick={() =>\n                                                handleSelectPackage(s)\n                                            }\n                                            verified={whitelist.verified}\n                                        />\n                                    )\n                                })}\n                            </div>\n                        ) : (\n                            <div className=\"w-11/12 md:w-5/12 lg:w-4/12 mx-auto\">\n                                <CardReservePlan\n                                    title={planCompromised.title}\n                                    subtitle={planCompromised.subtitle}\n                                    properties={planCompromised.properties}\n                                    onClick={handlePayPlan}\n                                    paid={whitelist.preSale.length > 0}\n                                    // lock\n                                />\n                            </div>\n                        )}\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default PrivateSaleView\n","/* eslint-disable no-unused-vars */\nimport { useCallback } from 'react'\nimport DestinareContract from '../../abi/DestinareContract.json'\nimport { useWeb3React } from '@web3-react/core'\n\nexport const useClaimPreSale = () => {\n    const { library, account } = useWeb3React()\n\n    return useCallback(\n        async (callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n\nexport const useBuyPreSale = () => {\n    const { library, account } = useWeb3React()\n    return useCallback(\n        async (plan, callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n                const tx = await contract.methods\n                    .buyPreSaleTokens(plan.packageId)\n                    .send({\n                        from: account,\n                        value: plan.amount * 1e18,\n                    })\n                    .then((res) => res)\n                console.log('buy presale Tokens', tx)\n                if (typeof callback === 'function') {\n                    const message = 'Tokens were successfully purchased'\n                    callback(undefined, message, tx)\n                }\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n","export const cls = (input) => {\n    return input\n        .replace(/\\s+/gm, ' ')\n        .split(' ')\n        .filter((cond) => typeof cond === 'string' && cond !== 'undefined')\n        .join(' ')\n        .trim()\n}\n\nexport const escapeRegExp = (string) => {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","/* eslint-disable no-unused-vars */\nimport React, { forwardRef } from 'react'\nimport { FaSpinner } from 'react-icons/fa'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'inline-flex items-center justify-center focus:outline-none transition ease-in-out duration-300 rounded-md gap-2',\n    disabled: 'opacity-50 cursor-not-allowed',\n    pill: 'rounded-full',\n    size: {\n        none: '',\n        small: 'px-2 py-1 text-sm',\n        normal: 'px-4 py-2',\n        large: 'px-8 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'bg-primary hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-white',\n        secondary:\n            'bg-gray-200 hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 text-gray-900 hover:text-white',\n        danger: 'bg-red-500 hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white',\n        primaryborder:\n            'border-primary border hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-primary',\n        warning:\n            'bg-yellow-600 hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-white',\n        warningLink:\n            'bg-transparent hover:bg-gray-100 border border-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-yellow-600',\n    },\n    spinnerSize: {\n        small: 'text-xl',\n        normal: 'text-2xl',\n        large: 'text-3xl',\n    },\n}\n\nconst ButtonSpinner = forwardRef(\n    (\n        {\n            children,\n            className,\n            loading = false,\n            disabled,\n            type = 'button',\n            size = 'small',\n            variant = 'primary',\n            pill,\n            spinnerSize = 'normal',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <button\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${pill && classes.pill}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {loading && (\n                    <FaSpinner\n                        className={cls(\n                            `animate-spin ${classes.spinnerSize[spinnerSize]}`\n                        )}\n                    />\n                )}\n                {children}\n            </button>\n        )\n    }\n)\n\nButtonSpinner.displayName = 'ButtonSpinner'\n\nexport default ButtonSpinner\n","import React, { forwardRef } from 'react'\nimport { Spin } from 'antd'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: ' border rounded-xl relative overflow-hidden',\n    variant: {\n        none: '',\n        primary:\n            'bg-white dark:bg-gray-4 border-light-4 dark:border-gray-16 hover:border-primary',\n        secondary:\n            'bg-gray-0 dark:bg-blue-5 border-light-4 dark:border-black-0',\n    },\n    borderOpacity: {},\n}\n\nconst CardContainer = forwardRef(\n    (\n        { className, variant = 'primary', loading, children, ...restProps },\n        ref\n    ) => {\n        return (\n            <div\n                className={cls(`\n                ${classes.base}\n                ${classes.variant[variant]}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {' '}\n                {loading && (\n                    <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-50\">\n                        <Spin size=\"large\" />\n                    </div>\n                )}\n                {children}\n            </div>\n        )\n    }\n)\n\nCardContainer.displayName = 'CardContainer'\n\nexport default CardContainer\n","import React, { forwardRef } from 'react'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'focus:outline-none transition ease-in-out duration-300 px-1',\n    disabled: 'opacity-50 cursor-not-allowed',\n    size: {\n        small: 'px-3 py-1 text-sm',\n        normal: 'px-3 py-2',\n        large: 'px-3 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'border border-primary focus:ring-2 focus:ring-primary focus:ring-opacity-50',\n        secondary:\n            'border border-light-4 focus:ring-2 focus:ring-light-4 focus:ring-opacity-50',\n        danger: 'border border-red-500 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50',\n    },\n    rounded: {\n        none: 'rounded-none',\n        small: 'rounded-sm',\n        medium: 'rounded-md',\n        large: 'rounded-lg',\n        xl: 'rounded-xl',\n    },\n}\n\nconst Input = forwardRef(\n    (\n        {\n            className,\n            disabled,\n            type = 'text',\n            size = 'small',\n            variant = 'primary',\n            rounded = 'none',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <input\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${classes.rounded[rounded]}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            />\n        )\n    }\n)\n\nInput.displayName = 'Input'\n\nexport default Input\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    accountWhitelistSelector,\n    alreadyRequestSelector,\n    whiteListFetchingSelector,\n    whiteListFetchSelector,\n} from './selectors'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n    hasRequestWhitelist,\n    createWhitelist,\n    fetchWhitelist,\n    updateWhiteList,\n    clearWhitelistReducer,\n} from './actions'\n\nexport const useClearWhiteListReducer = () => {\n    const dispatch = useDispatch()\n    return useCallback(() => dispatch(clearWhitelistReducer(), [dispatch]))\n}\n\nexport const useAlreadyRequestWhitelist = () => {\n    const { account } = useWeb3React()\n    const alreadyRequest = useSelector(alreadyRequestSelector)\n    const dispatch = useDispatch()\n\n    useEffect(async () => {\n        if (account) dispatch(hasRequestWhitelist(account))\n    }, [account, dispatch])\n\n    return alreadyRequest\n}\n\nexport const useWhiteList = () => {\n    const { account } = useWeb3React()\n    const alreadyRequest = useSelector(alreadyRequestSelector)\n\n    const whitelist = useSelector(accountWhitelistSelector)\n    const dispatch = useDispatch()\n\n    useEffect(async () => {\n        if (account && alreadyRequest) dispatch(fetchWhitelist(account))\n    }, [account, alreadyRequest, dispatch])\n\n    return whitelist\n}\n\nexport const useRequestWhitelist = () => {\n    const dispatch = useDispatch()\n    return useCallback((data) => dispatch(createWhitelist(data)), [dispatch])\n}\n\nexport const useUpdateWhitelist = () => {\n    const dispatch = useDispatch()\n    return useCallback((data) => dispatch(updateWhiteList(data)), [dispatch])\n}\n\nexport const useFetchWhiteList = () => {\n    return useSelector(whiteListFetchSelector)\n}\n\nexport const useFetchingWhiteList = () => {\n    return useSelector(whiteListFetchingSelector)\n}\n","/* eslint-disable no-unused-vars */\nimport { useCallback } from 'react'\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport DestinareContract from '../../abi/DestinareContract.json'\nimport { useReloadData } from './../../store/reducers/scInteractionReducer/hooks'\n\nexport const useClaimPrivateSale = () => {\n    const { library, account } = useActiveWeb3React()\n    const reloaData = useReloadData()\n\n    return useCallback(\n        async (stakeId, callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n                const tokens = await contract.methods\n                    .claimPrivateSaleTokens(stakeId)\n                    .send({ from: account })\n                await reloaData(true)\n                if (typeof callback === 'function') {\n                    const message = 'Tokens were successfully claimed'\n                    callback(undefined, message, tokens)\n                }\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n\nexport const useBuyPrivateSale = () => {\n    const { library, account } = useActiveWeb3React()\n    const reloaData = useReloadData()\n    return useCallback(\n        async (plan, callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n                const tx = await contract.methods\n                    .buyPrivateSaleTokens(plan.packageId)\n                    .send({\n                        from: account,\n                        value: plan.amount * 1e18,\n                    })\n                    .then((res) => res)\n                await reloaData(true)\n                console.log('buy private Tokens', tx)\n                if (typeof callback === 'function') {\n                    const message = 'Tokens were successfully purchased'\n                    callback(undefined, message, tx)\n                }\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n","export const stakingLvlsPrivate = [\n    {\n        title: 'Basic Plan',\n        subtitle: '0.32 ETH',\n        properties: [\n            ['DDOT', '33, 333'],\n            ['APR', '10%'],\n            ['Time', '6 Months'],\n        ],\n        packageId: 1,\n        stakeId: 0,\n        amount: 0.32,\n        tokens: 33333,\n    },\n    {\n        title: 'Trader Plan',\n        subtitle: '0.48 ETH',\n        properties: [\n            ['DDOT', '60, 000'],\n            ['APR', '15%'],\n            ['Time', '5 Months'],\n        ],\n        packageId: 2,\n        amount: 0.48,\n        stakeId: 1,\n        tokens: 60000,\n    },\n    {\n        title: 'Investor Plan',\n        subtitle: '0.80 ETH',\n        properties: [\n            ['DDOT', '125, 000'],\n            ['APR', '20%'],\n            ['Time', '4 Months'],\n        ],\n        packageId: 3,\n        amount: 0.80,\n        stakeId: 2,\n        tokens: 125000,\n    },\n]\n\nexport const stakingLvlsPre = [\n    {\n        title: 'Basic Plan',\n        subtitle: '0.16 ETH',\n        properties: [\n            ['DDOT', '9, 100'],\n            ['APR', '10%'],\n            ['Time', '6 Months'],\n        ],\n        packageId: 4,\n        amount: 0.16,\n        stakeId: 0,\n        tokens: 9100,\n    },\n    {\n        title: 'Trader Plan',\n        subtitle: '0.32 ETH',\n        properties: [\n            ['DDOT', '22, 222'],\n            ['APR', '12%'],\n            ['Time', '5 Months'],\n        ],\n        packageId: 5,\n        amount: 0.32,\n        stakeId: 3,\n        tokens: 22222,\n    },\n    {\n        title: 'Investor Plan',\n        subtitle: '0.645 ETH',\n        properties: [\n            ['DDOT', '50, 000'],\n            ['APR', '15%'],\n            ['Time', '4 Months'],\n        ],\n        packageId: 6,\n        amount: 0.645,\n        stakeId: 4,\n        tokens: 50000,\n    },\n]\n","import * as Yup from 'yup'\nimport validator from 'validator'\n\nexport const SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\n\nconst FILE_SIZE = 100 * 1024\n\nexport const regex = {\n    alpha: /^[A-Za-z]+$/,\n    alphaNumeric: /[a-zA-Z0-9]/,\n    atLeastOneUpperCase: /[A-Z]/,\n    phoneNumber:\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n    exact5: /^[0-9]{5}$/,\n}\n\nexport const validations = {\n    password: Yup.string()\n        .min(8, 'Too Short!')\n        .max(64, 'Too Long!')\n        .matches(\n            regex.atLeastOneUpperCase,\n            'Must contain al least one uppercase letter.'\n        )\n        .required('Required'),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    userName: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must contain only letters and numbers.',\n            (value) => value && validator.isAlphanumeric(value)\n        )\n        .required('Required'),\n    mail: Yup.string()\n        .max(64, 'Too Long!')\n        .email('Must be a valid email format. example@email.com')\n        .lowercase('Must contain only lower case')\n        .required('Required'),\n    phone: Yup.string()\n        .matches(regex.phoneNumber, 'Must be a valid phone number.')\n        .required('Required'),\n    name: Yup.string()\n        .min(3, 'Too Short!')\n        .max(30, 'Too Long!')\n        .test(\n            'alpha',\n            'Must contain only letters.',\n            (value) =>\n                !value || (value && validator.isAlpha(value.replace(' ', '')))\n        ),\n    // .required('Required'),\n    birthDate: Yup.date().required('Required'),\n    country: Yup.string().required('Required'),\n    state: Yup.string().required('Required'),\n    city: Yup.string().required('Required'),\n    line: Yup.string().required('Required'),\n    postalCode: Yup.string()\n        .matches(regex.exact5, 'Must be exactly 5 digits')\n        .required('Required'),\n    file: Yup.mixed()\n        .required('A file is required')\n        .test(\n            'fileSize',\n            'File too large',\n            (value) => value && value[0].size <= FILE_SIZE\n        )\n        .test(\n            'fileFormat',\n            'Unsupported Format',\n            (value) => value && SUPPORTED_FORMATS.includes(value[0].type)\n        )\n        .required('Required'),\n    min20Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Minimum to invest is 20 USD', (value) => {\n            if (value) {\n                let _v = value\n                _v = _v.replace(/\\D/g, '')\n                _v = parseFloat(_v)\n                return _v >= 20.0\n            }\n            return false\n        }),\n    no0Usd: Yup.mixed()\n        .required('Required')\n        .test('usdAmount', 'Usd amount must be higher than 0', (value) => {\n            if (value) {\n                let _v = value\n                _v = parseFloat(_v)\n                return _v > 0.0\n            }\n            return false\n        }),\n    generic: Yup.string().max(64, 'Too Long!').required('Required'),\n    boolean: Yup.bool().oneOf([true], 'Field must be checked'),\n    onlyNumber: Yup.mixed()\n        .required('Required')\n        .test('onlyNumber', 'Field must be a number', (value) => {\n            if (value) {\n                const _v = value\n                const isnum = /^\\d+$/.test(_v)\n\n                return isnum\n            }\n            return false\n        }),\n    isColor: Yup.mixed()\n        .required('Required')\n        .test(\n            'color',\n            'Field must be a valid color format. Examples. RGBA: rgba(0, 0, 0, 1), HEXA: #000000, RGB: rgb(0,0,0), Color: red',\n            (value) => {\n                if (value) {\n                    const s = new Option().style\n                    s.color = value\n                    return s.color !== ''\n                }\n                return false\n            }\n        ),\n    number: Yup.number().required('Required'),\n    array: Yup.array().required('Required'),\n    walletAddress: Yup.string()\n        .min(3, 'Too Short!')\n        .max(64, 'Too Long!')\n        .test(\n            'alphaNumeric',\n            'Must be a valid wallet address.',\n            (value) => value && validator.isEthereumAddress(value)\n        )\n        .required('Required'),\n    staking: (totalTokens) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('onlyNumber', 'Field must be a number', (value) => {\n                if (value) {\n                    const _v = value\n                    const isnum = /^\\d+$/.test(_v)\n\n                    return isnum\n                }\n                return false\n            })\n            .test('minStake', 'Minimum to stake is 1', (value) => {\n                if (value) {\n                    let _v = value\n                    _v = _v.replace(/\\D/g, '')\n                    _v = parseFloat(_v)\n                    return _v >= 1.0\n                }\n                return false\n            })\n            .test('maxStake', 'Insufficient Balance', (value) => {\n                if (value) {\n                    let _v = value\n                    _v = _v.replace(/\\D/g, '')\n                    _v = parseFloat(_v)\n                    return _v <= parseFloat(totalTokens)\n                }\n                return false\n            })\n    },\n    validateIsNotCurrentUser: (currentUser, currentMembers) => {\n        return Yup.mixed()\n            .required('Required')\n            .test('validUserName', 'You can not add yourself', (value) => {\n                if (value) {\n                    if (\n                        value === currentUser.userName ||\n                        value === currentUser.userMail\n                    )\n                        return false\n                    return true\n                }\n                return false\n            })\n            .test(\n                'validateIsNotExistingMember',\n                'You can not add existing members',\n                (value) => {\n                    if (value) {\n                        let valid = true\n\n                        for (\n                            let index = 0;\n                            index < currentMembers.length;\n                            index++\n                        ) {\n                            const { userName, userMail } = currentMembers[index]\n                            if (value === userName || value === userMail) {\n                                valid = false\n                                break\n                            }\n                        }\n                        return valid\n                    }\n                    return false\n                }\n            )\n    },\n}\n"],"sourceRoot":""}