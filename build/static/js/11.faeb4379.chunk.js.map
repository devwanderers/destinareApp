{"version":3,"sources":["assets/images/utilities/wallet2.png","assets/images/utilities/index.js","hooks/useValidate.js","hooks/useCopyToClipboard.js","components/Invest/WhitelistedAddress.js","components/Invest/Activity/ActivityHeader.js","services/address-services.js","components/Invest/Activity/ActivityElement.js","components/Invest/Activity/index.js","views/InvestView.js","services/helpers.js","components/Cards/CardContainer.js","components/Buttons/ButtonSpinner.js","store/reducers/whitelist/hooks.js","hooks/scInteractions/privateSaleHooks.js","constants/stakingLevels.js"],"names":["utilitiesImages","wallet","useValidate","params","useState","valid","setValid","useEffect","length","_valid","reduce","acc","p","useCopyToClipboard","value","setValue","success","setSuccess","useInterval","text","options","result","copy","WhitelistedAddress","props","account","useWeb3React","copyToClipboard","CardContainer","onClick","className","title","ActivityContainer","formatAddress","address","size","substring","ActivityElement","data","timeStamp","from","to","tx","amount","tokens","formatDate","Date","parseInt","toLocaleDateString","year","month","day","console","log","formattedToken","toLocaleString","style","top","Activity","minWidth","ActivityHeader","src","alt","InvestView","loading","setLoading","history","useHistory","alreadyRequest","useAlreadyRequestWhitelist","whitelist","useWhiteList","fetchWhiteList","useFetchWhiteList","useSCData","fetchedData","totalTokensPrivate","totalTokensPre","claimPrivateTokens","useClaimPrivateSale","alreadyClaimedPrivateTokens","privateSale","alreadyClaimedPreTokens","preSale","height","PageLoading","userName","ButtonSpinner","push","StakingView","stakeLevel","stakingLvlsPrivate","find","s","packageId","packagePrivateSale","stakeId","err","message","res","disabled","PrivateSalePath","cls","input","replace","split","filter","cond","join","trim","escapeRegExp","string","classes","base","variant","none","primary","secondary","borderOpacity","forwardRef","ref","children","restProps","displayName","pill","small","normal","large","danger","primaryborder","warning","warningLink","spinnerSize","type","useClearWhiteListReducer","dispatch","useDispatch","useCallback","clearWhitelistReducer","useSelector","alreadyRequestSelector","a","hasRequestWhitelist","accountWhitelistSelector","fetchWhitelist","useRequestWhitelist","createWhitelist","useUpdateWhitelist","updateWhiteList","whiteListFetchSelector","useFetchingWhiteList","whiteListFetchingSelector","useActiveWeb3React","library","reloaData","useReloadData","callback","contract","eth","Contract","DestinareContract","process","methods","claimPrivateSaleTokens","send","undefined","_err","useBuyPrivateSale","plan","buyPrivateSaleTokens","then","subtitle","properties","stakingLvlsPre"],"mappings":"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","file":"static/js/11.faeb4379.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wallet2.c6e6fab9.png\";","import wallet from './wallet2.png'\r\n\r\nconst utilitiesImages = { wallet }\r\n\r\nexport default utilitiesImages\r\n","/* eslint-disable no-unused-vars */\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst useValidate = (params = []) => {\r\n    const [valid, setValid] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (params.length > 0) {\r\n            const _valid = params.reduce((acc, p) => {\r\n                if (acc) return acc\r\n                return p\r\n            }, false)\r\n            setValid(_valid)\r\n        }\r\n    }, [params])\r\n\r\n    return valid\r\n}\r\n\r\nexport default useValidate\r\n","import { useState } from 'react'\r\nimport copy from 'copy-to-clipboard'\r\nimport useInterval from './useInterval'\r\n\r\nexport default function useCopyToClipboard() {\r\n    const [value, setValue] = useState()\r\n    const [success, setSuccess] = useState()\r\n\r\n    useInterval(\r\n        () => {\r\n            setSuccess(false)\r\n        },\r\n        success ? 500 : null\r\n    )\r\n\r\n    const copyToClipboard = (text, options) => {\r\n        const result = copy(text, options)\r\n        if (result) setValue(text)\r\n        setSuccess(result)\r\n    }\r\n\r\n    return [copyToClipboard, { value, success }]\r\n}\r\n","import React from 'react'\r\nimport CardContainer from './../Cards/CardContainer'\r\nimport { IoCopyOutline } from 'react-icons/io5'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useCopyToClipboard from './../../hooks/useCopyToClipboard'\r\nimport { Tooltip } from 'antd'\r\n\r\nconst WhitelistedAddress = (props) => {\r\n    const { account } = useWeb3React()\r\n    const [copyToClipboard, { success }] = useCopyToClipboard()\r\n\r\n    return (\r\n        <CardContainer\r\n            onClick={() => copyToClipboard(account)}\r\n            className=\"py-3 mx-auto cursor-pointer\"\r\n        >\r\n            <div className=\"flex flex-row justify-center w-full px-4 lg:px-12\">\r\n                <div className=\"flex items-center text-black-2 dark:text-gray-6\">\r\n                    <span className=\"text-xs lg:text-sm\">{account}</span>\r\n                </div>\r\n                <div className=\"ml-auto flex\">\r\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\r\n                        <button\r\n                            onClick={() => copyToClipboard(account)}\r\n                            className=\"text-sm lg:text-base text-primary\"\r\n                        >\r\n                            <IoCopyOutline />\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default WhitelistedAddress\r\n","import React from 'react'\r\n\r\nconst ActivityContainer = (props) => {\r\n    return (\r\n        <div className=\"flex flex-row w-full px-4 lg:px-12 pt-3 pb-2 font-medium text-black-2 dark:text-gray-6 text-xs\">\r\n            <div className=\"flex-1 \">Date</div>\r\n            <div className=\"flex-1 \">Type</div>\r\n            <div className=\"flex-1 \">From</div>\r\n            <div className=\"flex-1 \">To</div>\r\n            <div className=\"flex-1 \">Tx</div>\r\n            <div className=\"flex-1 \">Amount</div>\r\n            <div className=\"flex-1 \">Tokens</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityContainer\r\n","export const formatAddress = (address = '', size = 4) => {\r\n    return `${address.substring(0, size)}......${address.substring(\r\n        address.length - size,\r\n        address.length\r\n    )}`\r\n}\r\n","import React from 'react'\r\nimport { IoCopyOutline } from 'react-icons/io5'\r\nimport { FaEthereum } from 'react-icons/fa'\r\nimport { formatAddress } from './../../../services/address-services'\r\nimport useCopyToClipboard from './../../../hooks/useCopyToClipboard'\r\nimport { Tooltip } from 'antd'\r\n\r\nconst ActivityElement = ({ data }) => {\r\n    const [timeStamp, from, to, tx, amount, tokens] = data\r\n    const [copyToClipboard, { success }] = useCopyToClipboard()\r\n\r\n    let formatDate = new Date(parseInt(timeStamp))\r\n    formatDate = formatDate.toLocaleDateString('en-GB', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n    })\r\n    console.log({ tokens })\r\n    const formattedToken = parseInt(tokens).toLocaleString('en-US')\r\n    console.log({ formattedToken })\r\n    return (\r\n        <div className=\"flex flex-row w-full  px-4 lg:px-12 pt-3 pb-2 text-black-2 dark:text-gray-6 font-medium text-xs\">\r\n            <div className=\"flex-1\">{formatDate}</div>\r\n            <div className=\"flex-1\">ETH Mainet</div>\r\n            <div className=\"flex-1 flex\">\r\n                <p className=\"flex items-center\">\r\n                    {formatAddress(from)}\r\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\r\n                        <button\r\n                            onClick={() => copyToClipboard(from)}\r\n                            className=\"text-xl text-primary ml-3\"\r\n                        >\r\n                            <IoCopyOutline />\r\n                        </button>\r\n                    </Tooltip>\r\n                </p>\r\n            </div>\r\n            <div className=\"flex-1 flex\">\r\n                <p className=\"flex items-center\">\r\n                    {formatAddress(to)}\r\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\r\n                        <button\r\n                            onClick={() => copyToClipboard(to)}\r\n                            className=\"text-xl text-primary ml-3\"\r\n                        >\r\n                            <IoCopyOutline />\r\n                        </button>\r\n                    </Tooltip>\r\n                </p>\r\n            </div>\r\n            <div className=\"flex-1 flex\">\r\n                <p className=\"flex items-center\">\r\n                    {formatAddress(tx)}\r\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\r\n                        <button\r\n                            onClick={() => copyToClipboard(tx)}\r\n                            className=\"text-xl text-primary ml-3\"\r\n                        >\r\n                            <IoCopyOutline />\r\n                        </button>\r\n                    </Tooltip>\r\n                </p>\r\n            </div>\r\n            <div className=\"flex-1 flex items-center\">\r\n                <FaEthereum className=\"relative\" style={{ top: '-2px' }} />\r\n                {amount} ETH\r\n            </div>\r\n            <div className=\"flex-1 flex items-center\">\r\n                {formattedToken} DDOT\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityElement\r\n","import React from 'react'\r\nimport ActivityHeader from './ActivityHeader'\r\nimport CardContainer from './../../Cards/CardContainer'\r\nimport ActivityElement from './ActivityElement'\r\nimport utilitiesImages from './../../../assets/images/utilities/index'\r\n\r\nconst Activity = ({ data }) => {\r\n    return (\r\n        <CardContainer className=\"pt-3 mx-auto \">\r\n            <div className=\"overflow-x-auto scrollbar-g\">\r\n                <div className=\"\" style={{ minWidth: '680px' }}>\r\n                    <ActivityHeader />\r\n                    <div className=\"px-2 mb-4\">\r\n                        <hr className=\"border-light-4 dark:border-gray-16\" />\r\n                    </div>\r\n                    <div className=\"max-h-96 overflow-y-auto overflow-x-hidden scrollbar-g pb-3\">\r\n                        {data?.length > 0 ? (\r\n                            <ActivityElement data={data} />\r\n                        ) : (\r\n                            <div className=\"w-full flex justify-center gap-2 items-end opacity-40 text-black-2 dark:text-white\">\r\n                                <img\r\n                                    className=\" w-12 h-auto\"\r\n                                    src={utilitiesImages.wallet}\r\n                                    alt={utilitiesImages.wallet}\r\n                                />\r\n                                {\"You haven't made an investment\"}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default Activity\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport WhitelistedAddress from '../components/Invest/WhitelistedAddress'\r\n\r\nimport Activity from '../components/Invest/Activity'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport PageLoading from '../components/PageLoadings/PageLoading'\r\nimport useValidate from './../hooks/useValidate'\r\nimport utilitiesImages from './../assets/images/utilities/index'\r\nimport { useHistory } from 'react-router'\r\nimport {\r\n    useAlreadyRequestWhitelist,\r\n    useFetchWhiteList,\r\n    useWhiteList,\r\n} from './../store/reducers/whitelist/hooks'\r\nimport { PrivateSalePath, StakingView } from '../constants/routerConstants'\r\nimport ButtonSpinner from '../components/Buttons/ButtonSpinner'\r\nimport { useClaimPrivateSale } from './../hooks/scInteractions/privateSaleHooks'\r\nimport { stakingLvlsPrivate } from './../constants/stakingLevels'\r\nimport {\r\n    useTotalTokensPrivate,\r\n    useTotalTokensPre,\r\n    useSCData,\r\n} from './../store/reducers/scInteractionReducer/hooks'\r\n\r\nconst InvestView = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { account } = useWeb3React()\r\n\r\n    const alreadyRequest = useAlreadyRequestWhitelist()\r\n    const whitelist = useWhiteList()\r\n    const fetchWhiteList = useFetchWhiteList()\r\n    const { fetchedData, data } = useSCData()\r\n    const { totalTokensPrivate, totalTokensPre } = data\r\n    const claimPrivateTokens = useClaimPrivateSale()\r\n\r\n    const alreadyClaimedPrivateTokens =\r\n        whitelist.privateSale.length > 0 && totalTokensPrivate === '0'\r\n    const alreadyClaimedPreTokens =\r\n        whitelist.preSale.length > 0 && totalTokensPre === '0'\r\n\r\n    if (!account || !fetchWhiteList.alreadyRequest || !fetchedData) {\r\n        return (\r\n            <div className=\"mx-5\" style={{ height: 'calc(100vh - 109.13px)' }}>\r\n                <PageLoading />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleClaimTokensPrivate = () => {\r\n        if (alreadyClaimedPrivateTokens) {\r\n            history.push(StakingView)\r\n            return\r\n        }\r\n\r\n        setLoading(true)\r\n        const stakeLevel = stakingLvlsPrivate.find(\r\n            (s) => s.packageId === whitelist.packagePrivateSale\r\n        )\r\n        claimPrivateTokens(stakeLevel.stakeId, (err, message, res) => {\r\n            if (err) {\r\n                console.log(err)\r\n            }\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return alreadyRequest ? (\r\n        <div className=\"mx-5\" style={{ height: 'calc(100vh - 109.13px)' }}>\r\n            <div className=\" max-w-1650px mx-auto mt-12\">\r\n                <div className=\" text-primary text-xl font-semibold mb-4\">\r\n                    {whitelist.userName}\r\n                </div>\r\n\r\n                <div className=\" text-black-2 dark:text-white text-xl font-semibold mb-2\">\r\n                    Register Wallet\r\n                </div>\r\n                <WhitelistedAddress />\r\n                <div className=\"flex items-end mb-2 mt-12\">\r\n                    <div className=\" text-black-2 dark:text-white text-xl font-semibold\">\r\n                        Private Sale\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                        <ButtonSpinner\r\n                            size=\"normal\"\r\n                            className=\"px-8\"\r\n                            onClick={handleClaimTokensPrivate}\r\n                            loading={loading}\r\n                            // disabled={totalTokensPrivate === '0'}\r\n                        >\r\n                            {!loading\r\n                                ? !alreadyClaimedPrivateTokens\r\n                                    ? 'Stake'\r\n                                    : 'Go to Staking'\r\n                                : ''}\r\n                        </ButtonSpinner>\r\n                    </div>\r\n                </div>\r\n                <Activity data={whitelist.privateSale} />\r\n                <div className=\"flex items-end mb-2 mt-8\">\r\n                    <div className=\" text-black-2 dark:text-white text-xl font-semibold \">\r\n                        Pre Sale\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                        <ButtonSpinner\r\n                            size=\"normal\"\r\n                            className=\"px-8\"\r\n                            disabled={totalTokensPre === '0'}\r\n                            loading={loading}\r\n                        >\r\n                            {!loading\r\n                                ? !alreadyClaimedPreTokens\r\n                                    ? 'Stake'\r\n                                    : 'Go to Staking'\r\n                                : ''}\r\n                        </ButtonSpinner>\r\n                    </div>\r\n                </div>\r\n                <Activity data={whitelist.preSale} />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div\r\n            className=\"flex flex-col justify-center items-center flex-grow opacity-75\"\r\n            style={{ height: 'calc(100vh - 109.13px)' }}\r\n        >\r\n            <img\r\n                className=\" w-80 h-auto\"\r\n                src={utilitiesImages.wallet}\r\n                alt={utilitiesImages.wallet}\r\n            />\r\n            <p className=\"text-xl mt-8 font-medium\">\r\n                Apply for whitelist in order to gain access.{' '}\r\n            </p>\r\n            <p className=\"text-xl font-medium\">\r\n                <span\r\n                    onClick={() => history.push(PrivateSalePath)}\r\n                    className=\"text-orange-2 cursor-pointer underline\"\r\n                >\r\n                    {' '}\r\n                    Click here to apply\r\n                </span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestView\r\n","export const cls = (input) => {\n    return input\n        .replace(/\\s+/gm, ' ')\n        .split(' ')\n        .filter((cond) => typeof cond === 'string' && cond !== 'undefined')\n        .join(' ')\n        .trim()\n}\n\nexport const escapeRegExp = (string) => {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","import React, { forwardRef } from 'react'\r\nimport { Spin } from 'antd'\r\nimport { cls } from './../../services/helpers'\r\n\r\nconst classes = {\r\n    base: ' border rounded-xl relative overflow-hidden',\r\n    variant: {\r\n        none: '',\r\n        primary:\r\n            'bg-white dark:bg-gray-4 border-light-4 dark:border-gray-16 hover:border-primary',\r\n        secondary:\r\n            'bg-gray-0 dark:bg-blue-5 border-light-4 dark:border-black-0',\r\n    },\r\n    borderOpacity: {},\r\n}\r\n\r\nconst CardContainer = forwardRef(\r\n    (\r\n        { className, variant = 'primary', loading, children, ...restProps },\r\n        ref\r\n    ) => {\r\n        return (\r\n            <div\r\n                className={cls(`\r\n                ${classes.base}\r\n                ${classes.variant[variant]}\r\n                ${className}\r\n            `)}\r\n                {...restProps}\r\n            >\r\n                {' '}\r\n                {loading && (\r\n                    <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-50\">\r\n                        <Spin size=\"large\" />\r\n                    </div>\r\n                )}\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nCardContainer.displayName = 'CardContainer'\r\n\r\nexport default CardContainer\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { forwardRef } from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\nimport { cls } from './../../services/helpers'\r\n\r\nconst classes = {\r\n    base: 'inline-flex items-center justify-center focus:outline-none transition ease-in-out duration-300 rounded-md gap-2',\r\n    disabled: 'opacity-50 cursor-not-allowed',\r\n    pill: 'rounded-full',\r\n    size: {\r\n        none: '',\r\n        small: 'px-2 py-1 text-sm',\r\n        normal: 'px-4 py-2',\r\n        large: 'px-8 py-3 text-lg',\r\n    },\r\n    variant: {\r\n        primary:\r\n            'bg-primary hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-white',\r\n        secondary:\r\n            'bg-gray-200 hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 text-gray-900 hover:text-white',\r\n        danger: 'bg-red-500 hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white',\r\n        primaryborder:\r\n            'border-primary border hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-primary',\r\n        warning:\r\n            'bg-yellow-600 hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-white',\r\n        warningLink:\r\n            'bg-transparent hover:bg-gray-100 border border-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-yellow-600',\r\n    },\r\n    spinnerSize: {\r\n        small: 'text-xl',\r\n        normal: 'text-2xl',\r\n        large: 'text-3xl',\r\n    },\r\n}\r\n\r\nconst ButtonSpinner = forwardRef(\r\n    (\r\n        {\r\n            children,\r\n            className,\r\n            loading = false,\r\n            disabled,\r\n            type = 'button',\r\n            size = 'small',\r\n            variant = 'primary',\r\n            pill,\r\n            spinnerSize = 'normal',\r\n            ...restProps\r\n        },\r\n        ref\r\n    ) => {\r\n        return (\r\n            <button\r\n                ref={ref}\r\n                disabled={disabled}\r\n                type={type}\r\n                className={cls(`\r\n                ${classes.base}\r\n                ${classes.size[size]}\r\n                ${classes.variant[variant]}\r\n                ${pill && classes.pill}\r\n                ${disabled && classes.disabled}\r\n                ${className}\r\n            `)}\r\n                {...restProps}\r\n            >\r\n                {loading && (\r\n                    <FaSpinner\r\n                        className={cls(\r\n                            `animate-spin ${classes.spinnerSize[spinnerSize]}`\r\n                        )}\r\n                    />\r\n                )}\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n)\r\n\r\nButtonSpinner.displayName = 'ButtonSpinner'\r\n\r\nexport default ButtonSpinner\r\n","import { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    accountWhitelistSelector,\r\n    alreadyRequestSelector,\r\n    whiteListFetchingSelector,\r\n    whiteListFetchSelector,\r\n} from './selectors'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n    hasRequestWhitelist,\r\n    createWhitelist,\r\n    fetchWhitelist,\r\n    updateWhiteList,\r\n    clearWhitelistReducer,\r\n} from './actions'\r\n\r\nexport const useClearWhiteListReducer = () => {\r\n    const dispatch = useDispatch()\r\n    return useCallback(() => dispatch(clearWhitelistReducer(), [dispatch]))\r\n}\r\n\r\nexport const useAlreadyRequestWhitelist = () => {\r\n    const { account } = useWeb3React()\r\n    const alreadyRequest = useSelector(alreadyRequestSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(async () => {\r\n        if (account) dispatch(hasRequestWhitelist(account))\r\n    }, [account, dispatch])\r\n\r\n    return alreadyRequest\r\n}\r\n\r\nexport const useWhiteList = () => {\r\n    const { account } = useWeb3React()\r\n    const alreadyRequest = useSelector(alreadyRequestSelector)\r\n\r\n    const whitelist = useSelector(accountWhitelistSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(async () => {\r\n        if (account && alreadyRequest) dispatch(fetchWhitelist(account))\r\n    }, [account, alreadyRequest, dispatch])\r\n\r\n    return whitelist\r\n}\r\n\r\nexport const useRequestWhitelist = () => {\r\n    const dispatch = useDispatch()\r\n    return useCallback((data) => dispatch(createWhitelist(data)), [dispatch])\r\n}\r\n\r\nexport const useUpdateWhitelist = () => {\r\n    const dispatch = useDispatch()\r\n    return useCallback((data) => dispatch(updateWhiteList(data)), [dispatch])\r\n}\r\n\r\nexport const useFetchWhiteList = () => {\r\n    return useSelector(whiteListFetchSelector)\r\n}\r\n\r\nexport const useFetchingWhiteList = () => {\r\n    return useSelector(whiteListFetchingSelector)\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { useCallback } from 'react'\r\nimport useActiveWeb3React from '../useActiveWeb3React'\r\nimport DestinareContract from '../../abi/DestinareContract.json'\r\nimport { useReloadData } from './../../store/reducers/scInteractionReducer/hooks'\r\n\r\nexport const useClaimPrivateSale = () => {\r\n    const { library, account } = useActiveWeb3React()\r\n    const reloaData = useReloadData()\r\n\r\n    return useCallback(\r\n        async (stakeId, callback) => {\r\n            try {\r\n                const contract = new library.eth.Contract(\r\n                    DestinareContract,\r\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\r\n                )\r\n                const tokens = await contract.methods\r\n                    .claimPrivateSaleTokens(stakeId)\r\n                    .send({ from: account })\r\n                await reloaData(true)\r\n                if (typeof callback === 'function') {\r\n                    const message = 'Tokens were successfully claimed'\r\n                    callback(undefined, message, tokens)\r\n                }\r\n            } catch (err) {\r\n                if (typeof callback === 'function') {\r\n                    const _err = { err }\r\n                    callback(_err)\r\n                }\r\n            }\r\n        },\r\n        [library, account]\r\n    )\r\n}\r\n\r\nexport const useBuyPrivateSale = () => {\r\n    const { library, account } = useActiveWeb3React()\r\n    const reloaData = useReloadData()\r\n    return useCallback(\r\n        async (plan, callback) => {\r\n            try {\r\n                const contract = new library.eth.Contract(\r\n                    DestinareContract,\r\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\r\n                )\r\n                const tx = await contract.methods\r\n                    .buyPrivateSaleTokens(plan.packageId)\r\n                    .send({\r\n                        from: account,\r\n                        value: plan.amount * 1e18,\r\n                    })\r\n                    .then((res) => res)\r\n                await reloaData(true)\r\n                console.log('buy private Tokens', tx)\r\n                if (typeof callback === 'function') {\r\n                    const message = 'Tokens were successfully purchased'\r\n                    callback(undefined, message, tx)\r\n                }\r\n            } catch (err) {\r\n                if (typeof callback === 'function') {\r\n                    const _err = { err }\r\n                    callback(_err)\r\n                }\r\n            }\r\n        },\r\n        [library, account]\r\n    )\r\n}\r\n","export const stakingLvlsPrivate = [\r\n    {\r\n        title: 'Basic Plan',\r\n        subtitle: '0.2 ETH',\r\n        properties: [\r\n            ['DDOT', '12, 500'],\r\n            ['APR', '10%'],\r\n            ['Time', '6 Months'],\r\n        ],\r\n        packageId: 1,\r\n        stakeId: 0,\r\n        amount: 0.2,\r\n        tokens: 12500,\r\n    },\r\n    {\r\n        title: 'Trader Plan',\r\n        subtitle: '0.4 ETH',\r\n        properties: [\r\n            ['DDOT', '33, 333'],\r\n            ['APR', '15%'],\r\n            ['Time', '5 Months'],\r\n        ],\r\n        packageId: 2,\r\n        amount: 0.4,\r\n        stakeId: 1,\r\n        tokens: 33333,\r\n    },\r\n    {\r\n        title: 'Investor Plan',\r\n        subtitle: '0.75 ETH',\r\n        properties: [\r\n            ['DDOT', '100, 000'],\r\n            ['APR', '20%'],\r\n            ['Time', '4 Months'],\r\n        ],\r\n        packageId: 3,\r\n        amount: 0.75,\r\n        stakeId: 2,\r\n        tokens: 100000,\r\n    },\r\n]\r\n\r\nexport const stakingLvlsPre = [\r\n    {\r\n        title: 'Basic Plan',\r\n        subtitle: '0.2 ETH',\r\n        properties: [\r\n            ['DDOT', '12, 500'],\r\n            ['APR', '10%'],\r\n            ['Time', '6 Months'],\r\n        ],\r\n        packageId: 4,\r\n        amount: 0.2,\r\n        stakeId: 2,\r\n        tokens: 12500,\r\n    },\r\n    {\r\n        title: 'Trader Plan',\r\n        subtitle: '0.4 ETH',\r\n        properties: [\r\n            ['DDOT', '33, 333'],\r\n            ['APR', '15%'],\r\n            ['Time', '5 Months'],\r\n        ],\r\n        packageId: 5,\r\n        amount: 0.4,\r\n        stakeId: 3,\r\n        tokens: 33333,\r\n    },\r\n    {\r\n        title: 'Investor Plan',\r\n        subtitle: '0.75 ETH',\r\n        properties: [\r\n            ['DDOT', '100, 000'],\r\n            ['APR', '20%'],\r\n            ['Time', '4 Months'],\r\n        ],\r\n        packageId: 6,\r\n        amount: 0.75,\r\n        stakeId: 4,\r\n        tokens: 100000,\r\n    },\r\n]\r\n"],"sourceRoot":""}