{"version":3,"sources":["hooks/useInput.js","services/input-services.js","components/ReloadButton/ReloadDataButton.js","components/Dashboard/CardReserve.js","components/Dashboard/CardDailyReserve.js","components/Dashboard/CardClaimingDay.js","services/format.js","views/DashboardView.js","services/dateServices.js","services/helpers.js","components/Buttons/ButtonSpinner.js","components/Cards/CardContainer.js","components/Inputs/Input.js","hooks/useResponsive.js"],"names":["useInput","initialValue","validate","format","useState","value","setValue","console","log","reset","bind","onChange","e","target","inputRegex","RegExp","validOnlyNumbers","test","escapeRegExp","validMinValue","minValue","parseFloat","replace","validMaxValue","maxValue","ReloadDataButton","reloadData","useSCInteractions","fetchingData","useSCData","fetching","disabled","className","onClick","cls","size","CardReserve","date","day","totalUser","totalEther","currentUser","loading","useResponsive","base","xl","iconSize","percentage","useListenCookie","isDarkMode","cardRef","useRef","CardContainer","ref","IconCheck","style","top","useCurrency","toFixed","Number","percent","showInfo","trailColor","LoadingOutlined","CardDailyReserve","currentDay","data","reserveToken","reservingToken","account","disabledButton","v","amount","getPresaleInfo","getUserInfo","indexDay","length","totalDDOT","variant","Input","ButtonSpinner","CardClaimingDay","val","initDate","claimToken","claimingToken","totalTokens","Date","setDate","getDate","toLocaleString","year","month","RenderCards","cards","index","component","push","DashboardView","useWeb3React","fetchedData","setReservingToken","setClaimingToken","startDate","claimedTokens","restData","differenceInDays","differenceInTime","Math","floor","getDifferenceInDays","isGreaterThanLimitDay","res","message","input","split","filter","cond","join","trim","string","classes","pill","none","small","normal","large","primary","secondary","danger","primaryborder","warning","warningLink","spinnerSize","forwardRef","children","type","restProps","displayName","borderOpacity","rounded","medium","temp","values","xxl","lg","md","sm","width","useWindowSize","useDeepCompareEffect"],"mappings":"qHA4BeA,IAzBE,WAA0C,IAAzCC,EAAwC,uDAAzB,GAAIC,EAAqB,uCAAXC,EAAW,uCACtD,EAA0BC,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,OADAC,QAAQC,IAAIP,GACL,CACHI,QACAC,WACAG,MAAO,kBAAMH,EAASL,IACtBS,KAAM,CACFL,QACAM,SAAU,SAACC,GACP,IAAIP,EAAQO,EAAEC,OAAOR,OAGI,oBAAbH,GACJA,EAASU,EAAEC,OAAOR,QACF,oBAAbH,KAEe,oBAAXC,IAAuBE,EAAQF,EAAOE,IACjDC,EAASD,S,kCCrB7B,mHASMS,EAAaC,OAAO,0BAEbC,EAAmB,SAACX,GAC7B,QAAc,KAAVA,IAAgBS,EAAWG,KAAKC,YAAab,MAMxCc,EAAgB,SAACC,GAAD,OAAc,SAACf,GACxC,SACc,KAAVA,GACCA,GAASgB,WAAWhB,EAAMiB,QAAQ,KAAM,MAAQF,KAO5CG,EAAgB,SAACC,GAAD,OAAc,SAACnB,GACxC,SACc,KAAVA,GACCA,GAASgB,WAAWhB,EAAMiB,QAAQ,KAAM,MAAQE,M,kCC/BzD,oDAmCeC,IArBU,WACrB,IAAQC,EAAeC,cAAfD,WACUE,EAAiBC,cAA3BC,SACR,OACI,wBACIC,SAAUH,EACVI,UAAU,kCACVC,QAAS,WACLP,GAAW,IAJnB,SAOI,qBAAKM,UAAU,wBAAf,SACI,cAAC,IAAD,CACIA,UAAWE,YAAI,GAAD,OAAIN,GAAgB,iBAClCO,KAAM,e,sKCmGXC,EAnHK,SAAC,GAOd,IANHC,EAME,EANFA,KACAC,EAKE,EALFA,IACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,YACAC,EACE,EADFA,QAEA,EAAmBC,YAAc,CAAEC,KAAM,OAAQC,GAAI,SAA9CC,EAAP,oBACMC,EAA6B,IAAhBN,EAAoB,EAAKA,EAAcD,EAAc,IACxE,EAAgBQ,YAAgB,SAC1BC,EAAuB,SAD7B,oBAEMC,EAAUC,iBAAO,MAEvB,OACI,eAACC,EAAA,EAAD,CAAeV,QAASA,EAASW,IAAKH,EAASlB,UAAU,eAAzD,UACI,sBAAKA,UAAU,4CAAf,UACI,sBAAMA,UAAU,eAAhB,SACI,cAACsB,EAAA,EAAD,CAAWnB,KAAMW,MAErB,sBAAKd,UAAU,uBAAf,UACI,sBAAKA,UAAU,0CAAf,UACI,uBAAMA,UAAU,4EAAhB,iBACSM,EAAK,IACV,sBAAMN,UAAU,mEAAhB,sBAKJ,qBAAKA,UAAU,0FAAf,0BAIJ,sBAAKA,UAAU,+CAAf,UACI,qBAAKA,UAAU,+EAAf,SACKK,IAEL,qBAAKL,UAAU,+EAAf,sCAMZ,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,kJAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBACIA,UAAU,wCACVuB,MAAO,CAAEC,IAAK,OAFlB,SAII,cAAC,IAAD,MALR,gBASA,qBAAKxB,UAAU,4CAAf,SACKO,OAGT,sBAAKP,UAAU,mIAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBACIA,UAAU,wCACVuB,MAAO,CAAEC,IAAK,OAFlB,SAII,cAAC,IAAD,MALR,iBASA,sBAAKxB,UAAU,4CAAf,UACKyB,YAAYjB,EAAY,GAD7B,gBAKR,sBAAKR,UAAU,kEAAf,UACI,qBAAKA,UAAU,mDAAf,SACI,cAAC,IAAD,MAEJ,sBAAMA,UAAU,+CAAhB,8BAIJ,qBAAKA,UAAU,oFAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,oEAAf,wBAGA,sBAAKA,UAAU,0EAAf,UACKe,EAAWW,QAAQ,GADxB,eAIJ,sBAAK1B,UAAU,+BAAf,UACI,qBAAKA,UAAU,4EAAf,+BAGA,sBAAKA,UAAU,0EAAf,UACK2B,OAAOnB,GAAYkB,QAAQ,GADhC,gBAKR,8BACI,cAAC,IAAD,CACI1B,UAAU,mBACV4B,QAASb,EACTc,UAAU,EACVC,WAAYb,EAAa,OAAS,uB,sDClGxD7B,GAHD2C,EAAA,EAGY5C,YAAc,IACzBK,EAAWD,YAAc,MAmKhByC,EAjKU,SAAC,GAQnB,IAPHC,EAOE,EAPFA,WACAC,EAME,EANFA,KACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,eAEA1B,GAEE,EAHF2B,QAGE,EAFF3B,SACA4B,EACE,EADFA,eAGA,EAAgCtE,YAC5B,GACA,SAACuE,GAAD,OAAOnD,EAASmD,IAAM/C,EAAS+C,IAAMvD,YAAiBuD,MAF3CC,EAAf,EAAQnE,MAAeK,EAAvB,EAAuBA,KAKvB,EAAgBsC,YAAgB,SAC1BC,EAAuB,SAD7B,oBAGQwB,EAAgCP,EAAhCO,eAAgBC,EAAgBR,EAAhBQ,YAMlBC,EAAWV,EAAa,EACxB1B,EACFkC,EAAe,GAAGG,OAAS,EAAIH,EAAe,GAAGE,GAAY,EAE3DnC,EACFiC,EAAe,GAAGG,OAAS,EAAIH,EAAe,GAAGE,GAAY,KAAO,EAElElC,EACFiC,EAAYE,OAAS,EAAIF,EAAYC,GAAY,KAAO,EAEtD5B,EACsB,IAAxBY,OAAOlB,GACD,EACCkB,OAAOlB,GAAekB,OAAOnB,GAAe,IAEjDqC,EAAuB9B,EAAa,IAAxB,QAClB,OACI,cAACK,EAAA,EAAD,CACIV,QAASA,EACTV,UAAU,0HACV8C,QAAQ,OAHZ,SAKI,sBAAK9C,UAAU,0EAAf,UACI,sBAAKA,UAAU,qDAAf,UACI,sBAAKA,UAAU,8DAAf,UACI,sBAAKA,UAAU,+GAAf,UACI,uBAAMA,UAAU,eAAhB,iBACSiC,EADT,UAGA,sBAAMjC,UAAU,gCAAhB,4BAIJ,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,4HAAf,uBAGA,qBAAKA,UAAU,8GAAf,kCAKR,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,uGAAf,UACI,cAAC+C,EAAA,EAAD,aACID,QAAQ,YACR9C,UAAU,wCACVD,SAAUuC,GACN5D,IAER,sBAAMsB,UAAU,+DAAhB,oBAIJ,cAACgD,EAAA,EAAD,CACIhD,UAAU,2BACVD,SAAUuC,GAAkBX,OAAOa,IAAW,EAC9CrC,KAAK,SACLF,QAAS,WACAmC,GAAgBD,EAAaK,IAL1C,SAQKJ,EACK,6BACA,kCAIlB,qBAAKpC,UAAU,wEAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,8GAAf,0BAGA,sBAAKA,UAAU,oDAAf,UACI,sBAAKA,UAAU,wEAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gFAAf,gCAGA,qBAAKA,UAAU,4EAAf,SACKyB,YAAYlB,EAAW,QAGhC,sBAAKP,UAAU,iBAAf,UACI,qBAAKA,UAAU,gFAAf,+BAGA,sBAAKA,UAAU,2EAAf,UACKyB,YAAYjB,EAAY,GAD7B,aAIJ,sBAAKR,UAAU,2BAAf,UACI,qBAAKA,UAAU,gFAAf,yBAGA,sBAAKA,UAAU,2EAAf,UACKyB,YAAYoB,EAAW,GAD5B,iBAKR,sBAAK7C,UAAU,eAAf,UACI,sBAAKA,UAAU,4CAAf,UACI,sBAAKA,UAAU,GAAf,UACI,qBAAKA,UAAU,yEAAf,wBAGA,sBAAKA,UAAU,qFAAf,UACKe,EAAWW,QAAQ,GADxB,eAIJ,sBAAK1B,UAAU,aAAf,UACI,qBAAKA,UAAU,yEAAf,yBAGA,sBAAKA,UAAU,sFAAf,UACK2B,OAAOnB,GAAYkB,QAAQ,GADhC,gBAKR,qBAAK1B,UAAU,GAAf,SACI,cAAC,IAAD,CACI4B,QAASb,EACTc,UAAU,EACVC,WACIb,EAAa,OAAS,+B,SCpFnDgC,EA9ES,SAAC,GAOlB,IChB2BC,EDU9BC,EAME,EANFA,SACAjB,EAKE,EALFA,KACAkB,EAIE,EAJFA,WACAC,EAGE,EAHFA,cACA3C,EAEE,EAFFA,QACA4B,EACE,EADFA,eAEA,EAA4BJ,EAApBoB,mBAAR,MAAsB,EAAtB,EAWIjD,EAAO,IAAIkD,KAAKJ,GASpB,OARA9C,EAAKmD,QAAQnD,EAAKoD,UAAY,IAE9BpD,EAAOA,EAAKqD,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,UACPtD,IAAK,YAIL,cAACc,EAAA,EAAD,CACIV,QAASA,EACToC,QAAQ,YACR9C,UAAU,qEAHd,SAKI,sBACIA,UAAWE,YAAI,yDAAD,QAEXoC,GAAkB,eAHzB,UAMI,sBAAKtC,UAAU,gCAAf,UACI,qBAAKA,UAAU,oGAAf,oBAGA,qBAAKA,UAAU,2FAAf,SACKK,OAGT,qBAAKL,UAAU,gFAAf,0BAGA,qBAAKA,UAAU,wDAAf,+BAGA,sBAAKA,UAAU,kDAAf,UACKyB,aChEayB,EDgEiBI,EC/DxC3B,OAAOuB,GAAO,KAAO,KD+DiC,GADjD,WAGA,cAACF,EAAA,EAAD,CACIhD,UAAU,2CACVD,UAAWuC,EACXnC,KAAK,SACLO,QAAS2C,EACTpD,QAAS,WACAoD,GAAeD,KAN5B,SASKC,EACK,2BACA,gC,4DElEpBQ,EAAc,SAAC,GAA4C,EAA1C5B,WAEnB,IAF8D,IAA/BC,EAA8B,EAA9BA,KAAMxB,EAAwB,EAAxBA,QAASyC,EAAe,EAAfA,SACxCW,EAAQ,GACLC,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAUrC,IAAI1D,EAAO,IAAIkD,KAAKJ,GACpB9C,EAAKmD,QAAQnD,EAAKoD,UAAYM,GAE9B1D,EAAOA,EAAKqD,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,UACPtD,IAAK,YAGT,IAAM0D,EACF,8BACI,cAAC,EAAD,CACI1D,IAAKyD,EAAQ,EACb1D,KAAMA,EACNE,UACI2B,EAAKO,eAAe,GAAGG,OAAS,EAC1BV,EAAKO,eAAe,GAAGsB,GACvB,EAEVvD,WACI0B,EAAKO,eAAe,GAAGG,OAAS,EAC1BV,EAAKO,eAAe,GAAGsB,GAAS,KAChC,EAEVtD,YACIyB,EAAKQ,YAAYE,OAAS,EACpBV,EAAKQ,YAAYqB,GAAS,KAC1B,EAEVrD,QAASA,KAnBjB,qBAAwBqD,IAuB5BD,EAAMG,KAAKD,GAEf,OACI,qBAAKhE,UAAU,iDAAf,SACK8D,KAwGEI,UAnGO,WAClB,IAAQ7B,EAAY8B,cAAZ9B,QACR,EAA8BxC,cAAtBuE,EAAR,EAAQA,YAAalC,EAArB,EAAqBA,KACrB,EAAqCvC,cAA7BwC,EAAR,EAAQA,aAAciB,EAAtB,EAAsBA,WAEtB,EAA4ChF,oBAAS,GAArD,mBAAOgE,EAAP,KAAuBiC,EAAvB,KACA,EAA0CjG,oBAAS,GAAnD,mBAAOiF,EAAP,KAAsBiB,EAAtB,KACQC,EAA0CrC,EAA1CqC,UAAWC,EAA+BtC,EAA/BsC,cAAkBC,EAArC,YAAkDvC,EAAlD,GACMiB,EAAWoB,EAAY,IAAIhB,KAAiB,IAAZgB,GAAoB,IAAIhB,KAExDmB,EC3EyB,SAACvB,GAEhC,IAMMwB,EANQ,IAAIpB,KAMeJ,EAIjC,OAHyByB,KAAKC,MAAMF,EAAgB,ODkE3BG,CAAoB3B,GACvClB,EAAayC,EAAmB,GAAKA,EAAmB,EAAI,GAC5DK,EAAwBL,EAAmB,GAyBjD,OACI,qBAAK1E,UAAU,OAAf,SAWI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,0BACf,sBAAKA,UAAU,sDAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CACIiC,WAAYA,EACZC,KAAMuC,EACNtC,aAzCG,SAACK,GACxB6B,GAAkB,GAClBlC,EAAaK,GAAQ,SAACwC,GAClBzG,QAAQC,IAAI,CAAEwG,QACd,OAAIA,QAAJ,IAAIA,KAAKC,SACL1G,QAAQC,IAAIwG,EAAIC,SAEpBZ,GAAkB,OAmCFjC,eAAgBA,EAChBE,gBACKD,GACD0C,GACAP,EAEJ9D,SAAU0D,MAGlB,qBAAKpE,UAAU,qBAAf,SACI,cAAC,EAAD,CACImD,SAAUA,EACVjB,KAAMuC,EACNrB,WA5CC,WACrBkB,GAAiB,GACjBlB,GAAW,SAAC4B,GACRzG,QAAQC,IAAI,CAAEwG,QACd,OAAIA,QAAJ,IAAIA,KAAKC,SACL1G,QAAQC,IAAIwG,EAAIC,SAEpBX,GAAiB,OAsCDjB,cAAeA,EACf3C,SAAU0D,EACV9B,gBACKD,GACDmC,IACCO,SAKjB,sBAAK/E,UAAU,OAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,qBAAKA,UAAU,iEAAf,8BAGA,cAACP,EAAA,EAAD,OAEJ,cAAC,EAAD,CACIwC,WAAYA,EACZC,KAAMuC,EACN/D,SAAU0D,EACVjB,SAAUA,c,iCE7JlC,oEAAO,IAAMjD,EAAM,SAACgF,GAChB,OAAOA,EACF5F,QAAQ,QAAS,KACjB6F,MAAM,KACNC,QAAO,SAACC,GAAD,MAA0B,kBAATA,GAA8B,cAATA,KAC7CC,KAAK,KACLC,QAGIrG,EAAe,SAACsG,GACzB,OAAOA,EAAOlG,QAAQ,sBAAuB,U,iLCL3CmG,EAAU,CACZ7E,KAAM,kHACNb,SAAU,gCACV2F,KAAM,eACNvF,KAAM,CACFwF,KAAM,GACNC,MAAO,oBACPC,OAAQ,YACRC,MAAO,qBAEXhD,QAAS,CACLiD,QACI,oGACJC,UACI,sHACJC,OAAQ,+FACRC,cACI,iHACJC,QACI,wGACJC,YACI,sIAERC,YAAa,CACTT,MAAO,UACPC,OAAQ,WACRC,MAAO,aAIT9C,EAAgBsD,sBAClB,WAaIjF,GACE,IAZEkF,EAYH,EAZGA,SACAvG,EAWH,EAXGA,UAWH,IAVGU,eAUH,SATGX,EASH,EATGA,SASH,IARGyG,YAQH,MARU,SAQV,MAPGrG,YAOH,MAPU,QAOV,MANG2C,eAMH,MANa,UAMb,EALG4C,EAKH,EALGA,KAKH,IAJGW,mBAIH,MAJiB,SAIjB,EAHMI,EAGN,iBACD,OACI,iDACIpF,IAAKA,EACLtB,SAAUA,EACVyG,KAAMA,EACNxG,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQtF,KAAKA,GAFD,6BAGZsF,EAAQ3C,QAAQA,GAHJ,6BAIZ4C,GAAQD,EAAQC,KAJJ,6BAKZ3F,GAAY0F,EAAQ1F,SALR,6BAMZC,EANY,oBAQVyG,GAZR,cAcK/F,GACG,cAAC,IAAD,CACIV,UAAWE,YAAI,gBAAD,OACMuF,EAAQY,YAAYA,OAI/CE,SAMjBvD,EAAc0D,YAAc,gBAEb1D,O,mIC7ETyC,EAAU,CACZ7E,KAAM,8CACNkC,QAAS,CACL6C,KAAM,GACNI,QACI,kFACJC,UACI,+DAERW,cAAe,IAGbvF,EAAgBkF,sBAClB,WAEIjF,GACE,IAFArB,EAED,EAFCA,UAED,IAFY8C,eAEZ,MAFsB,UAEtB,EAFiCpC,EAEjC,EAFiCA,QAAS6F,EAE1C,EAF0CA,SAAaE,EAEvD,iBACD,OACI,8CACIzG,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQ3C,QAAQA,GAFJ,6BAGZ9C,EAHY,oBAKVyG,GANR,cAQK,IACA/F,GACG,qBAAKV,UAAU,+FAAf,SACI,cAAC,IAAD,CAAMG,KAAK,YAGlBoG,SAMjBnF,EAAcsF,YAAc,gBAEbtF,O,wICzCTqE,EAAU,CACZ7E,KAAM,8DACNb,SAAU,gCACVI,KAAM,CACFyF,MAAO,oBACPC,OAAQ,YACRC,MAAO,qBAEXhD,QAAS,CACLiD,QACI,8EACJC,UACI,8EACJC,OAAQ,+EAEZW,QAAS,CACLjB,KAAM,eACNC,MAAO,aACPiB,OAAQ,aACRf,MAAO,aACPjF,GAAI,eAINkC,EAAQuD,sBACV,WAUIjF,GACE,IATErB,EASH,EATGA,UACAD,EAQH,EARGA,SAQH,IAPGyG,YAOH,MAPU,OAOV,MANGrG,YAMH,MANU,QAMV,MALG2C,eAKH,MALa,UAKb,MAJG8D,eAIH,MAJa,OAIb,EAHMH,EAGN,iBACD,OACI,mCACIpF,IAAKA,EACLtB,SAAUA,EACVyG,KAAMA,EACNxG,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQtF,KAAKA,GAFD,6BAGZsF,EAAQ3C,QAAQA,GAHJ,6BAIZ2C,EAAQmB,QAAQA,GAJJ,6BAKZ7G,GAAY0F,EAAQ1F,SALR,6BAMZC,EANY,oBAQVyG,OAMpB1D,EAAM2D,YAAc,QAEL3D,O,sECzDT+D,EAAO,SAACC,GACV,IAAK,IAAIhD,EAAQ,EAAGA,EAAQgD,EAAOnE,OAAQmB,IACvC,GAA6B,qBAAlBgD,EAAOhD,GACd,OAAOgD,EAAOhD,IA2BXpD,IAtBO,SAAC,GAAmC,IAAjCqG,EAAgC,EAAhCA,IAAKnG,EAA2B,EAA3BA,GAAIoG,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,GAAIvG,EAAW,EAAXA,KAC1C,EAA0BxC,oBAAS,kBAAM0I,EAAK,CAACE,EAAKnG,EAAIoG,EAAIC,EAAIC,EAAIvG,OAApE,mBAAOvC,EAAP,KAAcC,EAAd,KAEQ8I,EAAUC,cAAVD,MAgBR,OAfAE,aAAqB,WAEbhJ,EADA8I,GAAS,KACAN,EAAK,CAACE,EAAKnG,EAAIoG,EAAIC,EAAIC,EAAIvG,IAC7BwG,GAAS,KACPN,EAAK,CAACjG,EAAIoG,EAAIC,EAAIC,EAAIvG,IACxBwG,GAAS,KACPN,EAAK,CAACG,EAAIC,EAAIC,EAAIvG,IACpBwG,GAAS,IACPN,EAAK,CAACI,EAAIC,EAAIvG,IAChBwG,GAAS,IACPN,EAAK,CAACK,EAAIvG,IAEVA,KAEd,CAACwG,IACG,CAAC/I","file":"static/js/15.edb7aaa0.chunk.js","sourcesContent":["/* eslint-disable prefer-const */\nimport { useState } from 'react'\n\nconst useInput = (initialValue = '', validate, format) => {\n    const [value, setValue] = useState(initialValue)\n    console.log(initialValue)\n    return {\n        value,\n        setValue,\n        reset: () => setValue(initialValue),\n        bind: {\n            value,\n            onChange: (e) => {\n                let value = e.target.value\n\n                if (\n                    (typeof validate === 'function' &&\n                        validate(e.target.value)) ||\n                    typeof validate !== 'function'\n                ) {\n                    if (typeof format === 'function') value = format(value)\n                    setValue(value)\n                }\n            },\n        },\n    }\n}\n\nexport default useInput\n","/* eslint-disable prefer-regex-literals */\nimport { escapeRegExp } from './helpers'\n\nexport const onlyNumberKey = (evt) => {\n    const ASCIICode = evt.which ? evt.which : evt.keyCode\n    if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))\n        evt.preventDefault()\n}\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\n\nexport const validOnlyNumbers = (value) => {\n    if (value === '' || inputRegex.test(escapeRegExp(value))) {\n        return true\n    }\n    return false\n}\n\nexport const validMinValue = (minValue) => (value) => {\n    if (\n        value === '' ||\n        (value && parseFloat(value.replace(/,/g, '')) >= minValue)\n    ) {\n        return true\n    }\n    return false\n}\n\nexport const validMaxValue = (maxValue) => (value) => {\n    if (\n        value === '' ||\n        (value && parseFloat(value.replace(/,/g, '')) <= maxValue)\n    ) {\n        return true\n    }\n    return false\n}\n\nexport const formatThousand = (v) =>\n    `${v}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n","import React from 'react'\n// import { Spin } from 'antd'\n// import { LoadingOutlined } from '@ant-design/icons'\n\nimport useSCInteractions from '../../hooks/scInteractions/useSCInteractions'\nimport { useSCData } from '../../store/reducers/scInteractionReducer/hooks'\n// import ButtonSpinner from '../Buttons/ButtonSpinner'\nimport IconRefresh from './../../assets/svg/icons/IconRefresh'\nimport { cls } from './../../services/helpers'\n\n// const antIcon = (\n//     <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\n// )\n\nconst ReloadDataButton = () => {\n    const { reloadData } = useSCInteractions()\n    const { fetching: fetchingData } = useSCData()\n    return (\n        <button\n            disabled={fetchingData}\n            className=\"flex items-start justify-center\"\n            onClick={() => {\n                reloadData(true)\n            }}\n        >\n            <div className=\"h-8 w-8 lg:h-9 lg:w-9\">\n                <IconRefresh\n                    className={cls(`${fetchingData && 'animate-spin'}`)}\n                    size={'100%'}\n                />\n            </div>\n        </button>\n    )\n}\n\nexport default ReloadDataButton\n","import React, { useRef } from 'react'\nimport { Progress } from 'antd'\n\nimport { AiOutlineUser } from 'react-icons/ai'\nimport { FaEthereum } from 'react-icons/fa'\nimport { RiLock2Line } from 'react-icons/ri'\nimport useListenCookie from '../../hooks/useListenCookie'\nimport useCurrency from '../../hooks/useCurrency'\nimport IconCheck from './../../assets/svg/icons/IconCheck'\nimport useResponsive from './../../hooks/useResponsive'\nimport CardContainer from '../Cards/CardContainer'\n\nconst CardReserve = ({\n    date,\n    day,\n    totalUser,\n    totalEther,\n    currentUser,\n    loading,\n}) => {\n    const [iconSize] = useResponsive({ base: '20px', xl: '30px' })\n    const percentage = currentUser === 0 ? 0 : (currentUser / totalEther) * 100\n    const [theme] = useListenCookie('theme')\n    const isDarkMode = theme === 'dark'\n    const cardRef = useRef(null)\n\n    return (\n        <CardContainer loading={loading} ref={cardRef} className=\"pt-5 xl:pt-8\">\n            <div className=\"flex flex-row w-full px-4 lg:px-5 xl:px-8\">\n                <span className=\"mr-2 xl:mr-4\">\n                    <IconCheck size={iconSize} />\n                </span>\n                <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between items-end\">\n                        <span className=\"md:text-base lg:text-lg xl:text-xl font-medium leading-none text-primary \">\n                            Day {day}{' '}\n                            <span className=\"text-gray-14 dark:text-gray-6 md:text-sm lg:text-base xl:text-xl\">\n                                (UTC)\n                            </span>\n                        </span>\n\n                        <div className=\"md:text-base lg:text-lg xl:text-xl font-bold text-black-2 dark:text-gray-3 leading-none\">\n                            8,333,333\n                        </div>\n                    </div>\n                    <div className=\"flex flex-row justify-between items-end mt-1\">\n                        <div className=\"md:text-xs lg:text-sm  text-gray-5 dark:text-gray-2 leading-none font-medium\">\n                            {date}\n                        </div>\n                        <div className=\"lg:text-xs xl:text-sm font-medium text-black-2 dark:text-gray-6 leading-none\">\n                            Destinare Token\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"px-4 lg:px-5 xl:px-8\">\n                <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md border-b border-t border-gray-7 flex flex-row justify-between mt-6 py-2  text-gray-5 dark:text-gray-2\">\n                    <div className=\"flex flex-row\">\n                        <div\n                            className=\"relative pl-2 md:mr-2 lg:mr-3 xl:mr-4\"\n                            style={{ top: '2px' }}\n                        >\n                            <AiOutlineUser />\n                        </div>\n                        Total user\n                    </div>\n                    <div className=\"font-medium text-gray-10 dark:text-gray-3\">\n                        {totalUser}\n                    </div>\n                </div>\n                <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md border-b border-gray-7 flex flex-row justify-between py-2 text-gray-5 dark:text-gray-2\">\n                    <div className=\"flex flex-row\">\n                        <div\n                            className=\"relative pl-2 md:mr-2 lg:mr-3 xl:mr-4\"\n                            style={{ top: '2px' }}\n                        >\n                            <FaEthereum />\n                        </div>\n                        Total Ether\n                    </div>\n                    <div className=\"font-medium text-gray-10 dark:text-gray-3\">\n                        {useCurrency(totalEther, 2)} ETH\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-center items-end text-gray-5 dark:text-gray-2 py-3\">\n                <div className=\"relative mr-2 md:text-base lg:text-lg xl:text-xl\">\n                    <RiLock2Line />\n                </div>\n                <span className=\"md:text-sm lg:text-sm xl:text-base leading-5\">\n                    Day is closed\n                </span>\n            </div>\n            <div className=\"dark:bg-gray-15 border-t dark:border-gray-16 border-gray-11 pb-3 md:pb-2  xl:pb-3\">\n                <div className=\"px-4 lg:px-5 xl:px-8\">\n                    <div className=\"flex flex-row justify-between leading-none mt-4\">\n                        <div className=\"flex flex-col\">\n                            <div className=\"text-xxs md:text-xs xl:text-md text-gray-5 dark:text-gray-2 mb-2 \">\n                                Your share\n                            </div>\n                            <div className=\"text-sm md:text-sm xl:text-base text-gray-10 dark:text-gray-3 font-bold\">\n                                {percentage.toFixed(2)} % ETH\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col items-end mb-2\">\n                            <div className=\"text-xxs md:text-xs xl:text-md text-gray-5 dark:text-gray-2 text-end mb-2\">\n                                Your contribution\n                            </div>\n                            <div className=\"text-xs md:text-sm xl:text-base text-gray-10 dark:text-gray-3 font-bold\">\n                                {Number(totalEther).toFixed(2)} ETH\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <Progress\n                            className=\"blue-progressbar\"\n                            percent={percentage}\n                            showInfo={false}\n                            trailColor={isDarkMode ? '#fff' : '#c9c9c9'}\n                        />\n                    </div>\n                </div>\n            </div>\n        </CardContainer>\n    )\n}\n\nexport default CardReserve\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Progress, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport useListenCookie from '../../hooks/useListenCookie'\nimport useCurrency from '../../hooks/useCurrency'\nimport useInput from './../../hooks/useInput'\nimport {\n    validOnlyNumbers,\n    validMinValue,\n    validMaxValue,\n} from '../../services/input-services'\nimport Input from '../Inputs/Input'\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\nimport CardContainer from '../Cards/CardContainer'\n\nconst antIcon = (\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\n)\n\nconst minValue = validMinValue(0)\nconst maxValue = validMaxValue(1500)\n\nconst CardDailyReserve = ({\n    currentDay,\n    data,\n    reserveToken,\n    reservingToken,\n    account,\n    loading,\n    disabledButton,\n}) => {\n    // const [amount, setAmount] = useState(1)\n    const { value: amount, bind } = useInput(\n        1,\n        (v) => minValue(v) && maxValue(v) && validOnlyNumbers(v)\n    )\n\n    const [theme] = useListenCookie('theme')\n    const isDarkMode = theme === 'dark'\n\n    const { getPresaleInfo, getUserInfo } = data\n\n    // const _initDate = new Date(initDate)\n    // const currentDate = new Date()\n    // const day = currentDate.getDate() - _initDate.getDate()\n    // day += 1\n    const indexDay = currentDay - 1\n    const totalUser =\n        getPresaleInfo[0].length > 0 ? getPresaleInfo[0][indexDay] : 0\n\n    const totalEther =\n        getPresaleInfo[1].length > 0 ? getPresaleInfo[1][indexDay] / 1e18 : 0\n\n    const currentUser =\n        getUserInfo.length > 0 ? getUserInfo[indexDay] / 1e18 : 0\n\n    const percentage =\n        Number(currentUser) === 0\n            ? 0\n            : (Number(currentUser) / Number(totalEther)) * 100\n\n    const totalDDOT = 8333333 * (percentage / 100)\n    return (\n        <CardContainer\n            loading={loading}\n            className=\"bg-white dark:bg-gray-4 border border-primary px-4 lg:px-5 xl:px-8 pt-5 pb-3 md:pb-4 xl:pt-8 xl:pb-6  border-opacity-50\"\n            variant=\"none\"\n        >\n            <div className=\"flex flex-col md:flex-row divide-x-0 divide-y md:divide-x md:divide-y-0\">\n                <div className=\"flex flex-col md:pr-4 lg:pr-5 xl:pr-8 pb-4 md:pb-0\">\n                    <div className=\" flex flex-row justify-between md:justify-start md:flex-col\">\n                        <div className=\"text-lg md:text-base lg:text-lg xl:text-xl md:text-center leading-none font-medium flex flex-col md:flex-row\">\n                            <span className=\"text-primary\">\n                                Day {currentDay}&nbsp;\n                            </span>\n                            <span className=\"text-gray-10 dark:text-gray-3\">\n                                Reservation\n                            </span>\n                        </div>\n                        <div className=\"md:mt-4 xl:mt-8 mb-2\">\n                            <div className=\"text-lg md:text-sm lg:text-lg xl:text-xl text-gray-10 dark:text-gray-3 text-right md:text-left leading-none font-semibold\">\n                                8,333,333\n                            </div>\n                            <div className=\" text-xxs md:text-base text-gray-10 dark:text-gray-2 text-right md:text-left mb-2 leading-none mt-1 md:mt-0\">\n                                Available DDOT\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mt-auto flex flex-col\">\n                        <div className=\"input-amount text-center flex flex-row items-end pb-4 xl:pb-6 mt-3 xl:mt-4 w-10/12 md:w-full mx-auto\">\n                            <Input\n                                variant=\"secondary\"\n                                className=\"mr-2 w-full bg-light-2 dark:bg-gray-3\"\n                                disabled={disabledButton}\n                                {...bind}\n                            />\n                            <span className=\"text-gray-10 dark:text-white lg:text-lg xl:text-xl leading-7\">\n                                ETH\n                            </span>\n                        </div>\n                        <ButtonSpinner\n                            className=\"w-8/12 md:w-full mx-auto\"\n                            disabled={disabledButton || Number(amount) <= 0}\n                            size=\"normal\"\n                            onClick={() => {\n                                if (!reservingToken) reserveToken(amount)\n                            }}\n                        >\n                            {reservingToken\n                                ? ' Reserving Destinare token'\n                                : 'Reserve Destinare token'}\n                        </ButtonSpinner>\n                    </div>\n                </div>\n                <div className=\"flex flex-shrink w-full md:w-4/6 md:pl-4 lg:pl-5 xl:pl-8 pt-4 md:pt-0\">\n                    <div className=\"flex flex-col w-full\">\n                        <div className=\"text-lg md:text-base lg:text-lg xl:text-xl text-left text-gray-14 dark:text-gray-3 leading-none font-medium\">\n                            Day Overview\n                        </div>\n                        <div className=\"flex-1 flex flex-col justify-between mt-4 xl:mt-8\">\n                            <div className=\"flex flex-row md:flex-nowrap lg:flex-row justify-between mb-1 md:mb-0\">\n                                <div className=\"md:text-center\">\n                                    <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\n                                        Total contributors\n                                    </div>\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3 \">\n                                        {useCurrency(totalUser, 0)}\n                                    </div>\n                                </div>\n                                <div className=\"md:text-center\">\n                                    <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\n                                        Your contribution\n                                    </div>\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3\">\n                                        {useCurrency(totalEther, 2)} ETH\n                                    </div>\n                                </div>\n                                <div className=\"text-left md:text-center\">\n                                    <div className=\"text-xxs md:text-sm lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\n                                        Your Tokens\n                                    </div>\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3\">\n                                        {useCurrency(totalDDOT, 2)} DDOT\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"pt-0 md:pt-5\">\n                                <div className=\"flex flex-col xs:flex-row justify-between\">\n                                    <div className=\"\">\n                                        <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2\">\n                                            Your share\n                                        </div>\n                                        <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3 font-bold\">\n                                            {percentage.toFixed(2)} % ETH\n                                        </div>\n                                    </div>\n                                    <div className=\"text-right\">\n                                        <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2\">\n                                            Total Ether\n                                        </div>\n                                        <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3  font-bold\">\n                                            {Number(totalEther).toFixed(2)} ETH\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <Progress\n                                        percent={percentage}\n                                        showInfo={false}\n                                        trailColor={\n                                            isDarkMode ? '#fff' : '#c9c9c9'\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </CardContainer>\n    )\n}\n\nexport default CardDailyReserve\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport useCurrency from '../../hooks/useCurrency'\nimport { Spin } from 'antd'\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\nimport { cls } from './../../services/helpers'\nimport { formatExponential } from './../../services/format'\nimport CardContainer from './../Cards/CardContainer'\n\nconst CardClaimingDay = ({\n    initDate,\n    data,\n    claimToken,\n    claimingToken,\n    loading,\n    disabledButton,\n}) => {\n    const { totalTokens = 0 } = data\n    // const totalUser = getPresaleInfo[0].reduce(\n    //     (acc, val) => acc + parseFloat(val),\n    //     0\n    // )\n    // const totalEther =\n    //     getPresaleInfo[1].reduce((acc, val) => acc + parseInt(val), 0) / 1e18\n\n    // const lastDate = new Date(initDate)\n    // lastDate.setDate(lastDate.getDate() + 29)\n\n    let date = new Date(initDate)\n    date.setDate(date.getDate() + 30)\n\n    date = date.toLocaleString('en-GB', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n    })\n\n    return (\n        <CardContainer\n            loading={loading}\n            variant=\"secondary\"\n            className=\"flex-1 flex px-4 lg:px-5 xl:px-8 pt-5 pb-4 md:pb-4 xl:pt-8 xl:pb-6\"\n        >\n            <div\n                className={cls(\n                    `flex-1 flex flex-col justify-between\n                ${!disabledButton && 'opacity-50'}`\n                )}\n            >\n                <div className=\"flex flex-row justify-between\">\n                    <div className=\"md:text-base lg:text-lg xl:text-xl text-center md:text-left text-primary leading-none font-medium\">\n                        Day 31\n                    </div>\n                    <div className=\"md:text-sm lg:text-base xl:text-lg text-gray-5 dark:text-gray-2 leading-none font-medium\">\n                        {date}\n                    </div>\n                </div>\n                <div className=\"md:text-sm lg:text-base xl:text-lg text-gray-14 dark:text-gray-3 font-medium \">\n                    Claiming Day\n                </div>\n                <div className=\"text-gray-5 dark:text-gray-2 text-md font-medium mt-3\">\n                    Your total tokens\n                </div>\n                <div className=\"font-bold text-black-2 dark:text-gray-3 text-lg\">\n                    {useCurrency(formatExponential(totalTokens), 2)} DDOT\n                </div>\n                <ButtonSpinner\n                    className=\"w-8/12 md:w-full mx-auto mt-2 md:mt-auto\"\n                    disabled={!disabledButton}\n                    size=\"normal\"\n                    loading={claimingToken}\n                    onClick={() => {\n                        if (!claimingToken) claimToken()\n                    }}\n                >\n                    {claimingToken\n                        ? 'Claiming Destinare token'\n                        : 'Claim Destinare token'}\n                </ButtonSpinner>\n            </div>\n            {/* <div className=\"   rounded-xl relative overflow-hidden\">\n               \n            </div> */}\n        </CardContainer>\n    )\n}\n\nexport default CardClaimingDay\n","export const formatExponential = (val) => {\n    return Number(val) / 1e16 / 100\n}\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport CardReserve from '../components/Dashboard/CardReserve'\nimport CardDailyReserve from '../components/Dashboard/CardDailyReserve'\nimport CardClaimingDay from '../components/Dashboard/CardClaimingDay'\nimport useSCInteractions from '../hooks/scInteractions/useSCInteractions'\n\nimport ReloadDataButton from '../components/ReloadButton/ReloadDataButton'\nimport { getDifferenceInDays } from '../services/dateServices'\nimport { useSCData } from '../store/reducers/scInteractionReducer/hooks'\n\nconst RenderCards = ({ currentDay, data, loading, initDate }) => {\n    const cards = []\n    for (let index = 0; index < 30; index++) {\n        // const date = new Date(initDate)\n        // date.setDate(date.getDate() + index)\n        // const day = getDifferenceInDays(date)\n\n        // if (day === 0) {\n        //     continue\n        // }\n        // if (currentDay === index + 1) continue\n\n        let date = new Date(initDate)\n        date.setDate(date.getDate() + index)\n\n        date = date.toLocaleString('en-GB', {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n        })\n\n        const component = (\n            <div key={`cardPresale${index}`}>\n                <CardReserve\n                    day={index + 1}\n                    date={date}\n                    totalUser={\n                        data.getPresaleInfo[0].length > 0\n                            ? data.getPresaleInfo[0][index]\n                            : 0\n                    }\n                    totalEther={\n                        data.getPresaleInfo[1].length > 0\n                            ? data.getPresaleInfo[1][index] / 1e18\n                            : 0\n                    }\n                    currentUser={\n                        data.getUserInfo.length > 0\n                            ? data.getUserInfo[index] / 1e18\n                            : 0\n                    }\n                    loading={loading}\n                />\n            </div>\n        )\n        cards.push(component)\n    }\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 lg:gap-4\">\n            {cards}\n        </div>\n    )\n}\n\nconst DashboardView = () => {\n    const { account } = useWeb3React()\n    const { fetchedData, data } = useSCData()\n    const { reserveToken, claimToken } = useSCInteractions()\n\n    const [reservingToken, setReservingToken] = useState(false)\n    const [claimingToken, setClaimingToken] = useState(false)\n    const { startDate, claimedTokens, ...restData } = data\n    const initDate = startDate ? new Date(startDate * 1000) : new Date()\n\n    const differenceInDays = getDifferenceInDays(initDate)\n    const currentDay = differenceInDays < 30 ? differenceInDays + 1 : 30\n    const isGreaterThanLimitDay = differenceInDays > 29\n    // getDifferenceInDays(initDate) < 31 ? getDifferenceInDays(initDate) : 30\n\n    const handleReserveToken = (amount) => {\n        setReservingToken(true)\n        reserveToken(amount, (res) => {\n            console.log({ res })\n            if (res?.message) {\n                console.log(res.message)\n            }\n            setReservingToken(false)\n        })\n    }\n\n    const handleClaimToken = () => {\n        setClaimingToken(true)\n        claimToken((res) => {\n            console.log({ res })\n            if (res?.message) {\n                console.log(res.message)\n            }\n            setClaimingToken(false)\n        })\n    }\n\n    return (\n        <div className=\"mx-5\">\n            {/* <div className=\"border-b border-gray-11 dark:border-gray-1 pb-8\">\n                <div className=\"pt-6 max-w-1650px mx-auto\">\n                    <div className=\"text-gray-5 font-semibold text-center relative dark:bg-blue-1 bg-light-2 mb-5\">\n                        <div className=\"text-2xl\">Reservations</div>\n                        <div className=\"text-lg\">\n                            Choose reservation day (date coming soon)\n                        </div>\n                    </div>\n                </div>\n            </div> */}\n            <div className=\"pt-6 max-w-1650px mx-auto pb-8\">\n                <div className=\"mb-4 flex justify-end\"></div>\n                <div className=\"flex flex-col-reverse md:grid md:grid-cols-10 gap-4\">\n                    <div className=\"md:col-span-7\">\n                        <CardDailyReserve\n                            currentDay={currentDay}\n                            data={restData}\n                            reserveToken={handleReserveToken}\n                            reservingToken={reservingToken}\n                            disabledButton={\n                                !account ||\n                                isGreaterThanLimitDay ||\n                                claimedTokens\n                            }\n                            loading={!fetchedData}\n                        />\n                    </div>\n                    <div className=\"md:col-span-3 flex\">\n                        <CardClaimingDay\n                            initDate={initDate}\n                            data={restData}\n                            claimToken={handleClaimToken}\n                            claimingToken={claimingToken}\n                            loading={!fetchedData}\n                            disabledButton={\n                                !account ||\n                                claimedTokens ||\n                                !isGreaterThanLimitDay\n                            }\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-5\">\n                    <div className=\"flex flex-row justify-between items-center mb-4\">\n                        <div className=\"text-2xl lg:text-3xl text-gray-10 dark:text-white font-medium \">\n                            Reservation Days\n                        </div>\n                        <ReloadDataButton />\n                    </div>\n                    <RenderCards\n                        currentDay={currentDay}\n                        data={restData}\n                        loading={!fetchedData}\n                        initDate={initDate}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default DashboardView\n","export const getDifferenceInDays = (initDate) => {\n    // const _initDate = new Date(initDate)\n    const today = new Date()\n    // today.setDate(today.getDate() + 30)\n    // console.log({ today, initDate })\n    // if (_initDate.getDate() === today.getDate()) return 1\n\n    // console.log(today.getTime(), _initDate.getTime())\n    const differenceInTime = today - initDate\n    const differenceInDays = Math.floor(differenceInTime / (1000 * 3600 * 24))\n\n    // console.log(differenceInDays)\n    return differenceInDays\n}\n","export const cls = (input) => {\n    return input\n        .replace(/\\s+/gm, ' ')\n        .split(' ')\n        .filter((cond) => typeof cond === 'string' && cond !== 'undefined')\n        .join(' ')\n        .trim()\n}\n\nexport const escapeRegExp = (string) => {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","/* eslint-disable no-unused-vars */\nimport React, { forwardRef } from 'react'\nimport { FaSpinner } from 'react-icons/fa'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'inline-flex items-center justify-center focus:outline-none transition ease-in-out duration-300 rounded-md gap-2',\n    disabled: 'opacity-50 cursor-not-allowed',\n    pill: 'rounded-full',\n    size: {\n        none: '',\n        small: 'px-2 py-1 text-sm',\n        normal: 'px-4 py-2',\n        large: 'px-8 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'bg-primary hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-white',\n        secondary:\n            'bg-gray-200 hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 text-gray-900 hover:text-white',\n        danger: 'bg-red-500 hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white',\n        primaryborder:\n            'border-primary border hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-primary',\n        warning:\n            'bg-yellow-600 hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-white',\n        warningLink:\n            'bg-transparent hover:bg-gray-100 border border-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-yellow-600',\n    },\n    spinnerSize: {\n        small: 'text-xl',\n        normal: 'text-2xl',\n        large: 'text-3xl',\n    },\n}\n\nconst ButtonSpinner = forwardRef(\n    (\n        {\n            children,\n            className,\n            loading = false,\n            disabled,\n            type = 'button',\n            size = 'small',\n            variant = 'primary',\n            pill,\n            spinnerSize = 'normal',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <button\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${pill && classes.pill}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {loading && (\n                    <FaSpinner\n                        className={cls(\n                            `animate-spin ${classes.spinnerSize[spinnerSize]}`\n                        )}\n                    />\n                )}\n                {children}\n            </button>\n        )\n    }\n)\n\nButtonSpinner.displayName = 'ButtonSpinner'\n\nexport default ButtonSpinner\n","import React, { forwardRef } from 'react'\nimport { Spin } from 'antd'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: ' border rounded-xl relative overflow-hidden',\n    variant: {\n        none: '',\n        primary:\n            'bg-white dark:bg-gray-4 border-light-4 dark:border-gray-16 hover:border-primary',\n        secondary:\n            'bg-gray-0 dark:bg-blue-5 border-light-4 dark:border-black-0',\n    },\n    borderOpacity: {},\n}\n\nconst CardContainer = forwardRef(\n    (\n        { className, variant = 'primary', loading, children, ...restProps },\n        ref\n    ) => {\n        return (\n            <div\n                className={cls(`\n                ${classes.base}\n                ${classes.variant[variant]}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {' '}\n                {loading && (\n                    <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-50\">\n                        <Spin size=\"large\" />\n                    </div>\n                )}\n                {children}\n            </div>\n        )\n    }\n)\n\nCardContainer.displayName = 'CardContainer'\n\nexport default CardContainer\n","import React, { forwardRef } from 'react'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'focus:outline-none transition ease-in-out duration-300 px-1',\n    disabled: 'opacity-50 cursor-not-allowed',\n    size: {\n        small: 'px-3 py-1 text-sm',\n        normal: 'px-3 py-2',\n        large: 'px-3 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'border border-primary focus:ring-2 focus:ring-primary focus:ring-opacity-50',\n        secondary:\n            'border border-light-4 focus:ring-2 focus:ring-light-4 focus:ring-opacity-50',\n        danger: 'border border-red-500 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50',\n    },\n    rounded: {\n        none: 'rounded-none',\n        small: 'rounded-sm',\n        medium: 'rounded-md',\n        large: 'rounded-lg',\n        xl: 'rounded-xl',\n    },\n}\n\nconst Input = forwardRef(\n    (\n        {\n            className,\n            disabled,\n            type = 'text',\n            size = 'small',\n            variant = 'primary',\n            rounded = 'none',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <input\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${classes.rounded[rounded]}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            />\n        )\n    }\n)\n\nInput.displayName = 'Input'\n\nexport default Input\n","import { useState } from 'react'\nimport useWindowSize from './useWindowSize'\nimport useDeepCompareEffect from './useDeepCompareEffect'\n\nconst temp = (values) => {\n    for (let index = 0; index < values.length; index++) {\n        if (typeof values[index] !== 'undefined') {\n            return values[index]\n        }\n    }\n}\n\nconst useResponsive = ({ xxl, xl, lg, md, sm, base }) => {\n    const [value, setValue] = useState(() => temp([xxl, xl, lg, md, sm, base]))\n\n    const { width } = useWindowSize()\n    useDeepCompareEffect(() => {\n        if (width >= 1536) {\n            setValue(temp([xxl, xl, lg, md, sm, base]))\n        } else if (width >= 1280) {\n            setValue(temp([xl, lg, md, sm, base]))\n        } else if (width >= 1024) {\n            setValue(temp([lg, md, sm, base]))\n        } else if (width >= 768) {\n            setValue(temp([md, sm, base]))\n        } else if (width >= 640) {\n            setValue(temp([sm, base]))\n        } else {\n            setValue(base)\n        }\n    }, [width])\n    return [value]\n}\n\nexport default useResponsive\n"],"sourceRoot":""}