{"version":3,"sources":["components/ReloadButton/ReloadDataButton.js","components/Cards/CardReserve.js","hooks/useClickOutside.js","components/Cards/CardDailyReserve.js","components/Cards/CardClaimingDay.js","components/Cards/CardYourContribution.js","components/Cards/CardTokens.js","views/MarketView.js","services/dateServices.js"],"names":["antIcon","className","style","fontSize","spin","ReloadDataButton","reloadData","useSCInteractions","fetchingData","useSCData","fetching","onClick","console","log","disabled","indicator","CardReserve","date","ref","cb","day","totalUser","totalEther","currentUser","loading","percentage","useListenCookie","isDarkMode","cardRef","useRef","useState","showMore","setShowMore","useEventListener","e","current","contains","target","document","size","top","useCurrency","percent","showInfo","trailColor","toFixed","Number","LoadingOutlined","CardDailyReserve","currentDay","data","reserveToken","reservingToken","account","disabledButton","amount","setAmount","getPresaleInfo","getUserInfo","indexDay","length","min","max","defaultValue","onChange","val","paddingTop","paddingBottom","CardClaimingDay","claimToken","claimingToken","reduce","acc","parseFloat","parseInt","Contribution","initDate","userInfo","contributions","index","Date","setDate","getDate","_amount","component","getUTCDate","getUTCMonth","getUTCFullYear","push","Fragment","CardYourContribution","total","accum","item","_total","CardTokens","_tokens","tokens","isNaN","RenderCards","cards","xs","sm","md","lg","xl","MarketView","fetchedData","setReservingToken","setClaimingToken","useWeb3React","startDate","claimedTokens","restData","differenceInDays","differenceInTime","Math","floor","getDifferenceInDays","isGreaterThanLimitDay","gutter","res","message","userTokens"],"mappings":"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","file":"static/js/13.174e04a8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport useSCInteractions from '../../hooks/scInteractions/useSCInteractions'\r\nimport useSCData from './../../hooks/scInteractions/useSCData'\r\n\r\nconst antIcon = (\r\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n)\r\n\r\nconst ReloadDataButton = () => {\r\n    const { reloadData } = useSCInteractions()\r\n    const { fetching: fetchingData } = useSCData()\r\n    return (\r\n        <button\r\n            className=\" bg-primary text-lg px-12 py-2 rounded-md text-white disabled:opacity-50\"\r\n            onClick={() => {\r\n                console.log('Entro')\r\n                reloadData(true)\r\n            }}\r\n            disabled={fetchingData}\r\n        >\r\n            {fetchingData ? (\r\n                <span>\r\n                    <span className=\"pr-2\">\r\n                        <Spin indicator={antIcon} />\r\n                    </span>\r\n                    Refreshing\r\n                </span>\r\n            ) : (\r\n                'Refresh'\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ReloadDataButton\r\n","import React, { useRef, useState } from 'react'\nimport { Progress, Spin } from 'antd'\n\nimport { AiOutlineCheckCircle, AiOutlineUser } from 'react-icons/ai'\nimport { FaEthereum, FaChevronDown, FaChevronUp } from 'react-icons/fa'\nimport { RiLock2Line } from 'react-icons/ri'\nimport useListenCookie from '../../hooks/useListenCookie'\nimport useClickOutside from './../../hooks/useClickOutside'\nimport useCurrency from '../../hooks/useCurrency'\n\nconst CardReserve = ({\n    date,\n    day,\n    totalUser,\n    totalEther,\n    currentUser,\n    loading,\n}) => {\n    const percentage = currentUser === 0 ? 0 : (currentUser / totalEther) * 100\n    const [theme] = useListenCookie('theme')\n    const isDarkMode = theme === 'dark'\n    const cardRef = useRef(null)\n    const [showMore, setShowMore] = useState(false)\n\n    useClickOutside(cardRef, () => {\n        setShowMore(false)\n    })\n\n    const handleShowMore = () => {\n        setShowMore(!showMore)\n    }\n\n    return (\n        <div\n            ref={cardRef}\n            className=\"bg-gray dark:bg-gray-4 border border-gray-11 dark:border-gray-4 py-5 px-4 rounded-xl relative overflow-hidden dark:overflow-visible\"\n        >\n            {loading && (\n                <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-20\">\n                    <Spin size=\"large\" />\n                </div>\n            )}\n            <div className=\"absolute top-0 right-0 pt-5 pr-4\">\n                <span className=\"text-green-1 text-3xl\">\n                    <AiOutlineCheckCircle />\n                </span>\n            </div>\n            <div className=\"border-b border-gray-7 text-gray-10 dark:text-white flex flex-col pb-3 mt-10 xs:mt-0\">\n                <div className=\"text-3xl leading-none\">\n                    <div></div>\n                    <span>\n                        <strong>833,333</strong>\n                    </span>\n                    <span className=\"text-primary\">&nbsp;DDOT</span>\n                </div>\n\n                <div className=\"flex flex-row my-2\">\n                    <p className=\"text-gray-10 dark:text-white text-lg\">\n                        Day {day} (UTC)\n                        <span className=\"text-gray-5 pl-3\">\n                            (date coming soon)\n                            {/* {date} */}\n                        </span>\n                    </p>\n                </div>\n            </div>\n            <div className=\"border-b border-gray-7 flex flex-row justify-between py-3 text-lg text-gray-5\">\n                <div className=\"flex flex-row\">\n                    <div className=\"relative pl-2 pr-4\" style={{ top: '2px' }}>\n                        <AiOutlineUser />\n                    </div>\n                    Contributions\n                </div>\n                <div className=\"font-medium text-gray-10 dark:text-white\">\n                    {totalUser}\n                </div>\n            </div>\n            <div className=\"border-b border-gray-7 flex flex-row justify-between py-3 text-lg text-gray-5\">\n                <div className=\"flex flex-row\">\n                    <div className=\"relative pl-2 pr-4\" style={{ top: '2px' }}>\n                        <FaEthereum />\n                    </div>\n                    Total Ether\n                </div>\n                <div className=\"font-medium text-gray-10 dark:text-white\">\n                    {useCurrency(totalEther, 2)} ETH\n                </div>\n            </div>\n            <div className=\"flex justify-center text-gray-5 text-lg mb-10 pt-8\">\n                <div className=\"relative mr-2\" style={{ top: '2px' }}>\n                    <RiLock2Line />\n                </div>\n                <span className=\"\">Day is close</span>\n            </div>\n            <div className=\"flex-grow flex justify-end\">\n                <div\n                    className=\"cursor-pointer flex flex-row text-primary text-lg\"\n                    onClick={handleShowMore}\n                >\n                    Show details\n                    <div className=\"relative ml-2 mt-1\">\n                        {!showMore ? <FaChevronDown /> : <FaChevronUp />}\n                    </div>\n                </div>\n            </div>\n            {showMore && (\n                <div className=\"dark:border-t-4 border-t dark:border-blue-1 border-gray-11 -mx-18px px-4 mt-3 pt-3\">\n                    <div className=\"mb-5 \">\n                        <Progress\n                            percent={percentage}\n                            showInfo={false}\n                            trailColor={isDarkMode ? '#fff' : '#c9c9c9'}\n                        />\n                    </div>\n                    <div className=\"flex flex-row justify-between leading-none\">\n                        <div className=\"flex flex-col\">\n                            <div className=\"text-gray-5 mb-2\">Your share</div>\n                            <div className=\"text-gray-10 dark:text-white text-xl\">\n                                {percentage.toFixed(2)} %\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col items-end\">\n                            <div className=\"text-gray-5 text-end mb-2\">\n                                Total Ether\n                            </div>\n                            <div className=\"text-gray-10 dark:text-white text-xl\">\n                                {Number(totalEther).toFixed(2)} ETH\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CardReserve\n","import useEventListener from './useEventListener'\r\n\r\nexport default function useClickOutside(ref, cb) {\r\n    useEventListener(\r\n        'click',\r\n        (e) => {\r\n            if (ref.current == null || ref.current.contains(e.target)) return\r\n            cb(e)\r\n        },\r\n        document\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Progress, InputNumber, Space, Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport useListenCookie from '../../hooks/useListenCookie'\r\nimport useCurrency from '../../hooks/useCurrency'\r\n\r\nconst antIcon = (\r\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n)\r\n\r\nconst CardDailyReserve = ({\r\n    currentDay,\r\n    data,\r\n    reserveToken,\r\n    reservingToken,\r\n    account,\r\n    loading,\r\n    disabledButton,\r\n}) => {\r\n    const [amount, setAmount] = useState(1)\r\n    const [theme] = useListenCookie('theme')\r\n    const isDarkMode = theme === 'dark'\r\n\r\n    const { getPresaleInfo, getUserInfo } = data\r\n\r\n    // const _initDate = new Date(initDate)\r\n    // const currentDate = new Date()\r\n    // const day = currentDate.getDate() - _initDate.getDate()\r\n    // day += 1\r\n    const indexDay = currentDay - 1\r\n    const totalUser =\r\n        getPresaleInfo[0].length > 0 ? getPresaleInfo[0][indexDay] : 0\r\n    const totalEther =\r\n        getPresaleInfo[1].length > 0 ? getPresaleInfo[1][indexDay] / 1e18 : 0\r\n\r\n    const currentUser =\r\n        getUserInfo.length > 0 ? getUserInfo[indexDay] / 1e18 : 0\r\n\r\n    const percentage =\r\n        Number(currentUser) === 0\r\n            ? 0\r\n            : (Number(currentUser) / Number(totalEther)) * 100\r\n\r\n    return (\r\n        <div className=\"bg-gray dark:bg-gray-4 border border-gray-11 dark:border-gray-4 py-6 px-8 rounded-xl relative overflow-hidden\">\r\n            {loading && (\r\n                <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-20 z-50\">\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n            )}\r\n            <div className=\"mb-0 lg:mb-3\">\r\n                <div className=\"text-gray-10 dark:text-white flex flex-col\">\r\n                    <div className=\"text-3xl leading-none\">\r\n                        <span className=\"text-primary\">Daily&nbsp;</span>\r\n                        <span>reservation</span>\r\n                    </div>\r\n                    <div className=\"flex flex-row my-2\">\r\n                        <p className=\"text-gray-10 dark:text-white text-lg\">\r\n                            Day {currentDay} (UTC)\r\n                            <span className=\"text-gray-5 pl-3\">\r\n                                {' '}\r\n                                (date coming soon)\r\n                                {/* {currentDate.getUTCDate()}/\r\n                                {currentDate.getUTCMonth() + 1}/\r\n                                {currentDate.getUTCFullYear()} */}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row divide-x-0 divide-y lg:divide-x lg:divide-y-0\">\r\n                <div className=\"flex-grow py-5 pr-0 lg:py-0 lg:pr-8 xl:pr-16\">\r\n                    <div className=\"flex flex-col\">\r\n                        <div className=\"text-gray-10 dark:text-white text-3xl mb-2 leading-none font-semibold text-center lg:text-left\">\r\n                            833,333\r\n                        </div>\r\n                        <div className=\"text-gray-10 dark:text-white leading-none text-2xl mb-2 text-center lg:text-left\">\r\n                            DDOT token\r\n                        </div>\r\n                        <div className=\"input-amount text-center\">\r\n                            <Space>\r\n                                <InputNumber\r\n                                    min={0}\r\n                                    max={999}\r\n                                    defaultValue={1}\r\n                                    onChange={(val) => setAmount(val)}\r\n                                    disabled={disabledButton}\r\n                                />\r\n                                <span className=\"text-gray-10 dark:text-white text-2xl\">\r\n                                    ETH\r\n                                </span>\r\n                            </Space>\r\n                        </div>\r\n                        <div>\r\n                            {disabledButton ? (\r\n                                <button\r\n                                    className=\"disabled:opacity-50 bg-primary rounded-md py-4px px-1 text-white text-lg w-full\"\r\n                                    style={{\r\n                                        paddingTop: '6px',\r\n                                        paddingBottom: '6px',\r\n                                    }}\r\n                                    disabled\r\n                                >\r\n                                    Reserve DDOT token\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"bg-primary rounded-md py-4px px-1 text-white text-lg w-full\"\r\n                                    style={{\r\n                                        paddingTop: '6px',\r\n                                        paddingBottom: '6px',\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        if (!reservingToken)\r\n                                            reserveToken(amount)\r\n                                    }}\r\n                                >\r\n                                    {reservingToken ? (\r\n                                        <span>\r\n                                            <span className=\"pr-2\">\r\n                                                <Spin indicator={antIcon} />\r\n                                            </span>\r\n                                            Reserving DDOT token\r\n                                        </span>\r\n                                    ) : (\r\n                                        'Reserve DDOT token'\r\n                                    )}\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-shrink w-full lg:w-4/6 px-0 py-5 lg:py-0 lg:pl-5 lg:pr-5 xl:pl-10\">\r\n                    <div className=\"flex-1 flex flex-col justify-between \">\r\n                        <div className=\"flex flex-wrap lg:flex-nowrap lg:flex-row justify-center md:justify-between\">\r\n                            <div className=\"text-center py-2 md:py-0\">\r\n                                <div className=\"text-gray-5 text-md px-5 md:p-0\">\r\n                                    Total contributions\r\n                                </div>\r\n                                <div className=\"text-gray-10 dark:text-white text-lg\">\r\n                                    {useCurrency(totalUser, 0)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-center py-2 md:py-0\">\r\n                                <div className=\"text-gray-5 text-md px-5 md:p-0\">\r\n                                    Total Ether\r\n                                </div>\r\n                                <div className=\"text-gray-10 dark:text-white text-lg\">\r\n                                    {useCurrency(totalEther, 2)} ETH\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-center py-2 md:py-0\">\r\n                                <div className=\"text-gray-5 text-md px-5 md:p-0\">\r\n                                    Your contribution\r\n                                </div>\r\n                                <div className=\"text-gray-10 dark:text-white text-lg\">\r\n                                    {useCurrency(currentUser, 2)} ETH\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pt-5\">\r\n                            <div className=\"flex flex-col xs:flex-row justify-between\">\r\n                                <div className=\"text-center py-2 md:py-0\">\r\n                                    <div className=\"text-gray-5 text-md\">\r\n                                        Your share\r\n                                    </div>\r\n                                    <div className=\"text-gray-10 dark:text-white text-xl\">\r\n                                        {percentage.toFixed(2)} %\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-center py-2 md:py-0\">\r\n                                    <div className=\"text-gray-5 text-md\">\r\n                                        Total Destinare token\r\n                                    </div>\r\n                                    <div className=\"text-gray-10 dark:text-white text-xl\">\r\n                                        {Number(totalEther).toFixed(2)} ETH\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <Progress\r\n                                    percent={percentage}\r\n                                    showInfo={false}\r\n                                    trailColor={isDarkMode ? '#fff' : '#c9c9c9'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDailyReserve\r\n","import React from 'react'\r\nimport useCurrency from '../../hooks/useCurrency'\r\nimport { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst antIcon = (\r\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n)\r\n\r\nconst CardClaimingDay = ({\r\n    // initDate,\r\n    data,\r\n    claimToken,\r\n    claimingToken,\r\n    loading,\r\n    disabledButton,\r\n}) => {\r\n    const { getPresaleInfo } = data\r\n    const totalUser = getPresaleInfo[0].reduce(\r\n        (acc, val) => acc + parseFloat(val),\r\n        0\r\n    )\r\n    const totalEther =\r\n        getPresaleInfo[1].reduce((acc, val) => acc + parseInt(val), 0) / 1e18\r\n\r\n    // const lastDate = new Date(initDate)\r\n    // lastDate.setDate(lastDate.getDate() + 29)\r\n    return (\r\n        <div className=\"bg-gray dark:bg-gray-4 border border-gray-11 dark:border-gray-4 flex-1 flex flex-col justify-between py-6 px-8 rounded-xl relative\">\r\n            {loading && (\r\n                <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-20 z-50\">\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n            )}\r\n            <div className=\"mb-0\">\r\n                <div className=\"text-gray-10 dark:text-white flex flex-col\">\r\n                    <div className=\"text-3xl leading-none\">\r\n                        <span className=\"text-primary\">Claiming&nbsp;</span>\r\n                        <span>Pre-sale</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row my-2\">\r\n                    <p className=\"text-gray-10 dark:text-white text-lg\">\r\n                        Day 30 (UTC)\r\n                        <span className=\"text-gray-5 pl-3\">\r\n                            (date coming soon)\r\n                            {/* {`${lastDate.getUTCDate()}/${\r\n                                lastDate.getUTCMonth() + 1\r\n                            }/${lastDate.getUTCFullYear()}`} */}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col lg:flex-row py-5 xl:py-0 divide-x-0 divide-y lg:divide-x lg:divide-y-0\">\r\n                <div className=\"text-center py-2 lg:py-0 w-full\">\r\n                    <div className=\"text-gray-5 text-base xxxl:text-2xl\">\r\n                        Total Ether\r\n                    </div>\r\n                    <div className=\"text-gray-10 dark:text-white text-xl lg:text-2xl xxxl:text-3xl\">\r\n                        {useCurrency(totalEther, 2)} ETH\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center py-2 lg:py-0 w-full\">\r\n                    <div className=\"text-gray-5 text-base lg:text-lg xxxl:text-2xl\">\r\n                        Contributions\r\n                    </div>\r\n                    <div className=\"text-gray-10 dark:text-white text-xl lg:text-2xl xxxl:text-3xl\">\r\n                        {totalUser}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <button\r\n                    className=\"disabled:opacity-50 bg-primary rounded-md py-4px px-1 text-white text-lg w-full xxxl:w-9/12\"\r\n                    onClick={() => {\r\n                        if (!claimingToken) claimToken()\r\n                    }}\r\n                    disabled={disabledButton}\r\n                >\r\n                    {claimingToken ? (\r\n                        <span>\r\n                            <span className=\"pr-2\">\r\n                                <Spin indicator={antIcon} />\r\n                            </span>\r\n                            Claiming DDOT token\r\n                        </span>\r\n                    ) : (\r\n                        'Claim DDOT token'\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardClaimingDay\r\n","import React from 'react'\r\n\r\nconst Contribution = ({ initDate, userInfo }) => {\r\n    const contributions = []\r\n    for (let index = 0; index < 30; index++) {\r\n        const date = new Date(initDate)\r\n        date.setDate(date.getDate() + index)\r\n        const amount = userInfo.length > 0 ? userInfo[index] : 0\r\n        const _amount = Number(amount) / 1e18\r\n        const component = (\r\n            <div\r\n                key={`dayContribution${index}`}\r\n                className=\"flex flex-row py-2 justify-between text-gray-5 border-b border-gray-5\"\r\n            >\r\n                <div className=\"text-base\">\r\n                    {`${date.getUTCDate()}/${\r\n                        date.getUTCMonth() + 1\r\n                    }/${date.getUTCFullYear()}`}{' '}\r\n                    - Day {index + 1} (UTC)\r\n                </div>\r\n                <div className=\"text-base\">{_amount} ETH</div>\r\n            </div>\r\n        )\r\n        if (_amount > 0) contributions.push(component)\r\n    }\r\n    return <React.Fragment>{contributions}</React.Fragment>\r\n}\r\n\r\nconst CardYourContribution = ({ initDate, data }) => {\r\n    const total = data.getUserInfo.reduce(\r\n        (accum, item) => accum + Number(item),\r\n        0\r\n    )\r\n    const _total = Number(total) / 1e18\r\n    return (\r\n        <div className=\"flex-1 flex flex-col justify-between bg-gray dark:bg-gray-4 border border-gray-11 dark:border-gray-4 pt-4 pb-4 px-8 rounded-xl relative\">\r\n            <div className=\"mb-2 text-gray-10 dark:text-white flex flex-row justify-between\">\r\n                <div className=\"text-xl leading-none\">\r\n                    <span className=\"text-gray-10 dark:text-white \">\r\n                        Your contribution\r\n                    </span>\r\n                </div>\r\n                <div className=\"text-2xl leading-none\">\r\n                    <span className=\"text-gray-10 dark:text-white\">\r\n                        {_total} ETH\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"pb-5 space-y-2\">\r\n                <Contribution\r\n                    initDate={initDate}\r\n                    userInfo={data.getUserInfo}\r\n                ></Contribution>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardYourContribution\r\n","import useCurrency from '../../hooks/useCurrency'\r\n\r\nconst CardTokens = ({ tokens }) => {\r\n    const _tokens = tokens / 1e18\r\n    return (\r\n        <div className=\"text-center bg-gray dark:bg-gray-4 border border-gray-11 dark:border-gray-4 pt-4 pb-4 px-8 rounded-xl mb-5\">\r\n            <p className=\"text-xl leading-none text-gray-10 dark:text-white\">\r\n                Your tokens DDOT\r\n            </p>\r\n            <p className=\"mt-5 text-xl leading-none text-gray-10 dark:text-white\">\r\n                {isNaN(_tokens) ? 0 : useCurrency(_tokens, 0)}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\nexport default CardTokens\r\n","import React, { useState } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport CardReserve from '../components/Cards/CardReserve'\r\nimport CardDailyReserve from '../components/Cards/CardDailyReserve'\r\nimport CardClaimingDay from './../components/Cards/CardClaimingDay'\r\nimport CardYourContribution from './../components/Cards/CardYourContribution'\r\nimport CardTokens from './../components/Cards/CardTokens'\r\nimport useSCInteractions from '../hooks/scInteractions/useSCInteractions'\r\nimport useSCData from './../hooks/scInteractions/useSCData'\r\n\r\nimport ReloadDataButton from '../components/ReloadButton/ReloadDataButton'\r\nimport { getDifferenceInDays } from './../services/dateServices'\r\n\r\nconst RenderCards = ({ currentDay, data, loading }) => {\r\n    const cards = []\r\n    for (let index = 0; index < 30; index++) {\r\n        // const date = new Date(initDate)\r\n        // date.setDate(date.getDate() + index)\r\n        // const day = getDifferenceInDays(date)\r\n\r\n        // if (day === 0) {\r\n        //     continue\r\n        // }\r\n        if (currentDay === index + 1) continue\r\n        const component = (\r\n            <Col\r\n                key={`cardPresale${index}`}\r\n                xs={24}\r\n                sm={24}\r\n                md={24}\r\n                lg={12}\r\n                xl={12}\r\n                className=\"mb-4\"\r\n            >\r\n                <CardReserve\r\n                    day={index + 1}\r\n                    // date={`${date.getUTCDate()}/${\r\n                    //     date.getUTCMonth() + 1\r\n                    // }/${date.getUTCFullYear()}`}\r\n                    totalUser={\r\n                        data.getPresaleInfo[0].length > 0\r\n                            ? data.getPresaleInfo[0][index]\r\n                            : 0\r\n                    }\r\n                    totalEther={\r\n                        data.getPresaleInfo[1].length > 0\r\n                            ? data.getPresaleInfo[1][index] / 1e18\r\n                            : 0\r\n                    }\r\n                    currentUser={\r\n                        data.getUserInfo.length > 0\r\n                            ? data.getUserInfo[index] / 1e18\r\n                            : 0\r\n                    }\r\n                    loading={loading}\r\n                />\r\n            </Col>\r\n        )\r\n        cards.push(component)\r\n    }\r\n    return <React.Fragment>{cards}</React.Fragment>\r\n}\r\n\r\nconst MarketView = () => {\r\n    const { fetchedData, data } = useSCData()\r\n    const { reserveToken, claimToken } = useSCInteractions()\r\n\r\n    const [reservingToken, setReservingToken] = useState(false)\r\n    const [claimingToken, setClaimingToken] = useState(false)\r\n    const { account } = useWeb3React()\r\n    const { startDate, claimedTokens, ...restData } = data\r\n    const initDate = startDate ? new Date(startDate * 1000) : new Date()\r\n\r\n    const differenceInDays = getDifferenceInDays(initDate)\r\n    const currentDay = differenceInDays < 30 ? differenceInDays + 1 : 30\r\n    const isGreaterThanLimitDay = differenceInDays > 29\r\n    // getDifferenceInDays(initDate) < 31 ? getDifferenceInDays(initDate) : 30\r\n\r\n    const handleReserveToken = (amount) => {\r\n        setReservingToken(true)\r\n        reserveToken(amount, (res) => {\r\n            console.log({ res })\r\n            if (res?.message) {\r\n                console.log(res.message)\r\n            }\r\n            setReservingToken(false)\r\n        })\r\n    }\r\n\r\n    const handleClaimToken = () => {\r\n        setClaimingToken(true)\r\n        claimToken((res) => {\r\n            console.log({ res })\r\n            if (res?.message) {\r\n                console.log(res.message)\r\n            }\r\n            setClaimingToken(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mx-5\">\r\n            <div className=\"border-b border-gray-11 dark:border-gray-1 pb-8\">\r\n                <div className=\"pt-6 max-w-1650px mx-auto\">\r\n                    <div className=\"text-gray-5 font-semibold text-center relative dark:bg-blue-1 bg-light-2 mb-5\">\r\n                        <div className=\"text-2xl\">Reservations</div>\r\n                        <div className=\"text-lg\">\r\n                            Choose reservation day (date coming soon)\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"pt-6 max-w-1650px mx-auto pb-8\">\r\n                <div className=\"mb-4 flex justify-end\">\r\n                    <ReloadDataButton />\r\n                </div>\r\n                <Row gutter={[20, 20]} className=\"flex justify-center\">\r\n                    <Col xs={24} sm={24} md={24} lg={24} xl={17}>\r\n                        <CardDailyReserve\r\n                            currentDay={currentDay}\r\n                            data={restData}\r\n                            reserveToken={handleReserveToken}\r\n                            reservingToken={reservingToken}\r\n                            disabledButton={\r\n                                !account ||\r\n                                isGreaterThanLimitDay ||\r\n                                claimedTokens\r\n                            }\r\n                            loading={!fetchedData}\r\n                        />\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                        sm={24}\r\n                        md={24}\r\n                        lg={18}\r\n                        xl={7}\r\n                        className=\"flex\"\r\n                    >\r\n                        <CardClaimingDay\r\n                            // currentDay={currentDay}\r\n                            data={restData}\r\n                            claimToken={handleClaimToken}\r\n                            claimingToken={claimingToken}\r\n                            loading={!fetchedData}\r\n                            disabledButton={\r\n                                !account ||\r\n                                claimedTokens ||\r\n                                !isGreaterThanLimitDay\r\n                            }\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    gutter={[20, 20]}\r\n                    className=\"mt-5 flex justify-center flex-wrap-reverse xl:flex-nowrap\"\r\n                >\r\n                    <Col xs={24} sm={24} md={24} lg={24} xl={17}>\r\n                        <Row gutter={16}>\r\n                            <Col sm={24} className=\"mb-4\">\r\n                                <div className=\"text-2xl text-gray-10 dark:text-white font-semibold\">\r\n                                    Reservation Days\r\n                                </div>\r\n                            </Col>\r\n                            <RenderCards\r\n                                currentDay={currentDay}\r\n                                data={restData}\r\n                                loading={!fetchedData}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={18} xl={7}>\r\n                        <CardTokens tokens={data.userTokens} />\r\n                        <CardYourContribution\r\n                            initDate={initDate}\r\n                            data={restData}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MarketView\r\n","export const getDifferenceInDays = (initDate) => {\r\n    // const _initDate = new Date(initDate)\r\n    const today = new Date()\r\n    // today.setDate(today.getDate() + 30)\r\n    // console.log({ today, initDate })\r\n    // if (_initDate.getDate() === today.getDate()) return 1\r\n\r\n    // console.log(today.getTime(), _initDate.getTime())\r\n    const differenceInTime = today - initDate\r\n    const differenceInDays = Math.floor(differenceInTime / (1000 * 3600 * 24))\r\n\r\n    // console.log(differenceInDays)\r\n    return differenceInDays\r\n}\r\n"],"sourceRoot":""}