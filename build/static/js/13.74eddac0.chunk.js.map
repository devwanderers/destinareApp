{"version":3,"sources":["hooks/useValidate.js","hooks/useCopyToClipboard.js","components/Invest/WhitelistedAddress.js","components/Invest/Activity/ActivityHeader.js","services/address-services.js","components/Invest/Activity/ActivityElement.js","components/Invest/Activity/index.js","views/InvestView.js","services/helpers.js","components/Buttons/ButtonSpinner.js","components/Cards/CardContainer.js","store/reducers/whitelist/hooks.js","assets/images/utilities/wallet2.png","assets/images/utilities/index.js","hooks/scInteractions/privateSaleHooks.js","constants/stakingLevels.js"],"names":["useValidate","params","useState","valid","setValid","useEffect","length","_valid","reduce","acc","p","useCopyToClipboard","value","setValue","success","setSuccess","useInterval","text","options","result","copy","WhitelistedAddress","props","account","useWeb3React","copyToClipboard","CardContainer","onClick","className","title","ActivityContainer","formatAddress","address","size","substring","ActivityElement","data","timeStamp","from","to","tx","amount","tokens","formatDate","Date","parseInt","toLocaleDateString","year","month","day","console","log","formattedToken","toLocaleString","style","top","Activity","minWidth","ActivityHeader","src","utilitiesImages","wallet","alt","InvestView","loading","setLoading","history","useHistory","alreadyRequest","useAlreadyRequestWhitelist","whitelist","useWhiteList","fetchWhiteList","useFetchWhiteList","useSCData","fetchedData","totalTokensPrivate","totalTokensPre","claimPrivateTokens","useClaimPrivateSale","alreadyClaimedPrivateTokens","privateSale","alreadyClaimedPreTokens","preSale","notification","destroy","useDeepCompareEffect","whiteList","verified","key","message","description","push","PrivateSalePath","duration","info","close","height","userName","ButtonSpinner","StakingView","stakeLevel","stakingLvlsPrivate","find","s","packageId","packagePrivateSale","stakeId","err","res","disabled","cls","input","replace","split","filter","cond","join","trim","escapeRegExp","string","classes","base","pill","none","small","normal","large","variant","primary","secondary","danger","primaryborder","warning","warningLink","spinnerSize","forwardRef","ref","children","type","restProps","displayName","borderOpacity","useClearWhiteListReducer","dispatch","useDispatch","useCallback","clearWhitelistReducer","useSelector","alreadyRequestSelector","a","hasRequestWhitelist","accountWhitelistSelector","fetchWhitelist","useRequestWhitelist","createWhitelist","useUpdateWhitelist","updateWhiteList","whiteListFetchSelector","useFetchingWhiteList","whiteListFetchingSelector","useActiveWeb3React","library","reloaData","useReloadData","callback","contract","eth","Contract","DestinareContract","process","methods","claimPrivateSaleTokens","send","undefined","_err","useBuyPrivateSale","plan","buyPrivateSaleTokens","then","subtitle","properties","stakingLvlsPre"],"mappings":"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","file":"static/js/13.74eddac0.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useState, useEffect } from 'react'\n\nconst useValidate = (params = []) => {\n    const [valid, setValid] = useState(false)\n\n    useEffect(() => {\n        if (params.length > 0) {\n            const _valid = params.reduce((acc, p) => {\n                if (acc) return acc\n                return p\n            }, false)\n            setValid(_valid)\n        }\n    }, [params])\n\n    return valid\n}\n\nexport default useValidate\n","import { useState } from 'react'\nimport copy from 'copy-to-clipboard'\nimport useInterval from './useInterval'\n\nexport default function useCopyToClipboard() {\n    const [value, setValue] = useState()\n    const [success, setSuccess] = useState()\n\n    useInterval(\n        () => {\n            setSuccess(false)\n        },\n        success ? 500 : null\n    )\n\n    const copyToClipboard = (text, options) => {\n        const result = copy(text, options)\n        if (result) setValue(text)\n        setSuccess(result)\n    }\n\n    return [copyToClipboard, { value, success }]\n}\n","import React from 'react'\nimport CardContainer from './../Cards/CardContainer'\nimport { IoCopyOutline } from 'react-icons/io5'\nimport { useWeb3React } from '@web3-react/core'\nimport useCopyToClipboard from './../../hooks/useCopyToClipboard'\nimport { Tooltip } from 'antd'\n\nconst WhitelistedAddress = (props) => {\n    const { account } = useWeb3React()\n    const [copyToClipboard, { success }] = useCopyToClipboard()\n\n    return (\n        <CardContainer\n            onClick={() => copyToClipboard(account)}\n            className=\"py-3 mx-auto cursor-pointer\"\n        >\n            <div className=\"flex flex-row justify-center w-full px-4 lg:px-12\">\n                <div className=\"flex items-center text-black-2 dark:text-gray-6\">\n                    <span className=\"text-xs lg:text-sm\">{account}</span>\n                </div>\n                <div className=\"ml-auto flex\">\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\n                        <button\n                            onClick={() => copyToClipboard(account)}\n                            className=\"text-sm lg:text-base text-primary\"\n                        >\n                            <IoCopyOutline />\n                        </button>\n                    </Tooltip>\n                </div>\n            </div>\n        </CardContainer>\n    )\n}\n\nexport default WhitelistedAddress\n","import React from 'react'\n\nconst ActivityContainer = (props) => {\n    return (\n        <div className=\"flex flex-row w-full px-4 lg:px-12 pt-3 pb-2 font-medium text-black-2 dark:text-gray-6 text-xs\">\n            <div className=\"flex-1 \">Date</div>\n            <div className=\"flex-1 \">Type</div>\n            <div className=\"flex-1 \">From</div>\n            <div className=\"flex-1 \">To</div>\n            <div className=\"flex-1 \">Tx</div>\n            <div className=\"flex-1 \">Amount</div>\n            <div className=\"flex-1 \">Tokens</div>\n        </div>\n    )\n}\n\nexport default ActivityContainer\n","export const formatAddress = (address = '', size = 4) => {\n    return `${address.substring(0, size)}......${address.substring(\n        address.length - size,\n        address.length\n    )}`\n}\n","import React from 'react'\nimport { IoCopyOutline } from 'react-icons/io5'\nimport { FaEthereum } from 'react-icons/fa'\nimport { formatAddress } from './../../../services/address-services'\nimport useCopyToClipboard from './../../../hooks/useCopyToClipboard'\nimport { Tooltip } from 'antd'\n\nconst ActivityElement = ({ data }) => {\n    const [timeStamp, from, to, tx, amount, tokens] = data\n    const [copyToClipboard, { success }] = useCopyToClipboard()\n\n    let formatDate = new Date(parseInt(timeStamp))\n    formatDate = formatDate.toLocaleDateString('en-GB', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    })\n    console.log({ tokens })\n    const formattedToken = parseInt(tokens).toLocaleString('en-US')\n    console.log({ formattedToken })\n    return (\n        <div className=\"flex flex-row w-full  px-4 lg:px-12 pt-3 pb-2 text-black-2 dark:text-gray-6 font-medium text-xs\">\n            <div className=\"flex-1\">{formatDate}</div>\n            <div className=\"flex-1\">ETH Mainet</div>\n            <div className=\"flex-1 flex\">\n                <p className=\"flex items-center\">\n                    {formatAddress(from)}\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\n                        <button\n                            onClick={() => copyToClipboard(from)}\n                            className=\"text-xl text-primary ml-3\"\n                        >\n                            <IoCopyOutline />\n                        </button>\n                    </Tooltip>\n                </p>\n            </div>\n            <div className=\"flex-1 flex\">\n                <p className=\"flex items-center\">\n                    {formatAddress(to)}\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\n                        <button\n                            onClick={() => copyToClipboard(to)}\n                            className=\"text-xl text-primary ml-3\"\n                        >\n                            <IoCopyOutline />\n                        </button>\n                    </Tooltip>\n                </p>\n            </div>\n            <div className=\"flex-1 flex\">\n                <p className=\"flex items-center\">\n                    {formatAddress(tx)}\n                    <Tooltip className=\"\" title={success ? 'copied' : 'copy'}>\n                        <button\n                            onClick={() => copyToClipboard(tx)}\n                            className=\"text-xl text-primary ml-3\"\n                        >\n                            <IoCopyOutline />\n                        </button>\n                    </Tooltip>\n                </p>\n            </div>\n            <div className=\"flex-1 flex items-center\">\n                <FaEthereum className=\"relative\" style={{ top: '-2px' }} />\n                {amount} ETH\n            </div>\n            <div className=\"flex-1 flex items-center\">\n                {formattedToken} DDOT\n            </div>\n        </div>\n    )\n}\n\nexport default ActivityElement\n","import React from 'react'\nimport ActivityHeader from './ActivityHeader'\nimport CardContainer from './../../Cards/CardContainer'\nimport ActivityElement from './ActivityElement'\nimport utilitiesImages from './../../../assets/images/utilities/index'\n\nconst Activity = ({ data }) => {\n    return (\n        <CardContainer className=\"pt-3 mx-auto \">\n            <div className=\"overflow-x-auto scrollbar-g\">\n                <div className=\"\" style={{ minWidth: '680px' }}>\n                    <ActivityHeader />\n                    <div className=\"px-2 mb-4\">\n                        <hr className=\"border-light-4 dark:border-gray-16\" />\n                    </div>\n                    <div className=\"max-h-96 overflow-y-auto overflow-x-hidden scrollbar-g pb-3\">\n                        {data?.length > 0 ? (\n                            <ActivityElement data={data} />\n                        ) : (\n                            <div className=\"w-full flex justify-center gap-2 items-end opacity-40 text-black-2 dark:text-white\">\n                                <img\n                                    className=\" w-12 h-auto\"\n                                    src={utilitiesImages.wallet}\n                                    alt={utilitiesImages.wallet}\n                                />\n                                {\"You haven't made an investment\"}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </CardContainer>\n    )\n}\n\nexport default Activity\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport WhitelistedAddress from '../components/Invest/WhitelistedAddress'\nimport { useHistory } from 'react-router'\nimport { notification } from 'antd'\nimport { SmileOutlined } from '@ant-design/icons'\nimport { useWeb3React } from '@web3-react/core'\n\nimport Activity from '../components/Invest/Activity'\nimport PageLoading from '../components/PageLoadings/PageLoading'\nimport useValidate from './../hooks/useValidate'\nimport utilitiesImages from './../assets/images/utilities/index'\nimport {\n    useAlreadyRequestWhitelist,\n    useFetchWhiteList,\n    useWhiteList,\n} from './../store/reducers/whitelist/hooks'\nimport { PrivateSalePath, StakingView } from '../constants/routerConstants'\nimport ButtonSpinner from '../components/Buttons/ButtonSpinner'\nimport { useClaimPrivateSale } from './../hooks/scInteractions/privateSaleHooks'\nimport { stakingLvlsPrivate } from './../constants/stakingLevels'\n\nimport useDeepCompareEffect from './../hooks/useDeepCompareEffect'\nimport {\n    useTotalTokensPrivate,\n    useTotalTokensPre,\n    useSCData,\n} from './../store/reducers/scInteractionReducer/hooks'\n\nconst InvestView = (props) => {\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const { account } = useWeb3React()\n\n    const alreadyRequest = useAlreadyRequestWhitelist()\n    const whitelist = useWhiteList()\n    const fetchWhiteList = useFetchWhiteList()\n    const { fetchedData, data } = useSCData()\n    const { totalTokensPrivate, totalTokensPre } = data\n    const claimPrivateTokens = useClaimPrivateSale()\n\n    const alreadyClaimedPrivateTokens =\n        whitelist.privateSale.length > 0 && totalTokensPrivate === '0'\n    const alreadyClaimedPreTokens =\n        whitelist.preSale.length > 0 && totalTokensPre === '0'\n\n    useEffect(() => {\n        notification.destroy()\n    }, [account])\n\n    useDeepCompareEffect(() => {\n        if (fetchWhiteList.whiteList) {\n            if (whitelist.verified) {\n                notification.success({\n                    key: 'verification',\n                    message: 'Verification process status',\n                    description: (\n                        <div>\n                            The verification proccess has ended. Now you are a\n                            verified member.{' '}\n                            <strong\n                                onClick={() => history.push(PrivateSalePath)}\n                                className=\"underline cursor-pointer text-orange-2\"\n                            >\n                                Go to sale\n                            </strong>\n                        </div>\n                    ),\n                    duration: 60,\n                })\n            } else {\n                notification.info({\n                    key: 'verification',\n                    message: 'Verification process status',\n                    description:\n                        'Thanks for joining us, stay tuned in our discord for future announcements.',\n                    duration: 60,\n                })\n            }\n        }\n        return () => notification.close('verification')\n    }, [whitelist, fetchWhiteList.whiteList])\n\n    const handleClaimTokensPrivate = () => {\n        if (alreadyClaimedPrivateTokens) {\n            history.push(StakingView)\n            return\n        }\n\n        setLoading(true)\n        const stakeLevel = stakingLvlsPrivate.find(\n            (s) => s.packageId === whitelist.packagePrivateSale\n        )\n        claimPrivateTokens(stakeLevel.stakeId, (err, message, res) => {\n            if (err) {\n                console.log(err)\n            }\n            setLoading(false)\n        })\n    }\n\n    if (!account || !fetchWhiteList.alreadyRequest || !fetchedData) {\n        return (\n            <div\n                className=\"flex flex-col justify-center items-center flex-grow opacity-75\"\n                style={{ height: 'calc(100vh - 109.13px)' }}\n            >\n                <img\n                    className=\" w-80 h-auto\"\n                    src={utilitiesImages.wallet}\n                    alt={utilitiesImages.wallet}\n                />\n                <p className=\"text-xl mt-8 font-medium\">\n                    In order to stake your wallet should\n                </p>\n                <p className=\"text-xl font-medium\">\n                    be connected to{' '}\n                    <span className=\"text-orange-2\">Destinare</span>\n                </p>\n            </div>\n        )\n    }\n\n    return alreadyRequest ? (\n        <div className=\"mx-5\" style={{ height: 'calc(100vh - 109.13px)' }}>\n            <div className=\" max-w-1650px mx-auto mt-12\">\n                <div className=\" text-primary text-xl font-semibold mb-4\">\n                    {whitelist.userName}\n                </div>\n\n                <div className=\" text-black-2 dark:text-white text-xl font-semibold mb-2\">\n                    Register Wallet\n                </div>\n                <WhitelistedAddress />\n                <div className=\"flex items-end mb-2 mt-12\">\n                    <div className=\" text-black-2 dark:text-white text-xl font-semibold\">\n                        Private Sale\n                    </div>\n                    <div className=\"ml-auto\">\n                        <ButtonSpinner\n                            size=\"normal\"\n                            className=\"px-8\"\n                            onClick={handleClaimTokensPrivate}\n                            loading={loading}\n                            disabled={whitelist.privateSale.length === 0}\n                        >\n                            {!loading\n                                ? !alreadyClaimedPrivateTokens\n                                    ? 'Stake'\n                                    : 'Go to Staking'\n                                : ''}\n                        </ButtonSpinner>\n                    </div>\n                </div>\n                <Activity data={whitelist.privateSale} />\n                <div className=\"flex items-end mb-2 mt-8\">\n                    <div className=\" text-black-2 dark:text-white text-xl font-semibold \">\n                        Pre Sale\n                    </div>\n                    <div className=\"ml-auto\">\n                        <ButtonSpinner\n                            size=\"normal\"\n                            className=\"px-8\"\n                            disabled={true}\n                            loading={loading}\n                        >\n                            {!loading\n                                ? !alreadyClaimedPreTokens\n                                    ? 'Stake'\n                                    : 'Go to Staking'\n                                : ''}\n                        </ButtonSpinner>\n                    </div>\n                </div>\n                <Activity data={whitelist.preSale} />\n            </div>\n        </div>\n    ) : (\n        <div\n            className=\"flex flex-col justify-center items-center flex-grow opacity-75\"\n            style={{ height: 'calc(100vh - 109.13px)' }}\n        >\n            <img\n                className=\" w-80 h-auto\"\n                src={utilitiesImages.wallet}\n                alt={utilitiesImages.wallet}\n            />\n            <p className=\"text-xl mt-8 font-medium\">\n                Apply for whitelist in order to gain access.{' '}\n            </p>\n            <p className=\"text-xl font-medium\">\n                <span\n                    onClick={() => history.push(PrivateSalePath)}\n                    className=\"text-orange-2 cursor-pointer underline\"\n                >\n                    {' '}\n                    Click here to apply\n                </span>\n            </p>\n        </div>\n    )\n}\n\nexport default InvestView\n","export const cls = (input) => {\n    return input\n        .replace(/\\s+/gm, ' ')\n        .split(' ')\n        .filter((cond) => typeof cond === 'string' && cond !== 'undefined')\n        .join(' ')\n        .trim()\n}\n\nexport const escapeRegExp = (string) => {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","/* eslint-disable no-unused-vars */\nimport React, { forwardRef } from 'react'\nimport { FaSpinner } from 'react-icons/fa'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'inline-flex items-center justify-center focus:outline-none transition ease-in-out duration-300 rounded-md gap-2',\n    disabled: 'opacity-50 cursor-not-allowed',\n    pill: 'rounded-full',\n    size: {\n        none: '',\n        small: 'px-2 py-1 text-sm',\n        normal: 'px-4 py-2',\n        large: 'px-8 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'bg-primary hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-white',\n        secondary:\n            'bg-gray-200 hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 text-gray-900 hover:text-white',\n        danger: 'bg-red-500 hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white',\n        primaryborder:\n            'border-primary border hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-primary',\n        warning:\n            'bg-yellow-600 hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-white',\n        warningLink:\n            'bg-transparent hover:bg-gray-100 border border-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-yellow-600',\n    },\n    spinnerSize: {\n        small: 'text-xl',\n        normal: 'text-2xl',\n        large: 'text-3xl',\n    },\n}\n\nconst ButtonSpinner = forwardRef(\n    (\n        {\n            children,\n            className,\n            loading = false,\n            disabled,\n            type = 'button',\n            size = 'small',\n            variant = 'primary',\n            pill,\n            spinnerSize = 'normal',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <button\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${pill && classes.pill}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {loading && (\n                    <FaSpinner\n                        className={cls(\n                            `animate-spin ${classes.spinnerSize[spinnerSize]}`\n                        )}\n                    />\n                )}\n                {children}\n            </button>\n        )\n    }\n)\n\nButtonSpinner.displayName = 'ButtonSpinner'\n\nexport default ButtonSpinner\n","import React, { forwardRef } from 'react'\nimport { Spin } from 'antd'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: ' border rounded-xl relative overflow-hidden',\n    variant: {\n        none: '',\n        primary:\n            'bg-white dark:bg-gray-4 border-light-4 dark:border-gray-16 hover:border-primary',\n        secondary:\n            'bg-gray-0 dark:bg-blue-5 border-light-4 dark:border-black-0',\n    },\n    borderOpacity: {},\n}\n\nconst CardContainer = forwardRef(\n    (\n        { className, variant = 'primary', loading, children, ...restProps },\n        ref\n    ) => {\n        return (\n            <div\n                className={cls(`\n                ${classes.base}\n                ${classes.variant[variant]}\n                ${className}\n            `)}\n                {...restProps}\n            >\n                {' '}\n                {loading && (\n                    <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-50\">\n                        <Spin size=\"large\" />\n                    </div>\n                )}\n                {children}\n            </div>\n        )\n    }\n)\n\nCardContainer.displayName = 'CardContainer'\n\nexport default CardContainer\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    accountWhitelistSelector,\n    alreadyRequestSelector,\n    whiteListFetchingSelector,\n    whiteListFetchSelector,\n} from './selectors'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n    hasRequestWhitelist,\n    createWhitelist,\n    fetchWhitelist,\n    updateWhiteList,\n    clearWhitelistReducer,\n} from './actions'\n\nexport const useClearWhiteListReducer = () => {\n    const dispatch = useDispatch()\n    return useCallback(() => dispatch(clearWhitelistReducer(), [dispatch]))\n}\n\nexport const useAlreadyRequestWhitelist = () => {\n    const { account } = useWeb3React()\n    const alreadyRequest = useSelector(alreadyRequestSelector)\n    const dispatch = useDispatch()\n\n    useEffect(async () => {\n        if (account) dispatch(hasRequestWhitelist(account))\n    }, [account, dispatch])\n\n    return alreadyRequest\n}\n\nexport const useWhiteList = () => {\n    const { account } = useWeb3React()\n    const alreadyRequest = useSelector(alreadyRequestSelector)\n\n    const whitelist = useSelector(accountWhitelistSelector)\n    const dispatch = useDispatch()\n\n    useEffect(async () => {\n        if (account && alreadyRequest) dispatch(fetchWhitelist(account))\n    }, [account, alreadyRequest, dispatch])\n\n    return whitelist\n}\n\nexport const useRequestWhitelist = () => {\n    const dispatch = useDispatch()\n    return useCallback((data) => dispatch(createWhitelist(data)), [dispatch])\n}\n\nexport const useUpdateWhitelist = () => {\n    const dispatch = useDispatch()\n    return useCallback((data) => dispatch(updateWhiteList(data)), [dispatch])\n}\n\nexport const useFetchWhiteList = () => {\n    return useSelector(whiteListFetchSelector)\n}\n\nexport const useFetchingWhiteList = () => {\n    return useSelector(whiteListFetchingSelector)\n}\n","export default __webpack_public_path__ + \"static/media/wallet2.c6e6fab9.png\";","import wallet from './wallet2.png'\n\nconst utilitiesImages = { wallet }\n\nexport default utilitiesImages\n","/* eslint-disable no-unused-vars */\nimport { useCallback } from 'react'\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport DestinareContract from '../../abi/DestinareContract.json'\nimport { useReloadData } from './../../store/reducers/scInteractionReducer/hooks'\n\nexport const useClaimPrivateSale = () => {\n    const { library, account } = useActiveWeb3React()\n    const reloaData = useReloadData()\n\n    return useCallback(\n        async (stakeId, callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n                const tokens = await contract.methods\n                    .claimPrivateSaleTokens(stakeId)\n                    .send({ from: account })\n                await reloaData(true)\n                if (typeof callback === 'function') {\n                    const message = 'Tokens were successfully claimed'\n                    callback(undefined, message, tokens)\n                }\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n\nexport const useBuyPrivateSale = () => {\n    const { library, account } = useActiveWeb3React()\n    const reloaData = useReloadData()\n    return useCallback(\n        async (plan, callback) => {\n            try {\n                const contract = new library.eth.Contract(\n                    DestinareContract,\n                    process.env.REACT_APP_DESTINARE_CONTRACT_ADDRESS\n                )\n                const tx = await contract.methods\n                    .buyPrivateSaleTokens(plan.packageId)\n                    .send({\n                        from: account,\n                        value: plan.amount * 1e18,\n                    })\n                    .then((res) => res)\n                await reloaData(true)\n                console.log('buy private Tokens', tx)\n                if (typeof callback === 'function') {\n                    const message = 'Tokens were successfully purchased'\n                    callback(undefined, message, tx)\n                }\n            } catch (err) {\n                if (typeof callback === 'function') {\n                    const _err = { err }\n                    callback(_err)\n                }\n            }\n        },\n        [library, account]\n    )\n}\n","export const stakingLvlsPrivate = [\n    {\n        title: 'Basic Plan',\n        subtitle: '0.32 ETH',\n        properties: [\n            ['DDOT', '33, 333'],\n            ['APR', '10%'],\n            ['Staking Time', '6 Months'],\n        ],\n        packageId: 1,\n        stakeId: 0,\n        amount: 0.32,\n        tokens: 33333,\n    },\n    {\n        title: 'Trader Plan',\n        subtitle: '0.48 ETH',\n        properties: [\n            ['DDOT', '60, 000'],\n            ['APR', '15%'],\n            ['Staking Time', '5 Months'],\n        ],\n        packageId: 2,\n        amount: 0.48,\n        stakeId: 1,\n        tokens: 60000,\n    },\n    {\n        title: 'Investor Plan',\n        subtitle: '0.80 ETH',\n        properties: [\n            ['DDOT', '125, 000'],\n            ['APR', '20%'],\n            ['Staking Time', '4 Months'],\n        ],\n        packageId: 3,\n        amount: 0.80,\n        stakeId: 2,\n        tokens: 125000,\n    },\n]\n\nexport const stakingLvlsPre = [\n    {\n        title: 'Basic Plan',\n        subtitle: '0.16 ETH',\n        properties: [\n            ['DDOT', '9, 100'],\n            ['APR', '10%'],\n            ['Staking Time', '6 Months'],\n        ],\n        packageId: 4,\n        amount: 0.16,\n        stakeId: 0,\n        tokens: 9100,\n    },\n    {\n        title: 'Trader Plan',\n        subtitle: '0.32 ETH',\n        properties: [\n            ['DDOT', '22, 222'],\n            ['APR', '12%'],\n            ['Staking Time', '5 Months'],\n        ],\n        packageId: 5,\n        amount: 0.32,\n        stakeId: 3,\n        tokens: 22222,\n    },\n    {\n        title: 'Investor Plan',\n        subtitle: '0.645 ETH',\n        properties: [\n            ['DDOT', '50, 000'],\n            ['APR', '15%'],\n            ['Staking Time', '4 Months'],\n        ],\n        packageId: 6,\n        amount: 0.645,\n        stakeId: 4,\n        tokens: 50000,\n    },\n]\n"],"sourceRoot":""}