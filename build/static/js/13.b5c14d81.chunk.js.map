{"version":3,"sources":["hooks/useInput.js","services/input-services.js","components/ReloadButton/ReloadDataButton.js","components/Dashboard/CardReserve.js","components/Dashboard/CardDailyReserve.js","components/Dashboard/CardClaimingDay.js","services/format.js","views/DashboardView.js","services/dateServices.js","services/helpers.js","components/Cards/CardContainer.js","components/Buttons/ButtonSpinner.js","components/Inputs/Input.js","hooks/useResponsive.js"],"names":["useInput","initialValue","validate","format","useState","value","setValue","console","log","reset","bind","onChange","e","target","inputRegex","RegExp","validOnlyNumbers","test","escapeRegExp","validMinValue","minValue","parseFloat","replace","validMaxValue","maxValue","ReloadDataButton","reloadData","useSCInteractions","fetchingData","useSCData","fetching","disabled","className","onClick","cls","size","CardReserve","date","day","totalUser","totalEther","currentUser","loading","useResponsive","base","xl","iconSize","percentage","useListenCookie","isDarkMode","cardRef","useRef","CardContainer","ref","IconCheck","style","top","useCurrency","toFixed","Number","percent","showInfo","trailColor","LoadingOutlined","CardDailyReserve","currentDay","data","reserveToken","reservingToken","account","disabledButton","v","amount","getPresaleInfo","getUserInfo","indexDay","length","totalDDOT","variant","Input","ButtonSpinner","CardClaimingDay","val","initDate","claimToken","claimingToken","totalTokens","Date","setDate","getDate","toLocaleString","year","month","RenderCards","cards","index","component","push","DashboardView","useWeb3React","fetchedData","setReservingToken","setClaimingToken","startDate","claimedTokens","restData","differenceInDays","differenceInTime","Math","floor","getDifferenceInDays","isGreaterThanLimitDay","res","message","input","split","filter","cond","join","trim","string","classes","none","primary","secondary","borderOpacity","forwardRef","children","restProps","displayName","pill","small","normal","large","danger","primaryborder","warning","warningLink","spinnerSize","type","rounded","medium","temp","values","xxl","lg","md","sm","width","useWindowSize","useDeepCompareEffect"],"mappings":"qHA4BeA,IAzBE,WAA0C,IAAzCC,EAAwC,uDAAzB,GAAIC,EAAqB,uCAAXC,EAAW,uCACtD,EAA0BC,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,OADAC,QAAQC,IAAIP,GACL,CACHI,QACAC,WACAG,MAAO,kBAAMH,EAASL,IACtBS,KAAM,CACFL,QACAM,SAAU,SAACC,GACP,IAAIP,EAAQO,EAAEC,OAAOR,OAGI,oBAAbH,GACJA,EAASU,EAAEC,OAAOR,QACF,oBAAbH,KAEe,oBAAXC,IAAuBE,EAAQF,EAAOE,IACjDC,EAASD,S,kCCrB7B,mHASMS,EAAaC,OAAO,0BAEbC,EAAmB,SAACX,GAC7B,QAAc,KAAVA,IAAgBS,EAAWG,KAAKC,YAAab,MAMxCc,EAAgB,SAACC,GAAD,OAAc,SAACf,GACxC,SACc,KAAVA,GACCA,GAASgB,WAAWhB,EAAMiB,QAAQ,KAAM,MAAQF,KAO5CG,EAAgB,SAACC,GAAD,OAAc,SAACnB,GACxC,SACc,KAAVA,GACCA,GAASgB,WAAWhB,EAAMiB,QAAQ,KAAM,MAAQE,M,kCC/BzD,oDAmCeC,IArBU,WACrB,IAAQC,EAAeC,cAAfD,WACUE,EAAiBC,cAA3BC,SACR,OACI,wBACIC,SAAUH,EACVI,UAAU,kCACVC,QAAS,WACLP,GAAW,IAJnB,SAOI,qBAAKM,UAAU,wBAAf,SACI,cAAC,IAAD,CACIA,UAAWE,YAAI,GAAD,OAAIN,GAAgB,iBAClCO,KAAM,e,sKCmGXC,EAnHK,SAAC,GAOd,IANHC,EAME,EANFA,KACAC,EAKE,EALFA,IACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,YACAC,EACE,EADFA,QAEA,EAAmBC,YAAc,CAAEC,KAAM,OAAQC,GAAI,SAA9CC,EAAP,oBACMC,EAA6B,IAAhBN,EAAoB,EAAKA,EAAcD,EAAc,IACxE,EAAgBQ,YAAgB,SAC1BC,EAAuB,SAD7B,oBAEMC,EAAUC,iBAAO,MAEvB,OACI,eAACC,EAAA,EAAD,CAAeV,QAASA,EAASW,IAAKH,EAASlB,UAAU,eAAzD,UACI,sBAAKA,UAAU,4CAAf,UACI,sBAAMA,UAAU,eAAhB,SACI,cAACsB,EAAA,EAAD,CAAWnB,KAAMW,MAErB,sBAAKd,UAAU,uBAAf,UACI,sBAAKA,UAAU,0CAAf,UACI,uBAAMA,UAAU,4EAAhB,iBACSM,EAAK,IACV,sBAAMN,UAAU,mEAAhB,sBAKJ,qBAAKA,UAAU,0FAAf,0BAIJ,sBAAKA,UAAU,+CAAf,UACI,qBAAKA,UAAU,+EAAf,SACKK,IAEL,qBAAKL,UAAU,+EAAf,sCAMZ,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,kJAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBACIA,UAAU,wCACVuB,MAAO,CAAEC,IAAK,OAFlB,SAII,cAAC,IAAD,MALR,gBASA,qBAAKxB,UAAU,4CAAf,SACKO,OAGT,sBAAKP,UAAU,mIAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBACIA,UAAU,wCACVuB,MAAO,CAAEC,IAAK,OAFlB,SAII,cAAC,IAAD,MALR,iBASA,sBAAKxB,UAAU,4CAAf,UACKyB,YAAYjB,EAAY,GAD7B,gBAKR,sBAAKR,UAAU,kEAAf,UACI,qBAAKA,UAAU,mDAAf,SACI,cAAC,IAAD,MAEJ,sBAAMA,UAAU,+CAAhB,8BAIJ,qBAAKA,UAAU,oFAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,oEAAf,wBAGA,sBAAKA,UAAU,0EAAf,UACKe,EAAWW,QAAQ,GADxB,eAIJ,sBAAK1B,UAAU,+BAAf,UACI,qBAAKA,UAAU,4EAAf,+BAGA,sBAAKA,UAAU,0EAAf,UACK2B,OAAOnB,GAAYkB,QAAQ,GADhC,gBAKR,8BACI,cAAC,IAAD,CACI1B,UAAU,mBACV4B,QAASb,EACTc,UAAU,EACVC,WAAYb,EAAa,OAAS,uB,sDClGxD7B,GAHD2C,EAAA,EAGY5C,YAAc,IACzBK,EAAWD,YAAc,MAmKhByC,EAjKU,SAAC,GAQnB,IAPHC,EAOE,EAPFA,WACAC,EAME,EANFA,KACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,eAEA1B,GAEE,EAHF2B,QAGE,EAFF3B,SACA4B,EACE,EADFA,eAGA,EAAgCtE,YAC5B,GACA,SAACuE,GAAD,OAAOnD,EAASmD,IAAM/C,EAAS+C,IAAMvD,YAAiBuD,MAF3CC,EAAf,EAAQnE,MAAeK,EAAvB,EAAuBA,KAKvB,EAAgBsC,YAAgB,SAC1BC,EAAuB,SAD7B,oBAGQwB,EAAgCP,EAAhCO,eAAgBC,EAAgBR,EAAhBQ,YAMlBC,EAAWV,EAAa,EACxB1B,EACFkC,EAAe,GAAGG,OAAS,EAAIH,EAAe,GAAGE,GAAY,EAE3DnC,EACFiC,EAAe,GAAGG,OAAS,EAAIH,EAAe,GAAGE,GAAY,KAAO,EAElElC,EACFiC,EAAYE,OAAS,EAAIF,EAAYC,GAAY,KAAO,EAEtD5B,EACsB,IAAxBY,OAAOlB,GACD,EACCkB,OAAOlB,GAAekB,OAAOnB,GAAe,IAEjDqC,EAAuB9B,EAAa,IAAxB,QAClB,OACI,cAACK,EAAA,EAAD,CACIV,QAASA,EACTV,UAAU,0HACV8C,QAAQ,OAHZ,SAKI,sBAAK9C,UAAU,0EAAf,UACI,sBAAKA,UAAU,qDAAf,UACI,sBAAKA,UAAU,8DAAf,UACI,sBAAKA,UAAU,+GAAf,UACI,uBAAMA,UAAU,eAAhB,iBACSiC,EADT,UAGA,sBAAMjC,UAAU,gCAAhB,4BAIJ,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,4HAAf,uBAGA,qBAAKA,UAAU,8GAAf,kCAKR,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,uGAAf,UACI,cAAC+C,EAAA,EAAD,aACID,QAAQ,YACR9C,UAAU,wCACVD,SAAUuC,GACN5D,IAER,sBAAMsB,UAAU,+DAAhB,oBAIJ,cAACgD,EAAA,EAAD,CACIhD,UAAU,2BACVD,SAAUuC,GAAkBX,OAAOa,IAAW,EAC9CrC,KAAK,SACLF,QAAS,WACAmC,GAAgBD,EAAaK,IAL1C,SAQKJ,EACK,6BACA,kCAIlB,qBAAKpC,UAAU,wEAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,8GAAf,0BAGA,sBAAKA,UAAU,oDAAf,UACI,sBAAKA,UAAU,wEAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gFAAf,gCAGA,qBAAKA,UAAU,4EAAf,SACKyB,YAAYlB,EAAW,QAGhC,sBAAKP,UAAU,iBAAf,UACI,qBAAKA,UAAU,gFAAf,+BAGA,sBAAKA,UAAU,2EAAf,UACKyB,YAAYjB,EAAY,GAD7B,aAIJ,sBAAKR,UAAU,2BAAf,UACI,qBAAKA,UAAU,gFAAf,yBAGA,sBAAKA,UAAU,2EAAf,UACKyB,YAAYoB,EAAW,GAD5B,iBAKR,sBAAK7C,UAAU,eAAf,UACI,sBAAKA,UAAU,4CAAf,UACI,sBAAKA,UAAU,GAAf,UACI,qBAAKA,UAAU,yEAAf,wBAGA,sBAAKA,UAAU,qFAAf,UACKe,EAAWW,QAAQ,GADxB,eAIJ,sBAAK1B,UAAU,aAAf,UACI,qBAAKA,UAAU,yEAAf,yBAGA,sBAAKA,UAAU,sFAAf,UACK2B,OAAOnB,GAAYkB,QAAQ,GADhC,gBAKR,qBAAK1B,UAAU,GAAf,SACI,cAAC,IAAD,CACI4B,QAASb,EACTc,UAAU,EACVC,WACIb,EAAa,OAAS,+B,SCpFnDgC,EA9ES,SAAC,GAOlB,IChB2BC,EDU9BC,EAME,EANFA,SACAjB,EAKE,EALFA,KACAkB,EAIE,EAJFA,WACAC,EAGE,EAHFA,cACA3C,EAEE,EAFFA,QACA4B,EACE,EADFA,eAEA,EAA4BJ,EAApBoB,mBAAR,MAAsB,EAAtB,EAWIjD,EAAO,IAAIkD,KAAKJ,GASpB,OARA9C,EAAKmD,QAAQnD,EAAKoD,UAAY,IAE9BpD,EAAOA,EAAKqD,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,UACPtD,IAAK,YAIL,cAACc,EAAA,EAAD,CACIV,QAASA,EACToC,QAAQ,YACR9C,UAAU,qEAHd,SAKI,sBACIA,UAAWE,YAAI,yDAAD,QAEXoC,GAAkB,eAHzB,UAMI,sBAAKtC,UAAU,gCAAf,UACI,qBAAKA,UAAU,oGAAf,oBAGA,qBAAKA,UAAU,2FAAf,SACKK,OAGT,qBAAKL,UAAU,gFAAf,0BAGA,qBAAKA,UAAU,wDAAf,+BAGA,sBAAKA,UAAU,kDAAf,UACKyB,aChEayB,EDgEiBI,EC/DxC3B,OAAOuB,GAAO,KAAO,KD+DiC,GADjD,WAGA,cAACF,EAAA,EAAD,CACIhD,UAAU,2CACVD,UAAWuC,EACXnC,KAAK,SACLO,QAAS2C,EACTpD,QAAS,WACAoD,GAAeD,KAN5B,SASKC,EACK,2BACA,gC,4DElEpBQ,EAAc,SAAC,GAA4C,EAA1C5B,WAEnB,IAF8D,IAA/BC,EAA8B,EAA9BA,KAAMxB,EAAwB,EAAxBA,QAASyC,EAAe,EAAfA,SACxCW,EAAQ,GACLC,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAUrC,IAAI1D,EAAO,IAAIkD,KAAKJ,GACpB9C,EAAKmD,QAAQnD,EAAKoD,UAAYM,GAE9B1D,EAAOA,EAAKqD,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,UACPtD,IAAK,YAGT,IAAM0D,EACF,8BACI,cAAC,EAAD,CACI1D,IAAKyD,EAAQ,EACb1D,KAAMA,EACNE,UACI2B,EAAKO,eAAe,GAAGG,OAAS,EAC1BV,EAAKO,eAAe,GAAGsB,GACvB,EAEVvD,WACI0B,EAAKO,eAAe,GAAGG,OAAS,EAC1BV,EAAKO,eAAe,GAAGsB,GAAS,KAChC,EAEVtD,YACIyB,EAAKQ,YAAYE,OAAS,EACpBV,EAAKQ,YAAYqB,GAAS,KAC1B,EAEVrD,QAASA,KAnBjB,qBAAwBqD,IAuB5BD,EAAMG,KAAKD,GAEf,OACI,qBAAKhE,UAAU,iDAAf,SACK8D,KAwGEI,UAnGO,WAClB,IAAQ7B,EAAY8B,cAAZ9B,QACR,EAA8BxC,cAAtBuE,EAAR,EAAQA,YAAalC,EAArB,EAAqBA,KACrB,EAAqCvC,cAA7BwC,EAAR,EAAQA,aAAciB,EAAtB,EAAsBA,WAEtB,EAA4ChF,oBAAS,GAArD,mBAAOgE,EAAP,KAAuBiC,EAAvB,KACA,EAA0CjG,oBAAS,GAAnD,mBAAOiF,EAAP,KAAsBiB,EAAtB,KACQC,EAA0CrC,EAA1CqC,UAAWC,EAA+BtC,EAA/BsC,cAAkBC,EAArC,YAAkDvC,EAAlD,GACMiB,EAAWoB,EAAY,IAAIhB,KAAiB,IAAZgB,GAAoB,IAAIhB,KAExDmB,EC3EyB,SAACvB,GAEhC,IAMMwB,EANQ,IAAIpB,KAMeJ,EAIjC,OAHyByB,KAAKC,MAAMF,EAAgB,ODkE3BG,CAAoB3B,GACvClB,EAAayC,EAAmB,GAAKA,EAAmB,EAAI,GAC5DK,EAAwBL,EAAmB,GAyBjD,OACI,qBAAK1E,UAAU,OAAf,SAWI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,0BACf,sBAAKA,UAAU,sDAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CACIiC,WAAYA,EACZC,KAAMuC,EACNtC,aAzCG,SAACK,GACxB6B,GAAkB,GAClBlC,EAAaK,GAAQ,SAACwC,GAClBzG,QAAQC,IAAI,CAAEwG,QACd,OAAIA,QAAJ,IAAIA,KAAKC,SACL1G,QAAQC,IAAIwG,EAAIC,SAEpBZ,GAAkB,OAmCFjC,eAAgBA,EAChBE,gBACKD,GACD0C,GACAP,EAEJ9D,SAAU0D,MAGlB,qBAAKpE,UAAU,qBAAf,SACI,cAAC,EAAD,CACImD,SAAUA,EACVjB,KAAMuC,EACNrB,WA5CC,WACrBkB,GAAiB,GACjBlB,GAAW,SAAC4B,GACRzG,QAAQC,IAAI,CAAEwG,QACd,OAAIA,QAAJ,IAAIA,KAAKC,SACL1G,QAAQC,IAAIwG,EAAIC,SAEpBX,GAAiB,OAsCDjB,cAAeA,EACf3C,SAAU0D,EACV9B,gBACKD,GACDmC,IACCO,SAKjB,sBAAK/E,UAAU,OAAf,UACI,sBAAKA,UAAU,kDAAf,UACI,qBAAKA,UAAU,iEAAf,8BAGA,cAACP,EAAA,EAAD,OAEJ,cAAC,EAAD,CACIwC,WAAYA,EACZC,KAAMuC,EACN/D,SAAU0D,EACVjB,SAAUA,c,iCE7JlC,oEAAO,IAAMjD,EAAM,SAACgF,GAChB,OAAOA,EACF5F,QAAQ,QAAS,KACjB6F,MAAM,KACNC,QAAO,SAACC,GAAD,MAA0B,kBAATA,GAA8B,cAATA,KAC7CC,KAAK,KACLC,QAGIrG,EAAe,SAACsG,GACzB,OAAOA,EAAOlG,QAAQ,sBAAuB,U,mICN3CmG,EAAU,CACZ7E,KAAM,8CACNkC,QAAS,CACL4C,KAAM,GACNC,QACI,kFACJC,UACI,+DAERC,cAAe,IAGbzE,EAAgB0E,sBAClB,WAEIzE,GACE,IAFArB,EAED,EAFCA,UAED,IAFY8C,eAEZ,MAFsB,UAEtB,EAFiCpC,EAEjC,EAFiCA,QAASqF,EAE1C,EAF0CA,SAAaC,EAEvD,iBACD,OACI,8CACIhG,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQ3C,QAAQA,GAFJ,6BAGZ9C,EAHY,oBAKVgG,GANR,cAQK,IACAtF,GACG,qBAAKV,UAAU,+FAAf,SACI,cAAC,IAAD,CAAMG,KAAK,YAGlB4F,SAMjB3E,EAAc6E,YAAc,gBAEb7E,O,iLCvCTqE,EAAU,CACZ7E,KAAM,kHACNb,SAAU,gCACVmG,KAAM,eACN/F,KAAM,CACFuF,KAAM,GACNS,MAAO,oBACPC,OAAQ,YACRC,MAAO,qBAEXvD,QAAS,CACL6C,QACI,oGACJC,UACI,sHACJU,OAAQ,+FACRC,cACI,iHACJC,QACI,wGACJC,YACI,sIAERC,YAAa,CACTP,MAAO,UACPC,OAAQ,WACRC,MAAO,aAITrD,EAAgB8C,sBAClB,WAaIzE,GACE,IAZE0E,EAYH,EAZGA,SACA/F,EAWH,EAXGA,UAWH,IAVGU,eAUH,SATGX,EASH,EATGA,SASH,IARG4G,YAQH,MARU,SAQV,MAPGxG,YAOH,MAPU,QAOV,MANG2C,eAMH,MANa,UAMb,EALGoD,EAKH,EALGA,KAKH,IAJGQ,mBAIH,MAJiB,SAIjB,EAHMV,EAGN,iBACD,OACI,iDACI3E,IAAKA,EACLtB,SAAUA,EACV4G,KAAMA,EACN3G,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQtF,KAAKA,GAFD,6BAGZsF,EAAQ3C,QAAQA,GAHJ,6BAIZoD,GAAQT,EAAQS,KAJJ,6BAKZnG,GAAY0F,EAAQ1F,SALR,6BAMZC,EANY,oBAQVgG,GAZR,cAcKtF,GACG,cAAC,IAAD,CACIV,UAAWE,YAAI,gBAAD,OACMuF,EAAQiB,YAAYA,OAI/CX,SAMjB/C,EAAciD,YAAc,gBAEbjD,O,wIC9ETyC,EAAU,CACZ7E,KAAM,8DACNb,SAAU,gCACVI,KAAM,CACFgG,MAAO,oBACPC,OAAQ,YACRC,MAAO,qBAEXvD,QAAS,CACL6C,QACI,8EACJC,UACI,8EACJU,OAAQ,+EAEZM,QAAS,CACLlB,KAAM,eACNS,MAAO,aACPU,OAAQ,aACRR,MAAO,aACPxF,GAAI,eAINkC,EAAQ+C,sBACV,WAUIzE,GACE,IATErB,EASH,EATGA,UACAD,EAQH,EARGA,SAQH,IAPG4G,YAOH,MAPU,OAOV,MANGxG,YAMH,MANU,QAMV,MALG2C,eAKH,MALa,UAKb,MAJG8D,eAIH,MAJa,OAIb,EAHMZ,EAGN,iBACD,OACI,mCACI3E,IAAKA,EACLtB,SAAUA,EACV4G,KAAMA,EACN3G,UAAWE,YAAI,qBAAD,OACZuF,EAAQ7E,KADI,6BAEZ6E,EAAQtF,KAAKA,GAFD,6BAGZsF,EAAQ3C,QAAQA,GAHJ,6BAIZ2C,EAAQmB,QAAQA,GAJJ,6BAKZ7G,GAAY0F,EAAQ1F,SALR,6BAMZC,EANY,oBAQVgG,OAMpBjD,EAAMkD,YAAc,QAELlD,O,sECzDT+D,EAAO,SAACC,GACV,IAAK,IAAIhD,EAAQ,EAAGA,EAAQgD,EAAOnE,OAAQmB,IACvC,GAA6B,qBAAlBgD,EAAOhD,GACd,OAAOgD,EAAOhD,IA2BXpD,IAtBO,SAAC,GAAmC,IAAjCqG,EAAgC,EAAhCA,IAAKnG,EAA2B,EAA3BA,GAAIoG,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,GAAIvG,EAAW,EAAXA,KAC1C,EAA0BxC,oBAAS,kBAAM0I,EAAK,CAACE,EAAKnG,EAAIoG,EAAIC,EAAIC,EAAIvG,OAApE,mBAAOvC,EAAP,KAAcC,EAAd,KAEQ8I,EAAUC,cAAVD,MAgBR,OAfAE,aAAqB,WAEbhJ,EADA8I,GAAS,KACAN,EAAK,CAACE,EAAKnG,EAAIoG,EAAIC,EAAIC,EAAIvG,IAC7BwG,GAAS,KACPN,EAAK,CAACjG,EAAIoG,EAAIC,EAAIC,EAAIvG,IACxBwG,GAAS,KACPN,EAAK,CAACG,EAAIC,EAAIC,EAAIvG,IACpBwG,GAAS,IACPN,EAAK,CAACI,EAAIC,EAAIvG,IAChBwG,GAAS,IACPN,EAAK,CAACK,EAAIvG,IAEVA,KAEd,CAACwG,IACG,CAAC/I","file":"static/js/13.b5c14d81.chunk.js","sourcesContent":["/* eslint-disable prefer-const */\r\nimport { useState } from 'react'\r\n\r\nconst useInput = (initialValue = '', validate, format) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    console.log(initialValue)\r\n    return {\r\n        value,\r\n        setValue,\r\n        reset: () => setValue(initialValue),\r\n        bind: {\r\n            value,\r\n            onChange: (e) => {\r\n                let value = e.target.value\r\n\r\n                if (\r\n                    (typeof validate === 'function' &&\r\n                        validate(e.target.value)) ||\r\n                    typeof validate !== 'function'\r\n                ) {\r\n                    if (typeof format === 'function') value = format(value)\r\n                    setValue(value)\r\n                }\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport default useInput\r\n","/* eslint-disable prefer-regex-literals */\r\nimport { escapeRegExp } from './helpers'\r\n\r\nexport const onlyNumberKey = (evt) => {\r\n    const ASCIICode = evt.which ? evt.which : evt.keyCode\r\n    if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))\r\n        evt.preventDefault()\r\n}\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\r\n\r\nexport const validOnlyNumbers = (value) => {\r\n    if (value === '' || inputRegex.test(escapeRegExp(value))) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const validMinValue = (minValue) => (value) => {\r\n    if (\r\n        value === '' ||\r\n        (value && parseFloat(value.replace(/,/g, '')) >= minValue)\r\n    ) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const validMaxValue = (maxValue) => (value) => {\r\n    if (\r\n        value === '' ||\r\n        (value && parseFloat(value.replace(/,/g, '')) <= maxValue)\r\n    ) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport const formatThousand = (v) =>\r\n    `${v}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n","import React from 'react'\r\n// import { Spin } from 'antd'\r\n// import { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport useSCInteractions from '../../hooks/scInteractions/useSCInteractions'\r\nimport { useSCData } from '../../store/reducers/scInteractionReducer/hooks'\r\n// import ButtonSpinner from '../Buttons/ButtonSpinner'\r\nimport IconRefresh from './../../assets/svg/icons/IconRefresh'\r\nimport { cls } from './../../services/helpers'\r\n\r\n// const antIcon = (\r\n//     <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n// )\r\n\r\nconst ReloadDataButton = () => {\r\n    const { reloadData } = useSCInteractions()\r\n    const { fetching: fetchingData } = useSCData()\r\n    return (\r\n        <button\r\n            disabled={fetchingData}\r\n            className=\"flex items-start justify-center\"\r\n            onClick={() => {\r\n                reloadData(true)\r\n            }}\r\n        >\r\n            <div className=\"h-8 w-8 lg:h-9 lg:w-9\">\r\n                <IconRefresh\r\n                    className={cls(`${fetchingData && 'animate-spin'}`)}\r\n                    size={'100%'}\r\n                />\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ReloadDataButton\r\n","import React, { useRef } from 'react'\r\nimport { Progress } from 'antd'\r\n\r\nimport { AiOutlineUser } from 'react-icons/ai'\r\nimport { FaEthereum } from 'react-icons/fa'\r\nimport { RiLock2Line } from 'react-icons/ri'\r\nimport useListenCookie from '../../hooks/useListenCookie'\r\nimport useCurrency from '../../hooks/useCurrency'\r\nimport IconCheck from './../../assets/svg/icons/IconCheck'\r\nimport useResponsive from './../../hooks/useResponsive'\r\nimport CardContainer from '../Cards/CardContainer'\r\n\r\nconst CardReserve = ({\r\n    date,\r\n    day,\r\n    totalUser,\r\n    totalEther,\r\n    currentUser,\r\n    loading,\r\n}) => {\r\n    const [iconSize] = useResponsive({ base: '20px', xl: '30px' })\r\n    const percentage = currentUser === 0 ? 0 : (currentUser / totalEther) * 100\r\n    const [theme] = useListenCookie('theme')\r\n    const isDarkMode = theme === 'dark'\r\n    const cardRef = useRef(null)\r\n\r\n    return (\r\n        <CardContainer loading={loading} ref={cardRef} className=\"pt-5 xl:pt-8\">\r\n            <div className=\"flex flex-row w-full px-4 lg:px-5 xl:px-8\">\r\n                <span className=\"mr-2 xl:mr-4\">\r\n                    <IconCheck size={iconSize} />\r\n                </span>\r\n                <div className=\"flex flex-col w-full\">\r\n                    <div className=\"flex flex-row justify-between items-end\">\r\n                        <span className=\"md:text-base lg:text-lg xl:text-xl font-medium leading-none text-primary \">\r\n                            Day {day}{' '}\r\n                            <span className=\"text-gray-14 dark:text-gray-6 md:text-sm lg:text-base xl:text-xl\">\r\n                                (UTC)\r\n                            </span>\r\n                        </span>\r\n\r\n                        <div className=\"md:text-base lg:text-lg xl:text-xl font-bold text-black-2 dark:text-gray-3 leading-none\">\r\n                            8,333,333\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-row justify-between items-end mt-1\">\r\n                        <div className=\"md:text-xs lg:text-sm  text-gray-5 dark:text-gray-2 leading-none font-medium\">\r\n                            {date}\r\n                        </div>\r\n                        <div className=\"lg:text-xs xl:text-sm font-medium text-black-2 dark:text-gray-6 leading-none\">\r\n                            Destinare Token\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"px-4 lg:px-5 xl:px-8\">\r\n                <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md border-b border-t border-gray-7 flex flex-row justify-between mt-6 py-2  text-gray-5 dark:text-gray-2\">\r\n                    <div className=\"flex flex-row\">\r\n                        <div\r\n                            className=\"relative pl-2 md:mr-2 lg:mr-3 xl:mr-4\"\r\n                            style={{ top: '2px' }}\r\n                        >\r\n                            <AiOutlineUser />\r\n                        </div>\r\n                        Total user\r\n                    </div>\r\n                    <div className=\"font-medium text-gray-10 dark:text-gray-3\">\r\n                        {totalUser}\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md border-b border-gray-7 flex flex-row justify-between py-2 text-gray-5 dark:text-gray-2\">\r\n                    <div className=\"flex flex-row\">\r\n                        <div\r\n                            className=\"relative pl-2 md:mr-2 lg:mr-3 xl:mr-4\"\r\n                            style={{ top: '2px' }}\r\n                        >\r\n                            <FaEthereum />\r\n                        </div>\r\n                        Total Ether\r\n                    </div>\r\n                    <div className=\"font-medium text-gray-10 dark:text-gray-3\">\r\n                        {useCurrency(totalEther, 2)} ETH\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-center items-end text-gray-5 dark:text-gray-2 py-3\">\r\n                <div className=\"relative mr-2 md:text-base lg:text-lg xl:text-xl\">\r\n                    <RiLock2Line />\r\n                </div>\r\n                <span className=\"md:text-sm lg:text-sm xl:text-base leading-5\">\r\n                    Day is closed\r\n                </span>\r\n            </div>\r\n            <div className=\"dark:bg-gray-15 border-t dark:border-gray-16 border-gray-11 pb-3 md:pb-2  xl:pb-3\">\r\n                <div className=\"px-4 lg:px-5 xl:px-8\">\r\n                    <div className=\"flex flex-row justify-between leading-none mt-4\">\r\n                        <div className=\"flex flex-col\">\r\n                            <div className=\"text-xxs md:text-xs xl:text-md text-gray-5 dark:text-gray-2 mb-2 \">\r\n                                Your share\r\n                            </div>\r\n                            <div className=\"text-sm md:text-sm xl:text-base text-gray-10 dark:text-gray-3 font-bold\">\r\n                                {percentage.toFixed(2)} % ETH\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col items-end mb-2\">\r\n                            <div className=\"text-xxs md:text-xs xl:text-md text-gray-5 dark:text-gray-2 text-end mb-2\">\r\n                                Your contribution\r\n                            </div>\r\n                            <div className=\"text-xs md:text-sm xl:text-base text-gray-10 dark:text-gray-3 font-bold\">\r\n                                {Number(totalEther).toFixed(2)} ETH\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Progress\r\n                            className=\"blue-progressbar\"\r\n                            percent={percentage}\r\n                            showInfo={false}\r\n                            trailColor={isDarkMode ? '#fff' : '#c9c9c9'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default CardReserve\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { Progress, Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport useListenCookie from '../../hooks/useListenCookie'\r\nimport useCurrency from '../../hooks/useCurrency'\r\nimport useInput from './../../hooks/useInput'\r\nimport {\r\n    validOnlyNumbers,\r\n    validMinValue,\r\n    validMaxValue,\r\n} from '../../services/input-services'\r\nimport Input from '../Inputs/Input'\r\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\r\nimport CardContainer from '../Cards/CardContainer'\r\n\r\nconst antIcon = (\r\n    <LoadingOutlined className=\" text-white\" style={{ fontSize: 24 }} spin />\r\n)\r\n\r\nconst minValue = validMinValue(0)\r\nconst maxValue = validMaxValue(1500)\r\n\r\nconst CardDailyReserve = ({\r\n    currentDay,\r\n    data,\r\n    reserveToken,\r\n    reservingToken,\r\n    account,\r\n    loading,\r\n    disabledButton,\r\n}) => {\r\n    // const [amount, setAmount] = useState(1)\r\n    const { value: amount, bind } = useInput(\r\n        1,\r\n        (v) => minValue(v) && maxValue(v) && validOnlyNumbers(v)\r\n    )\r\n\r\n    const [theme] = useListenCookie('theme')\r\n    const isDarkMode = theme === 'dark'\r\n\r\n    const { getPresaleInfo, getUserInfo } = data\r\n\r\n    // const _initDate = new Date(initDate)\r\n    // const currentDate = new Date()\r\n    // const day = currentDate.getDate() - _initDate.getDate()\r\n    // day += 1\r\n    const indexDay = currentDay - 1\r\n    const totalUser =\r\n        getPresaleInfo[0].length > 0 ? getPresaleInfo[0][indexDay] : 0\r\n\r\n    const totalEther =\r\n        getPresaleInfo[1].length > 0 ? getPresaleInfo[1][indexDay] / 1e18 : 0\r\n\r\n    const currentUser =\r\n        getUserInfo.length > 0 ? getUserInfo[indexDay] / 1e18 : 0\r\n\r\n    const percentage =\r\n        Number(currentUser) === 0\r\n            ? 0\r\n            : (Number(currentUser) / Number(totalEther)) * 100\r\n\r\n    const totalDDOT = 8333333 * (percentage / 100)\r\n    return (\r\n        <CardContainer\r\n            loading={loading}\r\n            className=\"bg-white dark:bg-gray-4 border border-primary px-4 lg:px-5 xl:px-8 pt-5 pb-3 md:pb-4 xl:pt-8 xl:pb-6  border-opacity-50\"\r\n            variant=\"none\"\r\n        >\r\n            <div className=\"flex flex-col md:flex-row divide-x-0 divide-y md:divide-x md:divide-y-0\">\r\n                <div className=\"flex flex-col md:pr-4 lg:pr-5 xl:pr-8 pb-4 md:pb-0\">\r\n                    <div className=\" flex flex-row justify-between md:justify-start md:flex-col\">\r\n                        <div className=\"text-lg md:text-base lg:text-lg xl:text-xl md:text-center leading-none font-medium flex flex-col md:flex-row\">\r\n                            <span className=\"text-primary\">\r\n                                Day {currentDay}&nbsp;\r\n                            </span>\r\n                            <span className=\"text-gray-10 dark:text-gray-3\">\r\n                                Reservation\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"md:mt-4 xl:mt-8 mb-2\">\r\n                            <div className=\"text-lg md:text-sm lg:text-lg xl:text-xl text-gray-10 dark:text-gray-3 text-right md:text-left leading-none font-semibold\">\r\n                                8,333,333\r\n                            </div>\r\n                            <div className=\" text-xxs md:text-base text-gray-10 dark:text-gray-2 text-right md:text-left mb-2 leading-none mt-1 md:mt-0\">\r\n                                Available DDOT\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-auto flex flex-col\">\r\n                        <div className=\"input-amount text-center flex flex-row items-end pb-4 xl:pb-6 mt-3 xl:mt-4 w-10/12 md:w-full mx-auto\">\r\n                            <Input\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2 w-full bg-light-2 dark:bg-gray-3\"\r\n                                disabled={disabledButton}\r\n                                {...bind}\r\n                            />\r\n                            <span className=\"text-gray-10 dark:text-white lg:text-lg xl:text-xl leading-7\">\r\n                                ETH\r\n                            </span>\r\n                        </div>\r\n                        <ButtonSpinner\r\n                            className=\"w-8/12 md:w-full mx-auto\"\r\n                            disabled={disabledButton || Number(amount) <= 0}\r\n                            size=\"normal\"\r\n                            onClick={() => {\r\n                                if (!reservingToken) reserveToken(amount)\r\n                            }}\r\n                        >\r\n                            {reservingToken\r\n                                ? ' Reserving Destinare token'\r\n                                : 'Reserve Destinare token'}\r\n                        </ButtonSpinner>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-shrink w-full md:w-4/6 md:pl-4 lg:pl-5 xl:pl-8 pt-4 md:pt-0\">\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"text-lg md:text-base lg:text-lg xl:text-xl text-left text-gray-14 dark:text-gray-3 leading-none font-medium\">\r\n                            Day Overview\r\n                        </div>\r\n                        <div className=\"flex-1 flex flex-col justify-between mt-4 xl:mt-8\">\r\n                            <div className=\"flex flex-row md:flex-nowrap lg:flex-row justify-between mb-1 md:mb-0\">\r\n                                <div className=\"md:text-center\">\r\n                                    <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\r\n                                        Total contributors\r\n                                    </div>\r\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3 \">\r\n                                        {useCurrency(totalUser, 0)}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"md:text-center\">\r\n                                    <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\r\n                                        Your contribution\r\n                                    </div>\r\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3\">\r\n                                        {useCurrency(totalEther, 2)} ETH\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-left md:text-center\">\r\n                                    <div className=\"text-xxs md:text-sm lg:text-sm xl:text-md text-gray-5 dark:text-gray-2 md:p-0\">\r\n                                        Your Tokens\r\n                                    </div>\r\n                                    <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3\">\r\n                                        {useCurrency(totalDDOT, 2)} DDOT\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"pt-0 md:pt-5\">\r\n                                <div className=\"flex flex-col xs:flex-row justify-between\">\r\n                                    <div className=\"\">\r\n                                        <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2\">\r\n                                            Your share\r\n                                        </div>\r\n                                        <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3 font-bold\">\r\n                                            {percentage.toFixed(2)} % ETH\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <div className=\"text-xxs md:text-xs lg:text-sm xl:text-md text-gray-5 dark:text-gray-2\">\r\n                                            Total Ether\r\n                                        </div>\r\n                                        <div className=\"text-xs md:text-sm lg:text-base xl:text-lg text-gray-10 dark:text-gray-3  font-bold\">\r\n                                            {Number(totalEther).toFixed(2)} ETH\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <Progress\r\n                                        percent={percentage}\r\n                                        showInfo={false}\r\n                                        trailColor={\r\n                                            isDarkMode ? '#fff' : '#c9c9c9'\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default CardDailyReserve\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport useCurrency from '../../hooks/useCurrency'\r\nimport { Spin } from 'antd'\r\nimport ButtonSpinner from '../Buttons/ButtonSpinner'\r\nimport { cls } from './../../services/helpers'\r\nimport { formatExponential } from './../../services/format'\r\nimport CardContainer from './../Cards/CardContainer'\r\n\r\nconst CardClaimingDay = ({\r\n    initDate,\r\n    data,\r\n    claimToken,\r\n    claimingToken,\r\n    loading,\r\n    disabledButton,\r\n}) => {\r\n    const { totalTokens = 0 } = data\r\n    // const totalUser = getPresaleInfo[0].reduce(\r\n    //     (acc, val) => acc + parseFloat(val),\r\n    //     0\r\n    // )\r\n    // const totalEther =\r\n    //     getPresaleInfo[1].reduce((acc, val) => acc + parseInt(val), 0) / 1e18\r\n\r\n    // const lastDate = new Date(initDate)\r\n    // lastDate.setDate(lastDate.getDate() + 29)\r\n\r\n    let date = new Date(initDate)\r\n    date.setDate(date.getDate() + 30)\r\n\r\n    date = date.toLocaleString('en-GB', {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n    })\r\n\r\n    return (\r\n        <CardContainer\r\n            loading={loading}\r\n            variant=\"secondary\"\r\n            className=\"flex-1 flex px-4 lg:px-5 xl:px-8 pt-5 pb-4 md:pb-4 xl:pt-8 xl:pb-6\"\r\n        >\r\n            <div\r\n                className={cls(\r\n                    `flex-1 flex flex-col justify-between\r\n                ${!disabledButton && 'opacity-50'}`\r\n                )}\r\n            >\r\n                <div className=\"flex flex-row justify-between\">\r\n                    <div className=\"md:text-base lg:text-lg xl:text-xl text-center md:text-left text-primary leading-none font-medium\">\r\n                        Day 31\r\n                    </div>\r\n                    <div className=\"md:text-sm lg:text-base xl:text-lg text-gray-5 dark:text-gray-2 leading-none font-medium\">\r\n                        {date}\r\n                    </div>\r\n                </div>\r\n                <div className=\"md:text-sm lg:text-base xl:text-lg text-gray-14 dark:text-gray-3 font-medium \">\r\n                    Claiming Day\r\n                </div>\r\n                <div className=\"text-gray-5 dark:text-gray-2 text-md font-medium mt-3\">\r\n                    Your total tokens\r\n                </div>\r\n                <div className=\"font-bold text-black-2 dark:text-gray-3 text-lg\">\r\n                    {useCurrency(formatExponential(totalTokens), 2)} DDOT\r\n                </div>\r\n                <ButtonSpinner\r\n                    className=\"w-8/12 md:w-full mx-auto mt-2 md:mt-auto\"\r\n                    disabled={!disabledButton}\r\n                    size=\"normal\"\r\n                    loading={claimingToken}\r\n                    onClick={() => {\r\n                        if (!claimingToken) claimToken()\r\n                    }}\r\n                >\r\n                    {claimingToken\r\n                        ? 'Claiming Destinare token'\r\n                        : 'Claim Destinare token'}\r\n                </ButtonSpinner>\r\n            </div>\r\n            {/* <div className=\"   rounded-xl relative overflow-hidden\">\r\n               \r\n            </div> */}\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nexport default CardClaimingDay\r\n","export const formatExponential = (val) => {\r\n    return Number(val) / 1e16 / 100\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport CardReserve from '../components/Dashboard/CardReserve'\r\nimport CardDailyReserve from '../components/Dashboard/CardDailyReserve'\r\nimport CardClaimingDay from '../components/Dashboard/CardClaimingDay'\r\nimport useSCInteractions from '../hooks/scInteractions/useSCInteractions'\r\n\r\nimport ReloadDataButton from '../components/ReloadButton/ReloadDataButton'\r\nimport { getDifferenceInDays } from '../services/dateServices'\r\nimport { useSCData } from '../store/reducers/scInteractionReducer/hooks'\r\n\r\nconst RenderCards = ({ currentDay, data, loading, initDate }) => {\r\n    const cards = []\r\n    for (let index = 0; index < 30; index++) {\r\n        // const date = new Date(initDate)\r\n        // date.setDate(date.getDate() + index)\r\n        // const day = getDifferenceInDays(date)\r\n\r\n        // if (day === 0) {\r\n        //     continue\r\n        // }\r\n        // if (currentDay === index + 1) continue\r\n\r\n        let date = new Date(initDate)\r\n        date.setDate(date.getDate() + index)\r\n\r\n        date = date.toLocaleString('en-GB', {\r\n            year: 'numeric',\r\n            month: 'numeric',\r\n            day: 'numeric',\r\n        })\r\n\r\n        const component = (\r\n            <div key={`cardPresale${index}`}>\r\n                <CardReserve\r\n                    day={index + 1}\r\n                    date={date}\r\n                    totalUser={\r\n                        data.getPresaleInfo[0].length > 0\r\n                            ? data.getPresaleInfo[0][index]\r\n                            : 0\r\n                    }\r\n                    totalEther={\r\n                        data.getPresaleInfo[1].length > 0\r\n                            ? data.getPresaleInfo[1][index] / 1e18\r\n                            : 0\r\n                    }\r\n                    currentUser={\r\n                        data.getUserInfo.length > 0\r\n                            ? data.getUserInfo[index] / 1e18\r\n                            : 0\r\n                    }\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n        )\r\n        cards.push(component)\r\n    }\r\n    return (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 lg:gap-4\">\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DashboardView = () => {\r\n    const { account } = useWeb3React()\r\n    const { fetchedData, data } = useSCData()\r\n    const { reserveToken, claimToken } = useSCInteractions()\r\n\r\n    const [reservingToken, setReservingToken] = useState(false)\r\n    const [claimingToken, setClaimingToken] = useState(false)\r\n    const { startDate, claimedTokens, ...restData } = data\r\n    const initDate = startDate ? new Date(startDate * 1000) : new Date()\r\n\r\n    const differenceInDays = getDifferenceInDays(initDate)\r\n    const currentDay = differenceInDays < 30 ? differenceInDays + 1 : 30\r\n    const isGreaterThanLimitDay = differenceInDays > 29\r\n    // getDifferenceInDays(initDate) < 31 ? getDifferenceInDays(initDate) : 30\r\n\r\n    const handleReserveToken = (amount) => {\r\n        setReservingToken(true)\r\n        reserveToken(amount, (res) => {\r\n            console.log({ res })\r\n            if (res?.message) {\r\n                console.log(res.message)\r\n            }\r\n            setReservingToken(false)\r\n        })\r\n    }\r\n\r\n    const handleClaimToken = () => {\r\n        setClaimingToken(true)\r\n        claimToken((res) => {\r\n            console.log({ res })\r\n            if (res?.message) {\r\n                console.log(res.message)\r\n            }\r\n            setClaimingToken(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mx-5\">\r\n            {/* <div className=\"border-b border-gray-11 dark:border-gray-1 pb-8\">\r\n                <div className=\"pt-6 max-w-1650px mx-auto\">\r\n                    <div className=\"text-gray-5 font-semibold text-center relative dark:bg-blue-1 bg-light-2 mb-5\">\r\n                        <div className=\"text-2xl\">Reservations</div>\r\n                        <div className=\"text-lg\">\r\n                            Choose reservation day (date coming soon)\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"pt-6 max-w-1650px mx-auto pb-8\">\r\n                <div className=\"mb-4 flex justify-end\"></div>\r\n                <div className=\"flex flex-col-reverse md:grid md:grid-cols-10 gap-4\">\r\n                    <div className=\"md:col-span-7\">\r\n                        <CardDailyReserve\r\n                            currentDay={currentDay}\r\n                            data={restData}\r\n                            reserveToken={handleReserveToken}\r\n                            reservingToken={reservingToken}\r\n                            disabledButton={\r\n                                !account ||\r\n                                isGreaterThanLimitDay ||\r\n                                claimedTokens\r\n                            }\r\n                            loading={!fetchedData}\r\n                        />\r\n                    </div>\r\n                    <div className=\"md:col-span-3 flex\">\r\n                        <CardClaimingDay\r\n                            initDate={initDate}\r\n                            data={restData}\r\n                            claimToken={handleClaimToken}\r\n                            claimingToken={claimingToken}\r\n                            loading={!fetchedData}\r\n                            disabledButton={\r\n                                !account ||\r\n                                claimedTokens ||\r\n                                !isGreaterThanLimitDay\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <div className=\"flex flex-row justify-between items-center mb-4\">\r\n                        <div className=\"text-2xl lg:text-3xl text-gray-10 dark:text-white font-medium \">\r\n                            Reservation Days\r\n                        </div>\r\n                        <ReloadDataButton />\r\n                    </div>\r\n                    <RenderCards\r\n                        currentDay={currentDay}\r\n                        data={restData}\r\n                        loading={!fetchedData}\r\n                        initDate={initDate}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DashboardView\r\n","export const getDifferenceInDays = (initDate) => {\n    // const _initDate = new Date(initDate)\n    const today = new Date()\n    // today.setDate(today.getDate() + 30)\n    // console.log({ today, initDate })\n    // if (_initDate.getDate() === today.getDate()) return 1\n\n    // console.log(today.getTime(), _initDate.getTime())\n    const differenceInTime = today - initDate\n    const differenceInDays = Math.floor(differenceInTime / (1000 * 3600 * 24))\n\n    // console.log(differenceInDays)\n    return differenceInDays\n}\n","export const cls = (input) => {\n    return input\n        .replace(/\\s+/gm, ' ')\n        .split(' ')\n        .filter((cond) => typeof cond === 'string' && cond !== 'undefined')\n        .join(' ')\n        .trim()\n}\n\nexport const escapeRegExp = (string) => {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","import React, { forwardRef } from 'react'\r\nimport { Spin } from 'antd'\r\nimport { cls } from './../../services/helpers'\r\n\r\nconst classes = {\r\n    base: ' border rounded-xl relative overflow-hidden',\r\n    variant: {\r\n        none: '',\r\n        primary:\r\n            'bg-white dark:bg-gray-4 border-light-4 dark:border-gray-16 hover:border-primary',\r\n        secondary:\r\n            'bg-gray-0 dark:bg-blue-5 border-light-4 dark:border-black-0',\r\n    },\r\n    borderOpacity: {},\r\n}\r\n\r\nconst CardContainer = forwardRef(\r\n    (\r\n        { className, variant = 'primary', loading, children, ...restProps },\r\n        ref\r\n    ) => {\r\n        return (\r\n            <div\r\n                className={cls(`\r\n                ${classes.base}\r\n                ${classes.variant[variant]}\r\n                ${className}\r\n            `)}\r\n                {...restProps}\r\n            >\r\n                {' '}\r\n                {loading && (\r\n                    <div className=\"absolute left-0 top-0 flex justify-center items-center w-full h-full bg-gray-9 bg-opacity-50\">\r\n                        <Spin size=\"large\" />\r\n                    </div>\r\n                )}\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nCardContainer.displayName = 'CardContainer'\r\n\r\nexport default CardContainer\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { forwardRef } from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\nimport { cls } from './../../services/helpers'\r\n\r\nconst classes = {\r\n    base: 'inline-flex items-center justify-center focus:outline-none transition ease-in-out duration-300 rounded-md gap-2',\r\n    disabled: 'opacity-50 cursor-not-allowed',\r\n    pill: 'rounded-full',\r\n    size: {\r\n        none: '',\r\n        small: 'px-2 py-1 text-sm',\r\n        normal: 'px-4 py-2',\r\n        large: 'px-8 py-3 text-lg',\r\n    },\r\n    variant: {\r\n        primary:\r\n            'bg-primary hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-white',\r\n        secondary:\r\n            'bg-gray-200 hover:bg-gray-800 focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 text-gray-900 hover:text-white',\r\n        danger: 'bg-red-500 hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white',\r\n        primaryborder:\r\n            'border-primary border hover:bg-blue-green-2 focus:ring-2 focus:ring-primary focus:ring-opacity-50 text-primary',\r\n        warning:\r\n            'bg-yellow-600 hover:bg-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-white',\r\n        warningLink:\r\n            'bg-transparent hover:bg-gray-100 border border-yellow-600 focus:ring-2 focus:ring-yellow-600 focus:ring-opacity-50 text-yellow-600',\r\n    },\r\n    spinnerSize: {\r\n        small: 'text-xl',\r\n        normal: 'text-2xl',\r\n        large: 'text-3xl',\r\n    },\r\n}\r\n\r\nconst ButtonSpinner = forwardRef(\r\n    (\r\n        {\r\n            children,\r\n            className,\r\n            loading = false,\r\n            disabled,\r\n            type = 'button',\r\n            size = 'small',\r\n            variant = 'primary',\r\n            pill,\r\n            spinnerSize = 'normal',\r\n            ...restProps\r\n        },\r\n        ref\r\n    ) => {\r\n        return (\r\n            <button\r\n                ref={ref}\r\n                disabled={disabled}\r\n                type={type}\r\n                className={cls(`\r\n                ${classes.base}\r\n                ${classes.size[size]}\r\n                ${classes.variant[variant]}\r\n                ${pill && classes.pill}\r\n                ${disabled && classes.disabled}\r\n                ${className}\r\n            `)}\r\n                {...restProps}\r\n            >\r\n                {loading && (\r\n                    <FaSpinner\r\n                        className={cls(\r\n                            `animate-spin ${classes.spinnerSize[spinnerSize]}`\r\n                        )}\r\n                    />\r\n                )}\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n)\r\n\r\nButtonSpinner.displayName = 'ButtonSpinner'\r\n\r\nexport default ButtonSpinner\r\n","import React, { forwardRef } from 'react'\nimport { cls } from './../../services/helpers'\n\nconst classes = {\n    base: 'focus:outline-none transition ease-in-out duration-300 px-1',\n    disabled: 'opacity-50 cursor-not-allowed',\n    size: {\n        small: 'px-3 py-1 text-sm',\n        normal: 'px-3 py-2',\n        large: 'px-3 py-3 text-lg',\n    },\n    variant: {\n        primary:\n            'border border-primary focus:ring-2 focus:ring-primary focus:ring-opacity-50',\n        secondary:\n            'border border-light-4 focus:ring-2 focus:ring-light-4 focus:ring-opacity-50',\n        danger: 'border border-red-500 focus:ring-2 focus:ring-red-500 focus:ring-opacity-50',\n    },\n    rounded: {\n        none: 'rounded-none',\n        small: 'rounded-sm',\n        medium: 'rounded-md',\n        large: 'rounded-lg',\n        xl: 'rounded-xl',\n    },\n}\n\nconst Input = forwardRef(\n    (\n        {\n            className,\n            disabled,\n            type = 'text',\n            size = 'small',\n            variant = 'primary',\n            rounded = 'none',\n            ...restProps\n        },\n        ref\n    ) => {\n        return (\n            <input\n                ref={ref}\n                disabled={disabled}\n                type={type}\n                className={cls(`\n                ${classes.base}\n                ${classes.size[size]}\n                ${classes.variant[variant]}\n                ${classes.rounded[rounded]}\n                ${disabled && classes.disabled}\n                ${className}\n            `)}\n                {...restProps}\n            />\n        )\n    }\n)\n\nInput.displayName = 'Input'\n\nexport default Input\n","import { useState } from 'react'\nimport useWindowSize from './useWindowSize'\nimport useDeepCompareEffect from './useDeepCompareEffect'\n\nconst temp = (values) => {\n    for (let index = 0; index < values.length; index++) {\n        if (typeof values[index] !== 'undefined') {\n            return values[index]\n        }\n    }\n}\n\nconst useResponsive = ({ xxl, xl, lg, md, sm, base }) => {\n    const [value, setValue] = useState(() => temp([xxl, xl, lg, md, sm, base]))\n\n    const { width } = useWindowSize()\n    useDeepCompareEffect(() => {\n        if (width >= 1536) {\n            setValue(temp([xxl, xl, lg, md, sm, base]))\n        } else if (width >= 1280) {\n            setValue(temp([xl, lg, md, sm, base]))\n        } else if (width >= 1024) {\n            setValue(temp([lg, md, sm, base]))\n        } else if (width >= 768) {\n            setValue(temp([md, sm, base]))\n        } else if (width >= 640) {\n            setValue(temp([sm, base]))\n        } else {\n            setValue(base)\n        }\n    }, [width])\n    return [value]\n}\n\nexport default useResponsive\n"],"sourceRoot":""}